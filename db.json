{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/robot.txt","path":"robot.txt","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/Ubuntu12.04.jpg","path":"images/Ubuntu12.04.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"a3f41b186f0c31c39aedfbc4ca079b1ec1dcb046","modified":1477661749549},{"_id":"source/CNAME","hash":"2f63660aeaf5a06f77121866b21b69d84bd000cf","modified":1477661749549},{"_id":"source/robot.txt","hash":"0191e098242d219531f143b764d7ee95909ccd29","modified":1479038512711},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1479038512711},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1477661749549},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1477661749549},{"_id":"themes/next/.javascript_ignore","hash":"de73037693881ad2626e2962e8c5ab243f7b24d0","modified":1479038512711},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1477661749549},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1477661749549},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1477661749549},{"_id":"themes/next/_config.yml","hash":"b9d1daac47f28ce7c002c1e54d6dda0f13534b89","modified":1479038512711},{"_id":"themes/next/bower.json","hash":"023b5b945bc45c205129a18e26d304fb9caa15c7","modified":1479038512711},{"_id":"themes/next/gulpfile.coffee","hash":"d267332ec1461042fb16a9cb0737e1555fb4b79e","modified":1477661749549},{"_id":"themes/next/package.json","hash":"0d43e71169c5e08917e73cd12aa79562c836712e","modified":1479038512711},{"_id":"source/_posts/1_用hexo搭建github博客.md","hash":"c1fd4e7f0a50b80ed111a993383f3bb1c8555d18","modified":1479484098457},{"_id":"source/_posts/2_ubuntu中使用shadowsocks.md","hash":"7301a6970d578b49f82ec7d658516df0f4bbaeb3","modified":1479484068547},{"_id":"source/_posts/3_搭建亚马逊云aws免费服务器.md","hash":"fc8c64ea5aef03fe344d02cd63a6ecb4e19ad3f7","modified":1477917848653},{"_id":"source/_posts/4_expect实现自动登录.md","hash":"834ab2f56fd2562a833679af0b93418cba7d57c8","modified":1479484329777},{"_id":"source/_posts/5_Raspberrypi系统安装.md","hash":"96453ae2151e742241efc5fd1b67f08af2f1128e","modified":1479483807957},{"_id":"source/_posts/6_python网络爬虫.md","hash":"847a50cceb7be1b76c26e332f645b04b00d74cb3","modified":1479483818167},{"_id":"source/_posts/7_爬虫框架scrapy.md","hash":"23fcac99e347de03d438afc7e9239e206fe57520","modified":1479483831077},{"_id":"source/_posts/8_vim环境配置.md","hash":"ca80b6966cae4685a0821cb77e0db6b631f3a61c","modified":1479483047256},{"_id":"source/about/index.md","hash":"147444d6543c80d3a7d4a81136afda31ea95e76c","modified":1479038512711},{"_id":"source/categories/index.md","hash":"23cc05ea56b29ba253067d1d8c59cbd56da1adf0","modified":1479038512711},{"_id":"source/tags/index.md","hash":"c10f3e20625750b4aca4259f5c87272119621b27","modified":1477661749549},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1477661749549},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1477661749549},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1477661749549},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1477661749549},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1477661749549},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1477661749549},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1477661749549},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1477661749549},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1477661749549},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1477661749549},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1477661749549},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1477661749549},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1477661749549},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1477661749549},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1477661749549},{"_id":"themes/next/layout/_layout.swig","hash":"6465660f124f8da46b78d639c184e1140c4243c5","modified":1477915573652},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1477661749559},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1477661749559},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1477661749559},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1477661749559},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1477915573652},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1477661749559},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1477661749559},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1477661749609},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1477661749619},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1477661749619},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749569},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"bc311e9f4333188da5c9c721ae467ba14410d5b2","modified":1477661749549},{"_id":"themes/next/layout/_macro/post.swig","hash":"ea40d388ae190e2228cbe54f054be621e3fa061c","modified":1477661749549},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1477661749549},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"65b32c7e7305eec4c933550a1fa3d124e7421519","modified":1479483449937},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1477661749559},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1477661749559},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1477661749559},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1477661749559},{"_id":"themes/next/layout/_partials/head.swig","hash":"06b6604176367af52587312e2575b52ecf53c3d9","modified":1477661749559},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1477661749559},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1477661749559},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1477661749559},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1477661749559},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1477661749559},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1477661749559},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1477661749559},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1477661749559},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1477661749559},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1477661749559},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1477661749569},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1477661749579},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1477661749579},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1477661749579},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1477661749579},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1477661749579},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1477661749579},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1477661749579},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1477661749579},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477661749579},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477661749579},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1477661749579},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1477661749579},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1477661749579},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749559},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749559},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749569},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749569},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749569},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477661749569},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1477661749559},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1477661749559},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1477661749559},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1477661749559},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1477661749559},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1477661749559},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1477661749559},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1477661749559},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1477661749559},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"60a51a33416e2b86ac9fbefc86b80f2f5f60e1c0","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1477661749559},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"2ebc8c66f026016603aefff22c558e3c26a26d15","modified":1479038512711},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1477661749569},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1477661749569},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1477661749569},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1477661749569},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d0883a12dd3d8a5e2840c050ae7807a32640e8ea","modified":1479038512711},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"e43eccbaee986cf65f7dddf3e7c39c5da807d513","modified":1477661749569},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1477661749579},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1477661749579},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1477661749579},{"_id":"themes/next/source/js/src/motion.js","hash":"daf74d4d3c233f365c0a2493ebfbea1070c02ec0","modified":1477915573652},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1477661749579},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1477661749579},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1477661749579},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1479038512711},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1479038512721},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1479038512721},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1479038512721},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1479038512721},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1479038512741},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1479038512741},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1479038512741},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1479038512741},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1479038512741},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1479038512741},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1479038512741},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1479038512741},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1479038512741},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1479038512751},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1479038512751},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1479038512751},{"_id":"themes/next/source/images/Ubuntu12.04.jpg","hash":"0906a343477d7004a618f71071d6cd2896cc9ce6","modified":1477661749579},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1479038512741},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1477661749559},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1477915573652},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1477915573652},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1477661749569},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1477915573652},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1477661749569},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1477661749569},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1477661749569},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1477661749569},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c2f6ef53c4ec12ebbf8855ad83c784add44d33e2","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"2f3461616a7f32f3c7e6e052d3ffcfb7f82662d2","modified":1477661749569},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1477661749579},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1479038512721},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1479038512721},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1479038512741},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1479038512741},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1479038512741},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1479038512721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1479038512741},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1479038512751},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1477915573652},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1477915573652},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1479038512711},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e533b70f281275357fce083422e5d26bbf69d543","modified":1479038512711},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b443d49dcc5c13f8ab18c0afa3cdd1eb6f969b97","modified":1479038512711},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1477661749559},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"0ff064319b46df713303efcb5c7effd356af6851","modified":1477915573652},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1477661749569},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477661749569},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477661749569},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1479038512711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1479038512711},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1479038512741},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1479038512731},{"_id":"public/baidusitemap.xml","hash":"eb6174668c3a6dc17f1adf8aeee103112fbf2b3d","modified":1479487486056},{"_id":"public/atom.xml","hash":"558e8b417771e458b1155530e12cfe01d6ea9834","modified":1479487486111},{"_id":"public/sitemap.xml","hash":"367abcc44bfbdf175f96651349b4f0744312c71b","modified":1479487486113},{"_id":"public/404.html","hash":"200b2123748587ccfeb784d673ae5dfa981ede54","modified":1479487486164},{"_id":"public/about/index.html","hash":"92f758fc97042af3509c3d0b21a386b20aa91f2c","modified":1479487486165},{"_id":"public/categories/index.html","hash":"90bac77c2d64558a1cca3f32d0162485fb2efd37","modified":1479487486165},{"_id":"public/tags/index.html","hash":"650092667e93dc3f51032082351cbbba678853cb","modified":1479487486165},{"_id":"public/2016/11/18/8_vim环境配置/index.html","hash":"df30f2be89d5f6a90a52269e38d8b96c60086289","modified":1479487486166},{"_id":"public/2016/11/08/7_爬虫框架scrapy/index.html","hash":"3fcb0fa90b8514b6afcfc13a42ac321001483f05","modified":1479487486166},{"_id":"public/2016/11/01/6_python网络爬虫/index.html","hash":"06d558a11a7857abf2a9f46a2a25443b99e66ac5","modified":1479487486167},{"_id":"public/2016/11/01/5_Raspberrypi系统安装/index.html","hash":"fa9ac896d4bf746c69cf4664bc19e51190cffb6d","modified":1479487486167},{"_id":"public/2016/10/22/4_expect实现自动登录/index.html","hash":"99751400f6050c5ccd9b1ab7c601577a5b52baac","modified":1479487486168},{"_id":"public/2016/10/18/3_搭建亚马逊云aws免费服务器/index.html","hash":"bbf697435832551b2a8fb58c46de95fd8418f4a2","modified":1479487486169},{"_id":"public/2016/10/09/2_ubuntu中使用shadowsocks/index.html","hash":"faa127f851dc66605d8f428cfd323f099774b971","modified":1479487486169},{"_id":"public/2016/09/29/1_用hexo搭建github博客/index.html","hash":"325a56a446f76296001a7ea7c9da2799e8148579","modified":1479487486169},{"_id":"public/archives/index.html","hash":"3c01777469272236a43b04f309318ec004758407","modified":1479487486170},{"_id":"public/archives/2016/index.html","hash":"eb294f9b2228642f830f4343fca79de06c5f3fd5","modified":1479487486170},{"_id":"public/archives/2016/09/index.html","hash":"756919d6a241335b2ea2a415417ff74686a8df53","modified":1479487486170},{"_id":"public/archives/2016/10/index.html","hash":"7dd922f37d04b2975311b30e2763c9829f575e12","modified":1479487486171},{"_id":"public/archives/2016/11/index.html","hash":"067d95559b41be433d2490713648a18193579207","modified":1479487486173},{"_id":"public/categories/linux/index.html","hash":"a377e867de1aee0744890670a8a4b73e3204eae7","modified":1479487486174},{"_id":"public/categories/script/index.html","hash":"0fad4d9c307ea5eaa03b9fd84ee8203ef275e4fc","modified":1479487486174},{"_id":"public/categories/linux/hexo/index.html","hash":"a9243f610d84e3dcf0f151a9e52cf68af90a56a7","modified":1479487486174},{"_id":"public/categories/linux/raspberrypi/index.html","hash":"66fbfce01cfd7ce71acba5d7eabeee8f0c23b3e1","modified":1479487486174},{"_id":"public/categories/python/index.html","hash":"c291486b65d9bb6885d8215a3fbabd1dfa127f89","modified":1479487486175},{"_id":"public/categories/linux/online/index.html","hash":"b704a75c251e68b3e0eb2f9166782d201dcbf3e8","modified":1479487486175},{"_id":"public/categories/linux/vim/index.html","hash":"a6ac6e43ebfa7f34665662a3172f3715cdf3d7ea","modified":1479487486175},{"_id":"public/categories/linux/server/index.html","hash":"04f9e973d1d2dbdf041204a2ea53f549682525f1","modified":1479487486175},{"_id":"public/categories/script/shell/index.html","hash":"4a51e36644f3da530c4376c02ea236019bea8746","modified":1479487486176},{"_id":"public/categories/python/crawler/index.html","hash":"2642857a6c0918d832b5ca930c43d7c5495ab4c5","modified":1479487486176},{"_id":"public/index.html","hash":"d0ba51de846724f06171da504a20b0280e02f865","modified":1479487486176},{"_id":"public/tags/hexo/index.html","hash":"88206e1cf736d558d66f5fef3e021f53030660ed","modified":1479487486176},{"_id":"public/tags/npm/index.html","hash":"865a39c1b9e0e12ebf0721b8d37bbbba5ee8ba61","modified":1479487486176},{"_id":"public/tags/shadowsocks/index.html","hash":"8b71681d1221d5257cd04c2c919c1a956d125101","modified":1479487486177},{"_id":"public/tags/proxychains/index.html","hash":"bfe3d5cd57ed15bdca39be991ee30082135ae1b9","modified":1479487486177},{"_id":"public/tags/aws/index.html","hash":"79184c855a3b1a387fb88c60e5127b2537c829a5","modified":1479487486177},{"_id":"public/tags/mosh/index.html","hash":"2ea66c986f011c1a6fab056d64c031835a46e7e4","modified":1479487486177},{"_id":"public/tags/expect/index.html","hash":"2dc01d75a0632d5621e9201f8af9f4b5e188f7b1","modified":1479487486177},{"_id":"public/tags/raspberrypi/index.html","hash":"e1cf6881869a4d5ed9e93eac7abc03f5f862b642","modified":1479487486178},{"_id":"public/tags/crawler/index.html","hash":"2c941c25d4a7cf10f937392de9d9cc9e90f7a0e3","modified":1479487486178},{"_id":"public/tags/scrapy/index.html","hash":"2a6e6c9ce159df7a9d0c2e867dd60fb31f0bfa06","modified":1479487486178},{"_id":"public/tags/vim/index.html","hash":"fe46f44940726078f59fcc6f506ce00eda8232d3","modified":1479487486178},{"_id":"public/CNAME","hash":"2f63660aeaf5a06f77121866b21b69d84bd000cf","modified":1479487486323},{"_id":"public/robot.txt","hash":"0191e098242d219531f143b764d7ee95909ccd29","modified":1479487486323},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1479487486324},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1479487486324},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1479487486324},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1479487486325},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1479487486326},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1479487486326},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1479487486326},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1479487486326},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1479487486327},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1479487486327},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1479487486327},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1479487486327},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1479487486327},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1479487486328},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1479487486328},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479487486328},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479487486328},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479487486328},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479487486329},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479487486329},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479487486329},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1479487486329},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1479487486330},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1479487486330},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1479487489831},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1479487489854},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1479487489861},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1479487489879},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1479487489879},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1479487489879},{"_id":"public/js/src/motion.js","hash":"daf74d4d3c233f365c0a2493ebfbea1070c02ec0","modified":1479487489880},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1479487489880},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1479487489880},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1479487489880},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1479487489880},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1479487489881},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1479487489881},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1479487489881},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1479487489881},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1479487489882},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1479487489882},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1479487489882},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1479487489882},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1479487489882},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1479487489883},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1479487489883},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1479487489883},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1479487489883},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1479487489883},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1479487489884},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1479487489884},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1479487489884},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1479487489884},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1479487489884},{"_id":"public/css/main.css","hash":"14b19f4c9c2352cb406cbaeb973e0443c79e5998","modified":1479487489885},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1479487489885},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1479487489885},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1479487489885},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1479487489886},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1479487489886},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1479487489886},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1479487489886},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1479487489887},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1479487489887},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1479487489887},{"_id":"public/images/Ubuntu12.04.jpg","hash":"0906a343477d7004a618f71071d6cd2896cc9ce6","modified":1479487489899},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1479487489920}],"Category":[{"name":"linux","_id":"civo0mxll0005ulyqswfsbxy4"},{"name":"script","_id":"civo0mxoi000julyqw8gtpqyg"},{"name":"hexo","parent":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxov000mulyqw5fd1jlx"},{"name":"raspberrypi","parent":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxp7000pulyqyuth78eb"},{"name":"python","_id":"civo0mxpp000tulyqgzfznokk"},{"name":"online","parent":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxq4000yulyqoi3c3wwi"},{"name":"vim","parent":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxqr0017ulyqk5rurso2"},{"name":"server","parent":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxr6001bulyqb8z57pp3"},{"name":"shell","parent":"civo0mxoi000julyqw8gtpqyg","_id":"civo0mxrf001fulyq05uqspsm"},{"name":"crawler","parent":"civo0mxpp000tulyqgzfznokk","_id":"civo0mxrp001julyqp8ohiktq"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n  \n</body>\n\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n  \n</body>\n\n</html>","date":"2016-10-28T13:35:49.549Z","updated":"2016-10-28T13:35:49.549Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"civo0mwog0000ulyqsqs37djw","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n  \n</body>\n\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n  \n</body>\n\n</html>"},{"title":"about","type":"about","date":"2016-10-24T06:42:17.000Z","_content":"\n<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n","source":"about/index.md","raw":"---\ntitle: about\ntype: about\ndate: 2016-10-24 14:42:17\n---\n\n<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n","updated":"2016-11-13T12:01:52.711Z","path":"about/index.html","comments":1,"layout":"page","_id":"civo0mxku0002ulyqmlts0tl5","content":"<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n","excerpt":"","more":"<div class=\"ds-recent-visitors\" data-num-items=\"39\" data-avatar-size=\"40\" id=\"ds-recent-visitors\"></div>\n"},{"title":"categories","type":"categories","comments":0,"date":"2016-10-24T06:56:25.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: categories\ncomments: false\ndate: 2016-10-24 14:56:25\n\n---\n","updated":"2016-11-13T12:01:52.711Z","path":"categories/index.html","layout":"page","_id":"civo0mxl70004ulyq8vm07mh7","content":"","excerpt":"","more":""},{"title":"tags","type":"tags","comments":0,"date":"2016-10-24T06:56:38.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: tags\ncomments: false\ndate: 2016-10-24 14:56:38\n---\n","updated":"2016-10-28T13:35:49.549Z","path":"tags/index.html","layout":"page","_id":"civo0mxmg0008ulyqkf4tjfhk","content":"","excerpt":"","more":""}],"Post":[{"title":"用hexo搭建github博客","date":"2016-09-29T12:19:57.000Z","_content":"\n### 安装hexo\nHexo官网 https://hexo.io/zh-cn/\n\n安装Node.js npm git-core\n`npm install hexo-deployer-git --save`\n安装 hexo\n`npm install -g hexo-cli`\n<!-- more -->\n### 使用hexo\n#### 生成文件\n`hexo init hexo`\n`cd hexo`\n`npm install`\n`sudo apt-get install nodejs npm git`\n安装 hexo-deployer-git，否则会报 ERROR Deployer not found: git 的错误。\n#### hexo命令\n```\nhexo new \"postName\"\t\t#新建文章\nhexo new page \"pageName\"\t#新建页面\nhexo generate\t\t\t#生成静态页面至public目录\nhexo server\t\t\t#开启预览访问端口（默认端口4000）\nhexo deploy\t\t\t#将.deploy目录部署到GitHub\nhexo help\t\t\t#查看帮助\nhexo version\t\t\t#查看Hexo的版本\n\n#命令的简写为：\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n\nhexo d -g\t\t#生成加部署\nhexo s -g\t\t#生成加预览，localhost:4000，查看搭建效果\n\nhexo clean && hexo d -g #部署\n```\n#### 部署到Github和Coding上\n在Github和Coding上添加密匙，设置好终端中的用户名和邮箱，测试是否连接成功\n`git config --global user.name \"Your Name\"`\n`git config --global user.email \"email@example.com\"`\n`ssh-keygen -t rsa -C \"youremail@example.com\"` 把~/.ssh/id_rsa.pub的内容添加到网站上\n`ssh -T git@git.coding.net`\n`ssh -T git@github.com`\n修改_config.yml文件\n```\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n- type: git\n  repo: git@github.com:kcoewoys/kcoewoys.github.io.git\n  branch: master\n- type: git\n  repo: git@git.coding.net:kcoewoys/kcoewoys.git\n  branch: master\n```\n#### 绑定域名\n先到阿里云上申请一个域名，top域名第一年只要2块钱，解析设置如图：\n![万网解析设置](http://ofat4idzj.bkt.clouddn.com/%E4%B8%87%E7%BD%91%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.png)\ngithub实现域名绑定，需要在项目根目录有一个CNAME文件，为此，在hexo/source/下新建一个CNAME文件，内容为你要绑定的域名。\ncoding实现域名绑定，需要到项目里面进行设置，如图：\n![coding page 设置](http://ofat4idzj.bkt.clouddn.com/coding%20page%20%E8%AE%BE%E7%BD%AE.png)\n#### git管理\n新建一个hexo分支，用于保存源文件，并将github上的hexo分支设为默认分支;\ngit clone默认会把远程仓库整个给clone下来,但只会在本地默认创建一个默认分支\n`git branch -r`    查看远程分支\n`git branch -a`    查看所有分支\n建立本地对应分支\n`git checkout --track origin/hexo`\n`git checkout -b hexo origin/hexo`\n`git checkout origin/hexo`\n推送分支\n`git push origin hexo`\n撤销本地所有的修改\n`git checkout . && git clean -xdf`\n\n### 使用主题和一些修改\nhexo的可用主题 https://hexo.io/themes/\nnext主题网站 http://theme-next.iissnan.com/\n`git clone https://github.com/iissnan/hexo-theme-next.git themes/next`\n修改配置文件 _config.yml\n`theme: next`\n```\nnext\\source\\css\\_variables\\base.styl\t\t\t#修改颜色变量\nnext\\source\\css\\_custom\\custom.styl\t\t\t#自定义\nnext\\source\\css\\_common\\components\\sidebar\\sidebar.styl\t#修改侧边栏\nnext\\source\\css\\_common\\components\\highlight\\theme.styl #修改代码主题\n```\n**添加背景动画**\n编辑`next/layout/_layout.swig`，在`</body>`标签上方添加\n```\n<script type=\"text/javascript\" color=\"20,20,20\" opacity='0.6' zIndex=\"-2\" count=\"100\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n```\n**添加点击导航栏外面自动关闭**\n编辑`\\source\\js\\src\\motion.js`，在倒数第二行添加js方法\n```\n// $('.sidebar-inner').css({'height':'100%'});\n$('body').on('click',function(e){\n    var bSidebarShow = $('#sidebar').css('display')==='block' && $('#sidebar').width() > 0;\n    var bFlag = $(e.target).parents('#sidebar,.sidebar-toggle').length > 0;\n    if(bSidebarShow && !bFlag){\n          $('.sidebar-toggle-line-wrap').trigger('click');\n          e.preventDefault();\n    }\n});\n```\n**添加网易云音乐**\n编辑`next/layout/_macro/sidebar.swig`，在`theme.links`下一段添加外链播放器代码\n```\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=493911&auto=0&height=66\"></iframe>\n```\n\n### 本地调试\n`hexo s -s -i 192.168.60.222 &`\t\t在后台开启服务\n`hexo clean && hexo g`\t\t\t每次修改后执行，在浏览器可以查看变化\n\n### npm相关\n```\nnpm安装\nwget https://npmjs.org/install.sh\nsudo chmod 777 install.sh & ./install.sh\n\nnpm install -g nrm\t//安装npm源管理器nrm\nnrm ls\t\t\t//列出可选的源\nnrm test\t\t//测试所有源的响应时间\nnrm test npm\t\t//测试当前源的响应时间\nnrm use taobao\t\t//切换到taobao\n\nnpm install pkg \t\t\t//本地安装\nnpm install -g pkg \t\t\t//全局安装\nnpm uninstall pkg \t\t\t//卸载\nnpm remove pkg \t\t\t\t//移除\nnpm update pkg \t\t\t\t//package更新\nnpm search pkg \t\t\t\t//搜索\n\nnpm ls\t\t\t\t//查看安装了哪些包\nnpm root \t\t\t//查看当前包的安装路径\nnpm root -g \t\t\t//查看全局的包的安装路径\nnpm help \t\t\t//帮助，如果要单独查看install命令的帮助，可以使用的npm help install\nnpm install --help \t\t//列出所有 npm install 可能的参数形式\n\nnpm set proxy 127.0.0.1:8123 \t//设置proxy\nnpm get proxy \t\t\t//查看proxy\nnpm config delete proxy\t\t//删除proxy\n\nnpm install \t\t\t//方法就可以根据package.json安装所有的依赖包\nnpm install pkg--save \t\t//安装的同时将信息写入package.json中项目路径中\n```\n","source":"_posts/1_用hexo搭建github博客.md","raw":"---\ntitle: 用hexo搭建github博客\ndate: 2016-9-29 20:19:57\ntags: [hexo,npm]\ncategories: [linux,hexo]\n\n---\n\n### 安装hexo\nHexo官网 https://hexo.io/zh-cn/\n\n安装Node.js npm git-core\n`npm install hexo-deployer-git --save`\n安装 hexo\n`npm install -g hexo-cli`\n<!-- more -->\n### 使用hexo\n#### 生成文件\n`hexo init hexo`\n`cd hexo`\n`npm install`\n`sudo apt-get install nodejs npm git`\n安装 hexo-deployer-git，否则会报 ERROR Deployer not found: git 的错误。\n#### hexo命令\n```\nhexo new \"postName\"\t\t#新建文章\nhexo new page \"pageName\"\t#新建页面\nhexo generate\t\t\t#生成静态页面至public目录\nhexo server\t\t\t#开启预览访问端口（默认端口4000）\nhexo deploy\t\t\t#将.deploy目录部署到GitHub\nhexo help\t\t\t#查看帮助\nhexo version\t\t\t#查看Hexo的版本\n\n#命令的简写为：\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n\nhexo d -g\t\t#生成加部署\nhexo s -g\t\t#生成加预览，localhost:4000，查看搭建效果\n\nhexo clean && hexo d -g #部署\n```\n#### 部署到Github和Coding上\n在Github和Coding上添加密匙，设置好终端中的用户名和邮箱，测试是否连接成功\n`git config --global user.name \"Your Name\"`\n`git config --global user.email \"email@example.com\"`\n`ssh-keygen -t rsa -C \"youremail@example.com\"` 把~/.ssh/id_rsa.pub的内容添加到网站上\n`ssh -T git@git.coding.net`\n`ssh -T git@github.com`\n修改_config.yml文件\n```\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n- type: git\n  repo: git@github.com:kcoewoys/kcoewoys.github.io.git\n  branch: master\n- type: git\n  repo: git@git.coding.net:kcoewoys/kcoewoys.git\n  branch: master\n```\n#### 绑定域名\n先到阿里云上申请一个域名，top域名第一年只要2块钱，解析设置如图：\n![万网解析设置](http://ofat4idzj.bkt.clouddn.com/%E4%B8%87%E7%BD%91%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.png)\ngithub实现域名绑定，需要在项目根目录有一个CNAME文件，为此，在hexo/source/下新建一个CNAME文件，内容为你要绑定的域名。\ncoding实现域名绑定，需要到项目里面进行设置，如图：\n![coding page 设置](http://ofat4idzj.bkt.clouddn.com/coding%20page%20%E8%AE%BE%E7%BD%AE.png)\n#### git管理\n新建一个hexo分支，用于保存源文件，并将github上的hexo分支设为默认分支;\ngit clone默认会把远程仓库整个给clone下来,但只会在本地默认创建一个默认分支\n`git branch -r`    查看远程分支\n`git branch -a`    查看所有分支\n建立本地对应分支\n`git checkout --track origin/hexo`\n`git checkout -b hexo origin/hexo`\n`git checkout origin/hexo`\n推送分支\n`git push origin hexo`\n撤销本地所有的修改\n`git checkout . && git clean -xdf`\n\n### 使用主题和一些修改\nhexo的可用主题 https://hexo.io/themes/\nnext主题网站 http://theme-next.iissnan.com/\n`git clone https://github.com/iissnan/hexo-theme-next.git themes/next`\n修改配置文件 _config.yml\n`theme: next`\n```\nnext\\source\\css\\_variables\\base.styl\t\t\t#修改颜色变量\nnext\\source\\css\\_custom\\custom.styl\t\t\t#自定义\nnext\\source\\css\\_common\\components\\sidebar\\sidebar.styl\t#修改侧边栏\nnext\\source\\css\\_common\\components\\highlight\\theme.styl #修改代码主题\n```\n**添加背景动画**\n编辑`next/layout/_layout.swig`，在`</body>`标签上方添加\n```\n<script type=\"text/javascript\" color=\"20,20,20\" opacity='0.6' zIndex=\"-2\" count=\"100\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n```\n**添加点击导航栏外面自动关闭**\n编辑`\\source\\js\\src\\motion.js`，在倒数第二行添加js方法\n```\n// $('.sidebar-inner').css({'height':'100%'});\n$('body').on('click',function(e){\n    var bSidebarShow = $('#sidebar').css('display')==='block' && $('#sidebar').width() > 0;\n    var bFlag = $(e.target).parents('#sidebar,.sidebar-toggle').length > 0;\n    if(bSidebarShow && !bFlag){\n          $('.sidebar-toggle-line-wrap').trigger('click');\n          e.preventDefault();\n    }\n});\n```\n**添加网易云音乐**\n编辑`next/layout/_macro/sidebar.swig`，在`theme.links`下一段添加外链播放器代码\n```\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=493911&auto=0&height=66\"></iframe>\n```\n\n### 本地调试\n`hexo s -s -i 192.168.60.222 &`\t\t在后台开启服务\n`hexo clean && hexo g`\t\t\t每次修改后执行，在浏览器可以查看变化\n\n### npm相关\n```\nnpm安装\nwget https://npmjs.org/install.sh\nsudo chmod 777 install.sh & ./install.sh\n\nnpm install -g nrm\t//安装npm源管理器nrm\nnrm ls\t\t\t//列出可选的源\nnrm test\t\t//测试所有源的响应时间\nnrm test npm\t\t//测试当前源的响应时间\nnrm use taobao\t\t//切换到taobao\n\nnpm install pkg \t\t\t//本地安装\nnpm install -g pkg \t\t\t//全局安装\nnpm uninstall pkg \t\t\t//卸载\nnpm remove pkg \t\t\t\t//移除\nnpm update pkg \t\t\t\t//package更新\nnpm search pkg \t\t\t\t//搜索\n\nnpm ls\t\t\t\t//查看安装了哪些包\nnpm root \t\t\t//查看当前包的安装路径\nnpm root -g \t\t\t//查看全局的包的安装路径\nnpm help \t\t\t//帮助，如果要单独查看install命令的帮助，可以使用的npm help install\nnpm install --help \t\t//列出所有 npm install 可能的参数形式\n\nnpm set proxy 127.0.0.1:8123 \t//设置proxy\nnpm get proxy \t\t\t//查看proxy\nnpm config delete proxy\t\t//删除proxy\n\nnpm install \t\t\t//方法就可以根据package.json安装所有的依赖包\nnpm install pkg--save \t\t//安装的同时将信息写入package.json中项目路径中\n```\n","slug":"1_用hexo搭建github博客","published":1,"updated":"2016-11-18T15:48:18.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxk60001ulyq26lloitn","content":"<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><p>Hexo官网 <a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/</a></p>\n<p>安装Node.js npm git-core<br><code>npm install hexo-deployer-git --save</code><br>安装 hexo<br><code>npm install -g hexo-cli</code><br><a id=\"more\"></a></p>\n<h3 id=\"使用hexo\"><a href=\"#使用hexo\" class=\"headerlink\" title=\"使用hexo\"></a>使用hexo</h3><h4 id=\"生成文件\"><a href=\"#生成文件\" class=\"headerlink\" title=\"生成文件\"></a>生成文件</h4><p><code>hexo init hexo</code><br><code>cd hexo</code><br><code>npm install</code><br><code>sudo apt-get install nodejs npm git</code><br>安装 hexo-deployer-git，否则会报 ERROR Deployer not found: git 的错误。</p>\n<h4 id=\"hexo命令\"><a href=\"#hexo命令\" class=\"headerlink\" title=\"hexo命令\"></a>hexo命令</h4><figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo <span class=\"keyword\">new</span> <span class=\"string\">\"postName\"</span>\t\t<span class=\"meta\">#新建文章</span></div><div class=\"line\">hexo <span class=\"keyword\">new</span> page <span class=\"string\">\"pageName\"</span>\t<span class=\"meta\">#新建页面</span></div><div class=\"line\">hexo generate\t\t\t<span class=\"meta\">#生成静态页面至public目录</span></div><div class=\"line\">hexo <span class=\"keyword\">server</span>\t\t\t<span class=\"meta\">#开启预览访问端口（默认端口4000）</span></div><div class=\"line\">hexo deploy\t\t\t<span class=\"meta\">#将.deploy目录部署到GitHub</span></div><div class=\"line\">hexo help\t\t\t<span class=\"meta\">#查看帮助</span></div><div class=\"line\">hexo version\t\t\t<span class=\"meta\">#查看Hexo的版本</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#命令的简写为：</span></div><div class=\"line\">hexo n == hexo <span class=\"keyword\">new</span></div><div class=\"line\">hexo g == hexo generate</div><div class=\"line\">hexo s == hexo <span class=\"keyword\">server</span></div><div class=\"line\">hexo d == hexo deploy</div><div class=\"line\"></div><div class=\"line\">hexo d -g\t\t<span class=\"meta\">#生成加部署</span></div><div class=\"line\">hexo s -g\t\t<span class=\"meta\">#生成加预览，localhost:4000，查看搭建效果</span></div><div class=\"line\"></div><div class=\"line\">hexo clean &amp;&amp; hexo d -g <span class=\"meta\">#部署</span></div></pre></td></tr></table></figure>\n<h4 id=\"部署到Github和Coding上\"><a href=\"#部署到Github和Coding上\" class=\"headerlink\" title=\"部署到Github和Coding上\"></a>部署到Github和Coding上</h4><p>在Github和Coding上添加密匙，设置好终端中的用户名和邮箱，测试是否连接成功<br><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code><br><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> 把~/.ssh/id_rsa.pub的内容添加到网站上<br><code>ssh -T git@git.coding.net</code><br><code>ssh -T git@github.com</code><br>修改_config.yml文件<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Deployment</span></div><div class=\"line\"><span class=\"comment\">## Docs: http://hexo.io/docs/deployment.html</span></div><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@github.com:kcoewoys/kcoewoys.github.io.git</div><div class=\"line\"><span class=\"attr\">  branch:</span> master</div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@git.coding.net:kcoewoys/kcoewoys.git</div><div class=\"line\"><span class=\"attr\">  branch:</span> master</div></pre></td></tr></table></figure></p>\n<h4 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h4><p>先到阿里云上申请一个域名，top域名第一年只要2块钱，解析设置如图：<br><img src=\"http://ofat4idzj.bkt.clouddn.com/%E4%B8%87%E7%BD%91%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.png\" alt=\"万网解析设置\"><br>github实现域名绑定，需要在项目根目录有一个CNAME文件，为此，在hexo/source/下新建一个CNAME文件，内容为你要绑定的域名。<br>coding实现域名绑定，需要到项目里面进行设置，如图：<br><img src=\"http://ofat4idzj.bkt.clouddn.com/coding%20page%20%E8%AE%BE%E7%BD%AE.png\" alt=\"coding page 设置\"></p>\n<h4 id=\"git管理\"><a href=\"#git管理\" class=\"headerlink\" title=\"git管理\"></a>git管理</h4><p>新建一个hexo分支，用于保存源文件，并将github上的hexo分支设为默认分支;<br>git clone默认会把远程仓库整个给clone下来,但只会在本地默认创建一个默认分支<br><code>git branch -r</code>    查看远程分支<br><code>git branch -a</code>    查看所有分支<br>建立本地对应分支<br><code>git checkout --track origin/hexo</code><br><code>git checkout -b hexo origin/hexo</code><br><code>git checkout origin/hexo</code><br>推送分支<br><code>git push origin hexo</code><br>撤销本地所有的修改<br><code>git checkout . &amp;&amp; git clean -xdf</code></p>\n<h3 id=\"使用主题和一些修改\"><a href=\"#使用主题和一些修改\" class=\"headerlink\" title=\"使用主题和一些修改\"></a>使用主题和一些修改</h3><p>hexo的可用主题 <a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">https://hexo.io/themes/</a><br>next主题网站 <a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/</a><br><code>git clone https://github.com/iissnan/hexo-theme-next.git themes/next</code><br>修改配置文件 _config.yml<br><code>theme: next</code><br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>variables<span class=\"symbol\">\\b</span>ase.styl\t\t\t#修改颜色变量</div><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>custom<span class=\"symbol\">\\c</span>ustom.styl\t\t\t#自定义</div><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>common<span class=\"symbol\">\\c</span>omponents<span class=\"symbol\">\\s</span>idebar<span class=\"symbol\">\\s</span>idebar.styl\t#修改侧边栏</div><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>common<span class=\"symbol\">\\c</span>omponents<span class=\"symbol\">\\h</span>ighlight<span class=\"symbol\">\\t</span>heme.styl #修改代码主题</div></pre></td></tr></table></figure></p>\n<p><strong>添加背景动画</strong><br>编辑<code>next/layout/_layout.swig</code>，在<code>&lt;/body&gt;</code>标签上方添加<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">color</span>=<span class=\"string\">\"20,20,20\"</span> <span class=\"attr\">opacity</span>=<span class=\"string\">'0.6'</span> <span class=\"attr\">zIndex</span>=<span class=\"string\">\"-2\"</span> <span class=\"attr\">count</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>添加点击导航栏外面自动关闭</strong><br>编辑<code>\\source\\js\\src\\motion.js</code>，在倒数第二行添加js方法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// $('.sidebar-inner').css(&#123;'height':'100%'&#125;);</span></div><div class=\"line\">$(<span class=\"string\">'body'</span>).on(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> bSidebarShow = $(<span class=\"string\">'#sidebar'</span>).css(<span class=\"string\">'display'</span>)===<span class=\"string\">'block'</span> &amp;&amp; $(<span class=\"string\">'#sidebar'</span>).width() &gt; <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> bFlag = $(e.target).parents(<span class=\"string\">'#sidebar,.sidebar-toggle'</span>).length &gt; <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(bSidebarShow &amp;&amp; !bFlag)&#123;</div><div class=\"line\">          $(<span class=\"string\">'.sidebar-toggle-line-wrap'</span>).trigger(<span class=\"string\">'click'</span>);</div><div class=\"line\">          e.preventDefault();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p><strong>添加网易云音乐</strong><br>编辑<code>next/layout/_macro/sidebar.swig</code>，在<code>theme.links</code>下一段添加外链播放器代码<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"no\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://music.163.com/outchain/player?type=2&amp;id=493911&amp;auto=0&amp;height=66\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h3><p><code>hexo s -s -i 192.168.60.222 &amp;</code>        在后台开启服务<br><code>hexo clean &amp;&amp; hexo g</code>            每次修改后执行，在浏览器可以查看变化</p>\n<h3 id=\"npm相关\"><a href=\"#npm相关\" class=\"headerlink\" title=\"npm相关\"></a>npm相关</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm安装</div><div class=\"line\">wget https:<span class=\"comment\">//npmjs.org/install.sh</span></div><div class=\"line\">sudo chmod 777 install.<span class=\"keyword\">sh</span> &amp; ./install.<span class=\"keyword\">sh</span></div><div class=\"line\"></div><div class=\"line\">npm install -<span class=\"keyword\">g</span> nrm\t<span class=\"comment\">//安装npm源管理器nrm</span></div><div class=\"line\">nrm <span class=\"keyword\">ls</span>\t\t\t<span class=\"comment\">//列出可选的源</span></div><div class=\"line\">nrm <span class=\"keyword\">test</span>\t\t<span class=\"comment\">//测试所有源的响应时间</span></div><div class=\"line\">nrm <span class=\"keyword\">test</span> npm\t\t<span class=\"comment\">//测试当前源的响应时间</span></div><div class=\"line\">nrm <span class=\"keyword\">use</span> taobao\t\t<span class=\"comment\">//切换到taobao</span></div><div class=\"line\"></div><div class=\"line\">npm install pkg \t\t\t<span class=\"comment\">//本地安装</span></div><div class=\"line\">npm install -<span class=\"keyword\">g</span> pkg \t\t\t<span class=\"comment\">//全局安装</span></div><div class=\"line\">npm uninstall pkg \t\t\t<span class=\"comment\">//卸载</span></div><div class=\"line\">npm remove pkg \t\t\t\t<span class=\"comment\">//移除</span></div><div class=\"line\">npm <span class=\"keyword\">update</span> pkg \t\t\t\t<span class=\"comment\">//package更新</span></div><div class=\"line\">npm <span class=\"keyword\">search</span> pkg \t\t\t\t<span class=\"comment\">//搜索</span></div><div class=\"line\"></div><div class=\"line\">npm <span class=\"keyword\">ls</span>\t\t\t\t<span class=\"comment\">//查看安装了哪些包</span></div><div class=\"line\">npm root \t\t\t<span class=\"comment\">//查看当前包的安装路径</span></div><div class=\"line\">npm root -<span class=\"keyword\">g</span> \t\t\t<span class=\"comment\">//查看全局的包的安装路径</span></div><div class=\"line\">npm <span class=\"keyword\">help</span> \t\t\t<span class=\"comment\">//帮助，如果要单独查看install命令的帮助，可以使用的npm help install</span></div><div class=\"line\">npm install --<span class=\"keyword\">help</span> \t\t<span class=\"comment\">//列出所有 npm install 可能的参数形式</span></div><div class=\"line\"></div><div class=\"line\">npm <span class=\"keyword\">set</span> proxy 127.0.0.1:8123 \t<span class=\"comment\">//设置proxy</span></div><div class=\"line\">npm get proxy \t\t\t<span class=\"comment\">//查看proxy</span></div><div class=\"line\">npm config delete proxy\t\t<span class=\"comment\">//删除proxy</span></div><div class=\"line\"></div><div class=\"line\">npm install \t\t\t<span class=\"comment\">//方法就可以根据package.json安装所有的依赖包</span></div><div class=\"line\">npm install pkg--<span class=\"keyword\">save</span> \t\t<span class=\"comment\">//安装的同时将信息写入package.json中项目路径中</span></div></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><p>Hexo官网 <a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<p>安装Node.js npm git-core<br><code>npm install hexo-deployer-git --save</code><br>安装 hexo<br><code>npm install -g hexo-cli</code><br>","more":"</p>\n<h3 id=\"使用hexo\"><a href=\"#使用hexo\" class=\"headerlink\" title=\"使用hexo\"></a>使用hexo</h3><h4 id=\"生成文件\"><a href=\"#生成文件\" class=\"headerlink\" title=\"生成文件\"></a>生成文件</h4><p><code>hexo init hexo</code><br><code>cd hexo</code><br><code>npm install</code><br><code>sudo apt-get install nodejs npm git</code><br>安装 hexo-deployer-git，否则会报 ERROR Deployer not found: git 的错误。</p>\n<h4 id=\"hexo命令\"><a href=\"#hexo命令\" class=\"headerlink\" title=\"hexo命令\"></a>hexo命令</h4><figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo <span class=\"keyword\">new</span> <span class=\"string\">\"postName\"</span>\t\t<span class=\"meta\">#新建文章</span></div><div class=\"line\">hexo <span class=\"keyword\">new</span> page <span class=\"string\">\"pageName\"</span>\t<span class=\"meta\">#新建页面</span></div><div class=\"line\">hexo generate\t\t\t<span class=\"meta\">#生成静态页面至public目录</span></div><div class=\"line\">hexo <span class=\"keyword\">server</span>\t\t\t<span class=\"meta\">#开启预览访问端口（默认端口4000）</span></div><div class=\"line\">hexo deploy\t\t\t<span class=\"meta\">#将.deploy目录部署到GitHub</span></div><div class=\"line\">hexo help\t\t\t<span class=\"meta\">#查看帮助</span></div><div class=\"line\">hexo version\t\t\t<span class=\"meta\">#查看Hexo的版本</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#命令的简写为：</span></div><div class=\"line\">hexo n == hexo <span class=\"keyword\">new</span></div><div class=\"line\">hexo g == hexo generate</div><div class=\"line\">hexo s == hexo <span class=\"keyword\">server</span></div><div class=\"line\">hexo d == hexo deploy</div><div class=\"line\"></div><div class=\"line\">hexo d -g\t\t<span class=\"meta\">#生成加部署</span></div><div class=\"line\">hexo s -g\t\t<span class=\"meta\">#生成加预览，localhost:4000，查看搭建效果</span></div><div class=\"line\"></div><div class=\"line\">hexo clean &amp;&amp; hexo d -g <span class=\"meta\">#部署</span></div></pre></td></tr></table></figure>\n<h4 id=\"部署到Github和Coding上\"><a href=\"#部署到Github和Coding上\" class=\"headerlink\" title=\"部署到Github和Coding上\"></a>部署到Github和Coding上</h4><p>在Github和Coding上添加密匙，设置好终端中的用户名和邮箱，测试是否连接成功<br><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code><br><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> 把~/.ssh/id_rsa.pub的内容添加到网站上<br><code>ssh -T git@git.coding.net</code><br><code>ssh -T git@github.com</code><br>修改_config.yml文件<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Deployment</span></div><div class=\"line\"><span class=\"comment\">## Docs: http://hexo.io/docs/deployment.html</span></div><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@github.com:kcoewoys/kcoewoys.github.io.git</div><div class=\"line\"><span class=\"attr\">  branch:</span> master</div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> git@git.coding.net:kcoewoys/kcoewoys.git</div><div class=\"line\"><span class=\"attr\">  branch:</span> master</div></pre></td></tr></table></figure></p>\n<h4 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h4><p>先到阿里云上申请一个域名，top域名第一年只要2块钱，解析设置如图：<br><img src=\"http://ofat4idzj.bkt.clouddn.com/%E4%B8%87%E7%BD%91%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.png\" alt=\"万网解析设置\"><br>github实现域名绑定，需要在项目根目录有一个CNAME文件，为此，在hexo/source/下新建一个CNAME文件，内容为你要绑定的域名。<br>coding实现域名绑定，需要到项目里面进行设置，如图：<br><img src=\"http://ofat4idzj.bkt.clouddn.com/coding%20page%20%E8%AE%BE%E7%BD%AE.png\" alt=\"coding page 设置\"></p>\n<h4 id=\"git管理\"><a href=\"#git管理\" class=\"headerlink\" title=\"git管理\"></a>git管理</h4><p>新建一个hexo分支，用于保存源文件，并将github上的hexo分支设为默认分支;<br>git clone默认会把远程仓库整个给clone下来,但只会在本地默认创建一个默认分支<br><code>git branch -r</code>    查看远程分支<br><code>git branch -a</code>    查看所有分支<br>建立本地对应分支<br><code>git checkout --track origin/hexo</code><br><code>git checkout -b hexo origin/hexo</code><br><code>git checkout origin/hexo</code><br>推送分支<br><code>git push origin hexo</code><br>撤销本地所有的修改<br><code>git checkout . &amp;&amp; git clean -xdf</code></p>\n<h3 id=\"使用主题和一些修改\"><a href=\"#使用主题和一些修改\" class=\"headerlink\" title=\"使用主题和一些修改\"></a>使用主题和一些修改</h3><p>hexo的可用主题 <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a><br>next主题网站 <a href=\"http://theme-next.iissnan.com/\">http://theme-next.iissnan.com/</a><br><code>git clone https://github.com/iissnan/hexo-theme-next.git themes/next</code><br>修改配置文件 _config.yml<br><code>theme: next</code><br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>variables<span class=\"symbol\">\\b</span>ase.styl\t\t\t#修改颜色变量</div><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>custom<span class=\"symbol\">\\c</span>ustom.styl\t\t\t#自定义</div><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>common<span class=\"symbol\">\\c</span>omponents<span class=\"symbol\">\\s</span>idebar<span class=\"symbol\">\\s</span>idebar.styl\t#修改侧边栏</div><div class=\"line\">next<span class=\"symbol\">\\s</span>ource<span class=\"symbol\">\\c</span>ss<span class=\"symbol\">\\_</span>common<span class=\"symbol\">\\c</span>omponents<span class=\"symbol\">\\h</span>ighlight<span class=\"symbol\">\\t</span>heme.styl #修改代码主题</div></pre></td></tr></table></figure></p>\n<p><strong>添加背景动画</strong><br>编辑<code>next/layout/_layout.swig</code>，在<code>&lt;/body&gt;</code>标签上方添加<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">color</span>=<span class=\"string\">\"20,20,20\"</span> <span class=\"attr\">opacity</span>=<span class=\"string\">'0.6'</span> <span class=\"attr\">zIndex</span>=<span class=\"string\">\"-2\"</span> <span class=\"attr\">count</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>添加点击导航栏外面自动关闭</strong><br>编辑<code>\\source\\js\\src\\motion.js</code>，在倒数第二行添加js方法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// $('.sidebar-inner').css(&#123;'height':'100%'&#125;);</span></div><div class=\"line\">$(<span class=\"string\">'body'</span>).on(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> bSidebarShow = $(<span class=\"string\">'#sidebar'</span>).css(<span class=\"string\">'display'</span>)===<span class=\"string\">'block'</span> &amp;&amp; $(<span class=\"string\">'#sidebar'</span>).width() &gt; <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> bFlag = $(e.target).parents(<span class=\"string\">'#sidebar,.sidebar-toggle'</span>).length &gt; <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(bSidebarShow &amp;&amp; !bFlag)&#123;</div><div class=\"line\">          $(<span class=\"string\">'.sidebar-toggle-line-wrap'</span>).trigger(<span class=\"string\">'click'</span>);</div><div class=\"line\">          e.preventDefault();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p><strong>添加网易云音乐</strong><br>编辑<code>next/layout/_macro/sidebar.swig</code>，在<code>theme.links</code>下一段添加外链播放器代码<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"no\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://music.163.com/outchain/player?type=2&amp;id=493911&amp;auto=0&amp;height=66\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h3><p><code>hexo s -s -i 192.168.60.222 &amp;</code>        在后台开启服务<br><code>hexo clean &amp;&amp; hexo g</code>            每次修改后执行，在浏览器可以查看变化</p>\n<h3 id=\"npm相关\"><a href=\"#npm相关\" class=\"headerlink\" title=\"npm相关\"></a>npm相关</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm安装</div><div class=\"line\">wget https:<span class=\"comment\">//npmjs.org/install.sh</span></div><div class=\"line\">sudo chmod 777 install.<span class=\"keyword\">sh</span> &amp; ./install.<span class=\"keyword\">sh</span></div><div class=\"line\"></div><div class=\"line\">npm install -<span class=\"keyword\">g</span> nrm\t<span class=\"comment\">//安装npm源管理器nrm</span></div><div class=\"line\">nrm <span class=\"keyword\">ls</span>\t\t\t<span class=\"comment\">//列出可选的源</span></div><div class=\"line\">nrm <span class=\"keyword\">test</span>\t\t<span class=\"comment\">//测试所有源的响应时间</span></div><div class=\"line\">nrm <span class=\"keyword\">test</span> npm\t\t<span class=\"comment\">//测试当前源的响应时间</span></div><div class=\"line\">nrm <span class=\"keyword\">use</span> taobao\t\t<span class=\"comment\">//切换到taobao</span></div><div class=\"line\"></div><div class=\"line\">npm install pkg \t\t\t<span class=\"comment\">//本地安装</span></div><div class=\"line\">npm install -<span class=\"keyword\">g</span> pkg \t\t\t<span class=\"comment\">//全局安装</span></div><div class=\"line\">npm uninstall pkg \t\t\t<span class=\"comment\">//卸载</span></div><div class=\"line\">npm remove pkg \t\t\t\t<span class=\"comment\">//移除</span></div><div class=\"line\">npm <span class=\"keyword\">update</span> pkg \t\t\t\t<span class=\"comment\">//package更新</span></div><div class=\"line\">npm <span class=\"keyword\">search</span> pkg \t\t\t\t<span class=\"comment\">//搜索</span></div><div class=\"line\"></div><div class=\"line\">npm <span class=\"keyword\">ls</span>\t\t\t\t<span class=\"comment\">//查看安装了哪些包</span></div><div class=\"line\">npm root \t\t\t<span class=\"comment\">//查看当前包的安装路径</span></div><div class=\"line\">npm root -<span class=\"keyword\">g</span> \t\t\t<span class=\"comment\">//查看全局的包的安装路径</span></div><div class=\"line\">npm <span class=\"keyword\">help</span> \t\t\t<span class=\"comment\">//帮助，如果要单独查看install命令的帮助，可以使用的npm help install</span></div><div class=\"line\">npm install --<span class=\"keyword\">help</span> \t\t<span class=\"comment\">//列出所有 npm install 可能的参数形式</span></div><div class=\"line\"></div><div class=\"line\">npm <span class=\"keyword\">set</span> proxy 127.0.0.1:8123 \t<span class=\"comment\">//设置proxy</span></div><div class=\"line\">npm get proxy \t\t\t<span class=\"comment\">//查看proxy</span></div><div class=\"line\">npm config delete proxy\t\t<span class=\"comment\">//删除proxy</span></div><div class=\"line\"></div><div class=\"line\">npm install \t\t\t<span class=\"comment\">//方法就可以根据package.json安装所有的依赖包</span></div><div class=\"line\">npm install pkg--<span class=\"keyword\">save</span> \t\t<span class=\"comment\">//安装的同时将信息写入package.json中项目路径中</span></div></pre></td></tr></table></figure>"},{"title":"ubuntu中使用shadowsocks","date":"2016-10-09T07:55:30.000Z","_content":"\n### 安装shadowsock\nshadowsock主页 https://github.com/shadowsocks/shadowsocks\n`sudo apt-get update`\n`sudo apt-get install python-gevent python-pip`\n`sudo pip install shadowsocks`\n<!-- more -->\n### 编辑配置文件\n`sudo vi etc/shadow.config`\n```\n{\n\t\"server\":\"47.90.65.76\",\n\t\"server_port\":41754,\n\t\"local_port\":1080,\n\t\"password\":\"euwatP\",\n\t\"timeout\":600,\n\t\"method\":\"chacha20\"\n}\n```\n\n### 启动\n`sudo sslocal -c /etc/shadow.conf -d start`\n`sudo sslocal -c /etc/shadow.conf -d stop`\n后台长期启动shadowsockts\n`nohup sslocal -c etc/shadow.config &\n\n* 设置开机自动启动\n`sudo vim /etc/rc.local`\n在*exit 0*前加上一行：\n`/usr/local/bin/sslocal -c /etc/shadow.conf`\n\n### 安装一些加密方式所依赖的库\npython-m2crypto\n`apt-get install python-m2crypto`\nlibsodium    //chacha20加密方式需要用到\n```\nwget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz\ntar zxf LATEST.tar.gz\ncd libsodium*\n./configure\nmake && make install\n \necho /usr/local/lib > /etc/ld.so.conf.d/usr_local_lib.conf    # 修复关联\nldconfig\n```\n\n### 终端中使用shadowsocks\n可以使用的有 **Privoxy Polipo proxychains**，前两者貌似不支持ssh,所以就选择了**proxychains**\n\n* 安装proxychains\n`sudo apt-get install proxychains`\n`sudo vi /etc/proxychains.conf`\n```\nstrict_chain\nproxy_dns\nremote_dns_subnet 224\ntcp_read_time_out 15000\ntcp_connect_time_out 8000j\nlocalnet 127.0.0.0/255.0.0.0\nquiet_mode\n \n[ProxyList]\nsocks5  127.0.0.1 1080\n```\n* 使用例子\n`proxychains curl www.google.com`\n```\nproxychains bash\ncurl ip.gs\ncurl www.google.com \nwget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.8.1.tar.xz\ngit clone git@github.com:baidu/Paddle.git\n```\n","source":"_posts/2_ubuntu中使用shadowsocks.md","raw":"---\ntitle: ubuntu中使用shadowsocks\ndate: 2016-10-09 15:55:30\ntags: [shadowsocks,proxychains]\ncategories: [linux,online]\n\n---\n\n### 安装shadowsock\nshadowsock主页 https://github.com/shadowsocks/shadowsocks\n`sudo apt-get update`\n`sudo apt-get install python-gevent python-pip`\n`sudo pip install shadowsocks`\n<!-- more -->\n### 编辑配置文件\n`sudo vi etc/shadow.config`\n```\n{\n\t\"server\":\"47.90.65.76\",\n\t\"server_port\":41754,\n\t\"local_port\":1080,\n\t\"password\":\"euwatP\",\n\t\"timeout\":600,\n\t\"method\":\"chacha20\"\n}\n```\n\n### 启动\n`sudo sslocal -c /etc/shadow.conf -d start`\n`sudo sslocal -c /etc/shadow.conf -d stop`\n后台长期启动shadowsockts\n`nohup sslocal -c etc/shadow.config &\n\n* 设置开机自动启动\n`sudo vim /etc/rc.local`\n在*exit 0*前加上一行：\n`/usr/local/bin/sslocal -c /etc/shadow.conf`\n\n### 安装一些加密方式所依赖的库\npython-m2crypto\n`apt-get install python-m2crypto`\nlibsodium    //chacha20加密方式需要用到\n```\nwget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz\ntar zxf LATEST.tar.gz\ncd libsodium*\n./configure\nmake && make install\n \necho /usr/local/lib > /etc/ld.so.conf.d/usr_local_lib.conf    # 修复关联\nldconfig\n```\n\n### 终端中使用shadowsocks\n可以使用的有 **Privoxy Polipo proxychains**，前两者貌似不支持ssh,所以就选择了**proxychains**\n\n* 安装proxychains\n`sudo apt-get install proxychains`\n`sudo vi /etc/proxychains.conf`\n```\nstrict_chain\nproxy_dns\nremote_dns_subnet 224\ntcp_read_time_out 15000\ntcp_connect_time_out 8000j\nlocalnet 127.0.0.0/255.0.0.0\nquiet_mode\n \n[ProxyList]\nsocks5  127.0.0.1 1080\n```\n* 使用例子\n`proxychains curl www.google.com`\n```\nproxychains bash\ncurl ip.gs\ncurl www.google.com \nwget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.8.1.tar.xz\ngit clone git@github.com:baidu/Paddle.git\n```\n","slug":"2_ubuntu中使用shadowsocks","published":1,"updated":"2016-11-18T15:47:48.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxkz0003ulyqhudz99sa","content":"<h3 id=\"安装shadowsock\"><a href=\"#安装shadowsock\" class=\"headerlink\" title=\"安装shadowsock\"></a>安装shadowsock</h3><p>shadowsock主页 <a href=\"https://github.com/shadowsocks/shadowsocks\" target=\"_blank\" rel=\"external\">https://github.com/shadowsocks/shadowsocks</a><br><code>sudo apt-get update</code><br><code>sudo apt-get install python-gevent python-pip</code><br><code>sudo pip install shadowsocks</code><br><a id=\"more\"></a></p>\n<h3 id=\"编辑配置文件\"><a href=\"#编辑配置文件\" class=\"headerlink\" title=\"编辑配置文件\"></a>编辑配置文件</h3><p><code>sudo vi etc/shadow.config</code><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"server\"</span>:<span class=\"string\">\"47.90.65.76\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"server_port\"</span>:<span class=\"number\">41754</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_port\"</span>:<span class=\"number\">1080</span>,</div><div class=\"line\">\t<span class=\"attr\">\"password\"</span>:<span class=\"string\">\"euwatP\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"timeout\"</span>:<span class=\"number\">600</span>,</div><div class=\"line\">\t<span class=\"attr\">\"method\"</span>:<span class=\"string\">\"chacha20\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p><code>sudo sslocal -c /etc/shadow.conf -d start</code><br><code>sudo sslocal -c /etc/shadow.conf -d stop</code><br>后台长期启动shadowsockts<br>`nohup sslocal -c etc/shadow.config &amp;</p>\n<ul>\n<li>设置开机自动启动<br><code>sudo vim /etc/rc.local</code><br>在<em>exit 0</em>前加上一行：<br><code>/usr/local/bin/sslocal -c /etc/shadow.conf</code></li>\n</ul>\n<h3 id=\"安装一些加密方式所依赖的库\"><a href=\"#安装一些加密方式所依赖的库\" class=\"headerlink\" title=\"安装一些加密方式所依赖的库\"></a>安装一些加密方式所依赖的库</h3><p>python-m2crypto<br><code>apt-get install python-m2crypto</code><br>libsodium    //chacha20加密方式需要用到<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget <span class=\"symbol\">https:</span>/<span class=\"regexp\">/download.libsodium.org/libsodium</span><span class=\"regexp\">/releases/</span>LATEST.tar.gz</div><div class=\"line\">tar zxf LATEST.tar.gz</div><div class=\"line\">cd libsodium*</div><div class=\"line\">./configure</div><div class=\"line\">make &amp;&amp; make install</div><div class=\"line\"> </div><div class=\"line\">echo /usr/local/<span class=\"class\"><span class=\"keyword\">lib</span> &gt; /<span class=\"title\">etc</span>/<span class=\"title\">ld</span>.<span class=\"title\">so</span>.<span class=\"title\">conf</span>.<span class=\"title\">d</span>/<span class=\"title\">usr_local_lib</span>.<span class=\"title\">conf</span>    <span class=\"comment\"># 修复关联</span></span></div><div class=\"line\">ldconfig</div></pre></td></tr></table></figure></p>\n<h3 id=\"终端中使用shadowsocks\"><a href=\"#终端中使用shadowsocks\" class=\"headerlink\" title=\"终端中使用shadowsocks\"></a>终端中使用shadowsocks</h3><p>可以使用的有 <strong>Privoxy Polipo proxychains</strong>，前两者貌似不支持ssh,所以就选择了<strong>proxychains</strong></p>\n<ul>\n<li><p>安装proxychains<br><code>sudo apt-get install proxychains</code><br><code>sudo vi /etc/proxychains.conf</code></p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">strict_chain</div><div class=\"line\">proxy_dns</div><div class=\"line\">remote_dns_subnet <span class=\"number\">224</span></div><div class=\"line\">tcp_read_time_out <span class=\"number\">15000</span></div><div class=\"line\">tcp_connect_time_out <span class=\"number\">8000</span>j</div><div class=\"line\">localnet <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">255.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></div><div class=\"line\">quiet_mode</div><div class=\"line\"> </div><div class=\"line\">[ProxyList]</div><div class=\"line\">socks5  <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"number\">1080</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>使用例子<br><code>proxychains curl www.google.com</code></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains bash</div><div class=\"line\">curl ip<span class=\"selector-class\">.gs</span></div><div class=\"line\">curl www<span class=\"selector-class\">.google</span><span class=\"selector-class\">.com</span> </div><div class=\"line\">wget https:<span class=\"comment\">//cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.8.1.tar.xz</span></div><div class=\"line\">git clone git@github<span class=\"selector-class\">.com</span>:baidu/Paddle.git</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"<h3 id=\"安装shadowsock\"><a href=\"#安装shadowsock\" class=\"headerlink\" title=\"安装shadowsock\"></a>安装shadowsock</h3><p>shadowsock主页 <a href=\"https://github.com/shadowsocks/shadowsocks\">https://github.com/shadowsocks/shadowsocks</a><br><code>sudo apt-get update</code><br><code>sudo apt-get install python-gevent python-pip</code><br><code>sudo pip install shadowsocks</code><br>","more":"</p>\n<h3 id=\"编辑配置文件\"><a href=\"#编辑配置文件\" class=\"headerlink\" title=\"编辑配置文件\"></a>编辑配置文件</h3><p><code>sudo vi etc/shadow.config</code><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"server\"</span>:<span class=\"string\">\"47.90.65.76\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"server_port\"</span>:<span class=\"number\">41754</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_port\"</span>:<span class=\"number\">1080</span>,</div><div class=\"line\">\t<span class=\"attr\">\"password\"</span>:<span class=\"string\">\"euwatP\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"timeout\"</span>:<span class=\"number\">600</span>,</div><div class=\"line\">\t<span class=\"attr\">\"method\"</span>:<span class=\"string\">\"chacha20\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p><code>sudo sslocal -c /etc/shadow.conf -d start</code><br><code>sudo sslocal -c /etc/shadow.conf -d stop</code><br>后台长期启动shadowsockts<br>`nohup sslocal -c etc/shadow.config &amp;</p>\n<ul>\n<li>设置开机自动启动<br><code>sudo vim /etc/rc.local</code><br>在<em>exit 0</em>前加上一行：<br><code>/usr/local/bin/sslocal -c /etc/shadow.conf</code></li>\n</ul>\n<h3 id=\"安装一些加密方式所依赖的库\"><a href=\"#安装一些加密方式所依赖的库\" class=\"headerlink\" title=\"安装一些加密方式所依赖的库\"></a>安装一些加密方式所依赖的库</h3><p>python-m2crypto<br><code>apt-get install python-m2crypto</code><br>libsodium    //chacha20加密方式需要用到<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget <span class=\"symbol\">https:</span>/<span class=\"regexp\">/download.libsodium.org/libsodium</span><span class=\"regexp\">/releases/</span>LATEST.tar.gz</div><div class=\"line\">tar zxf LATEST.tar.gz</div><div class=\"line\">cd libsodium*</div><div class=\"line\">./configure</div><div class=\"line\">make &amp;&amp; make install</div><div class=\"line\"> </div><div class=\"line\">echo /usr/local/<span class=\"class\"><span class=\"keyword\">lib</span> &gt; /<span class=\"title\">etc</span>/<span class=\"title\">ld</span>.<span class=\"title\">so</span>.<span class=\"title\">conf</span>.<span class=\"title\">d</span>/<span class=\"title\">usr_local_lib</span>.<span class=\"title\">conf</span>    <span class=\"comment\"># 修复关联</span></span></div><div class=\"line\">ldconfig</div></pre></td></tr></table></figure></p>\n<h3 id=\"终端中使用shadowsocks\"><a href=\"#终端中使用shadowsocks\" class=\"headerlink\" title=\"终端中使用shadowsocks\"></a>终端中使用shadowsocks</h3><p>可以使用的有 <strong>Privoxy Polipo proxychains</strong>，前两者貌似不支持ssh,所以就选择了<strong>proxychains</strong></p>\n<ul>\n<li><p>安装proxychains<br><code>sudo apt-get install proxychains</code><br><code>sudo vi /etc/proxychains.conf</code></p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">strict_chain</div><div class=\"line\">proxy_dns</div><div class=\"line\">remote_dns_subnet <span class=\"number\">224</span></div><div class=\"line\">tcp_read_time_out <span class=\"number\">15000</span></div><div class=\"line\">tcp_connect_time_out <span class=\"number\">8000</span>j</div><div class=\"line\">localnet <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">255.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></div><div class=\"line\">quiet_mode</div><div class=\"line\"> </div><div class=\"line\">[ProxyList]</div><div class=\"line\">socks5  <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"number\">1080</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>使用例子<br><code>proxychains curl www.google.com</code></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains bash</div><div class=\"line\">curl ip<span class=\"selector-class\">.gs</span></div><div class=\"line\">curl www<span class=\"selector-class\">.google</span><span class=\"selector-class\">.com</span> </div><div class=\"line\">wget https:<span class=\"comment\">//cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.8.1.tar.xz</span></div><div class=\"line\">git clone git@github<span class=\"selector-class\">.com</span>:baidu/Paddle.git</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"搭建亚马逊云aws免费服务器","date":"2016-10-18T04:19:57.000Z","_content":"\n### 注册\n亚马逊云计算中心的网址：https://aws.amazon.com/cn 注册成功之后，系统会从你的信用卡扣掉你1美元\n\n### aws12个月免费包的重点\n服务器的免费政策是720 * 1个Instance小时/月。instance记时是以1小时做单位的，如果你一个小时之内start/stop 5次服务器的话，你会被记5个小时。12月之内一定要终止你使用的aws服务，否则会被计费\n<!-- more -->\n\n### 开启aws云计算服务器\nEC2云计算服务器服务中心页面:https://console.aws.amazon.com/ec2/\n\na，设置安全策略组时选择一个已经存在的安全策略组。实例建成功后再编辑安全策略组，因为我们后面要ssh连接这个服务器，所以选择的安全策略要打开ssh服务端口。以后根据自己服务器对外提供的功能，安全策略也要相应的更新，否则外部终端无法访问相应的端口。为了简便可以把入站和出站的所有端口打开；\n\nb，在“ Select an existing key pair or create a new key pair ”页面选“Create a new key pair”创建ssh用的key文件，创建之后务必要“Download Key Pair”，下载生成的key；\n\nc，注意：如果在“Instances”页面看到多于一个instance，你一定要stop甚至terminate多于一个的，不然你将面临计费风险；\n![aws创建实例](http://ofat4idzj.bkt.clouddn.com/aws%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B.gif)\n\n### 连接EC2云计算服务器\n在 Host Name (主机名) 框中，输入 user_name@public_dns_name。\n`ubuntu@ec2-35-160-120-14.us-west-2.compute.amazonaws.com`\n在putty中，connection|ssh|auth 下面选择puttygen转换后的key\n![用putty连接](http://ofat4idzj.bkt.clouddn.com/%E7%94%A8putty%E8%BF%9E%E6%8E%A5.gif)\n\n### 使用ip和密码登陆Amazon EC2\n```\nsudo passwd root\nsudo vi /etc/ssh/sshd_config\n#编辑亚马逊云主机的ssh登录方式，找到 PasswordAuthentication no，把no改成yes\n#要重新启动下ssh\nsudo service sshd restart\nsu root\npasswd ubuntu\n```\n![用ip和密码登录](http://ofat4idzj.bkt.clouddn.com/%E7%94%A8ip%E5%92%8C%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.gif)\n\n### 解决键盘延迟\n1、把实例建在延迟较小的区域，推荐一个网站专门看延迟：http://www.cloudping.info/\n2、更改端口号\n3、使用[mosh](https://mosh.org/)\n```\nsudo apt-get install mosh\n#两端都要安装，详情见官网\n#mosh USERNAME@IP\n#mosh --ssh=\"ssh -p 22222\" ubuntu@52.198.212.57\n```\n","source":"_posts/3_搭建亚马逊云aws免费服务器.md","raw":"---\ntitle: 搭建亚马逊云aws免费服务器\ndate: 2016-10-18 12:19:57\ntags: [aws,mosh]\ncategories: [linux,server]\n\n---\n\n### 注册\n亚马逊云计算中心的网址：https://aws.amazon.com/cn 注册成功之后，系统会从你的信用卡扣掉你1美元\n\n### aws12个月免费包的重点\n服务器的免费政策是720 * 1个Instance小时/月。instance记时是以1小时做单位的，如果你一个小时之内start/stop 5次服务器的话，你会被记5个小时。12月之内一定要终止你使用的aws服务，否则会被计费\n<!-- more -->\n\n### 开启aws云计算服务器\nEC2云计算服务器服务中心页面:https://console.aws.amazon.com/ec2/\n\na，设置安全策略组时选择一个已经存在的安全策略组。实例建成功后再编辑安全策略组，因为我们后面要ssh连接这个服务器，所以选择的安全策略要打开ssh服务端口。以后根据自己服务器对外提供的功能，安全策略也要相应的更新，否则外部终端无法访问相应的端口。为了简便可以把入站和出站的所有端口打开；\n\nb，在“ Select an existing key pair or create a new key pair ”页面选“Create a new key pair”创建ssh用的key文件，创建之后务必要“Download Key Pair”，下载生成的key；\n\nc，注意：如果在“Instances”页面看到多于一个instance，你一定要stop甚至terminate多于一个的，不然你将面临计费风险；\n![aws创建实例](http://ofat4idzj.bkt.clouddn.com/aws%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B.gif)\n\n### 连接EC2云计算服务器\n在 Host Name (主机名) 框中，输入 user_name@public_dns_name。\n`ubuntu@ec2-35-160-120-14.us-west-2.compute.amazonaws.com`\n在putty中，connection|ssh|auth 下面选择puttygen转换后的key\n![用putty连接](http://ofat4idzj.bkt.clouddn.com/%E7%94%A8putty%E8%BF%9E%E6%8E%A5.gif)\n\n### 使用ip和密码登陆Amazon EC2\n```\nsudo passwd root\nsudo vi /etc/ssh/sshd_config\n#编辑亚马逊云主机的ssh登录方式，找到 PasswordAuthentication no，把no改成yes\n#要重新启动下ssh\nsudo service sshd restart\nsu root\npasswd ubuntu\n```\n![用ip和密码登录](http://ofat4idzj.bkt.clouddn.com/%E7%94%A8ip%E5%92%8C%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.gif)\n\n### 解决键盘延迟\n1、把实例建在延迟较小的区域，推荐一个网站专门看延迟：http://www.cloudping.info/\n2、更改端口号\n3、使用[mosh](https://mosh.org/)\n```\nsudo apt-get install mosh\n#两端都要安装，详情见官网\n#mosh USERNAME@IP\n#mosh --ssh=\"ssh -p 22222\" ubuntu@52.198.212.57\n```\n","slug":"3_搭建亚马逊云aws免费服务器","published":1,"updated":"2016-10-31T12:44:08.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxm80007ulyqpl6gb1eg","content":"<h3 id=\"注册\"><a href=\"#注册\" class=\"headerlink\" title=\"注册\"></a>注册</h3><p>亚马逊云计算中心的网址：<a href=\"https://aws.amazon.com/cn\" target=\"_blank\" rel=\"external\">https://aws.amazon.com/cn</a> 注册成功之后，系统会从你的信用卡扣掉你1美元</p>\n<h3 id=\"aws12个月免费包的重点\"><a href=\"#aws12个月免费包的重点\" class=\"headerlink\" title=\"aws12个月免费包的重点\"></a>aws12个月免费包的重点</h3><p>服务器的免费政策是720 * 1个Instance小时/月。instance记时是以1小时做单位的，如果你一个小时之内start/stop 5次服务器的话，你会被记5个小时。12月之内一定要终止你使用的aws服务，否则会被计费<br><a id=\"more\"></a></p>\n<h3 id=\"开启aws云计算服务器\"><a href=\"#开启aws云计算服务器\" class=\"headerlink\" title=\"开启aws云计算服务器\"></a>开启aws云计算服务器</h3><p>EC2云计算服务器服务中心页面:<a href=\"https://console.aws.amazon.com/ec2/\" target=\"_blank\" rel=\"external\">https://console.aws.amazon.com/ec2/</a></p>\n<p>a，设置安全策略组时选择一个已经存在的安全策略组。实例建成功后再编辑安全策略组，因为我们后面要ssh连接这个服务器，所以选择的安全策略要打开ssh服务端口。以后根据自己服务器对外提供的功能，安全策略也要相应的更新，否则外部终端无法访问相应的端口。为了简便可以把入站和出站的所有端口打开；</p>\n<p>b，在“ Select an existing key pair or create a new key pair ”页面选“Create a new key pair”创建ssh用的key文件，创建之后务必要“Download Key Pair”，下载生成的key；</p>\n<p>c，注意：如果在“Instances”页面看到多于一个instance，你一定要stop甚至terminate多于一个的，不然你将面临计费风险；<br><img src=\"http://ofat4idzj.bkt.clouddn.com/aws%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B.gif\" alt=\"aws创建实例\"></p>\n<h3 id=\"连接EC2云计算服务器\"><a href=\"#连接EC2云计算服务器\" class=\"headerlink\" title=\"连接EC2云计算服务器\"></a>连接EC2云计算服务器</h3><p>在 Host Name (主机名) 框中，输入 user_name@public_dns_name。<br><code>ubuntu@ec2-35-160-120-14.us-west-2.compute.amazonaws.com</code><br>在putty中，connection|ssh|auth 下面选择puttygen转换后的key<br><img src=\"http://ofat4idzj.bkt.clouddn.com/%E7%94%A8putty%E8%BF%9E%E6%8E%A5.gif\" alt=\"用putty连接\"></p>\n<h3 id=\"使用ip和密码登陆Amazon-EC2\"><a href=\"#使用ip和密码登陆Amazon-EC2\" class=\"headerlink\" title=\"使用ip和密码登陆Amazon EC2\"></a>使用ip和密码登陆Amazon EC2</h3><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo passwd root</div><div class=\"line\">sudo vi /etc/ssh/sshd_config</div><div class=\"line\"><span class=\"meta\">#编辑亚马逊云主机的ssh登录方式，找到 PasswordAuthentication no，把no改成yes</span></div><div class=\"line\"><span class=\"meta\">#要重新启动下ssh</span></div><div class=\"line\">sudo service sshd restart</div><div class=\"line\">su root</div><div class=\"line\">passwd ubuntu</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofat4idzj.bkt.clouddn.com/%E7%94%A8ip%E5%92%8C%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.gif\" alt=\"用ip和密码登录\"></p>\n<h3 id=\"解决键盘延迟\"><a href=\"#解决键盘延迟\" class=\"headerlink\" title=\"解决键盘延迟\"></a>解决键盘延迟</h3><p>1、把实例建在延迟较小的区域，推荐一个网站专门看延迟：<a href=\"http://www.cloudping.info/\" target=\"_blank\" rel=\"external\">http://www.cloudping.info/</a><br>2、更改端口号<br>3、使用<a href=\"https://mosh.org/\" target=\"_blank\" rel=\"external\">mosh</a><br><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"keyword\">get</span> install mosh</div><div class=\"line\"><span class=\"meta\">#两端都要安装，详情见官网</span></div><div class=\"line\"><span class=\"meta\">#mosh USERNAME@IP</span></div><div class=\"line\"><span class=\"meta\">#mosh --ssh=\"ssh -p 22222\" ubuntu@52.198.212.57</span></div></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"注册\"><a href=\"#注册\" class=\"headerlink\" title=\"注册\"></a>注册</h3><p>亚马逊云计算中心的网址：<a href=\"https://aws.amazon.com/cn\">https://aws.amazon.com/cn</a> 注册成功之后，系统会从你的信用卡扣掉你1美元</p>\n<h3 id=\"aws12个月免费包的重点\"><a href=\"#aws12个月免费包的重点\" class=\"headerlink\" title=\"aws12个月免费包的重点\"></a>aws12个月免费包的重点</h3><p>服务器的免费政策是720 * 1个Instance小时/月。instance记时是以1小时做单位的，如果你一个小时之内start/stop 5次服务器的话，你会被记5个小时。12月之内一定要终止你使用的aws服务，否则会被计费<br>","more":"</p>\n<h3 id=\"开启aws云计算服务器\"><a href=\"#开启aws云计算服务器\" class=\"headerlink\" title=\"开启aws云计算服务器\"></a>开启aws云计算服务器</h3><p>EC2云计算服务器服务中心页面:<a href=\"https://console.aws.amazon.com/ec2/\">https://console.aws.amazon.com/ec2/</a></p>\n<p>a，设置安全策略组时选择一个已经存在的安全策略组。实例建成功后再编辑安全策略组，因为我们后面要ssh连接这个服务器，所以选择的安全策略要打开ssh服务端口。以后根据自己服务器对外提供的功能，安全策略也要相应的更新，否则外部终端无法访问相应的端口。为了简便可以把入站和出站的所有端口打开；</p>\n<p>b，在“ Select an existing key pair or create a new key pair ”页面选“Create a new key pair”创建ssh用的key文件，创建之后务必要“Download Key Pair”，下载生成的key；</p>\n<p>c，注意：如果在“Instances”页面看到多于一个instance，你一定要stop甚至terminate多于一个的，不然你将面临计费风险；<br><img src=\"http://ofat4idzj.bkt.clouddn.com/aws%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B.gif\" alt=\"aws创建实例\"></p>\n<h3 id=\"连接EC2云计算服务器\"><a href=\"#连接EC2云计算服务器\" class=\"headerlink\" title=\"连接EC2云计算服务器\"></a>连接EC2云计算服务器</h3><p>在 Host Name (主机名) 框中，输入 user_name@public_dns_name。<br><code>ubuntu@ec2-35-160-120-14.us-west-2.compute.amazonaws.com</code><br>在putty中，connection|ssh|auth 下面选择puttygen转换后的key<br><img src=\"http://ofat4idzj.bkt.clouddn.com/%E7%94%A8putty%E8%BF%9E%E6%8E%A5.gif\" alt=\"用putty连接\"></p>\n<h3 id=\"使用ip和密码登陆Amazon-EC2\"><a href=\"#使用ip和密码登陆Amazon-EC2\" class=\"headerlink\" title=\"使用ip和密码登陆Amazon EC2\"></a>使用ip和密码登陆Amazon EC2</h3><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo passwd root</div><div class=\"line\">sudo vi /etc/ssh/sshd_config</div><div class=\"line\"><span class=\"meta\">#编辑亚马逊云主机的ssh登录方式，找到 PasswordAuthentication no，把no改成yes</span></div><div class=\"line\"><span class=\"meta\">#要重新启动下ssh</span></div><div class=\"line\">sudo service sshd restart</div><div class=\"line\">su root</div><div class=\"line\">passwd ubuntu</div></pre></td></tr></table></figure>\n<p><img src=\"http://ofat4idzj.bkt.clouddn.com/%E7%94%A8ip%E5%92%8C%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.gif\" alt=\"用ip和密码登录\"></p>\n<h3 id=\"解决键盘延迟\"><a href=\"#解决键盘延迟\" class=\"headerlink\" title=\"解决键盘延迟\"></a>解决键盘延迟</h3><p>1、把实例建在延迟较小的区域，推荐一个网站专门看延迟：<a href=\"http://www.cloudping.info/\">http://www.cloudping.info/</a><br>2、更改端口号<br>3、使用<a href=\"https://mosh.org/\">mosh</a><br><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"keyword\">get</span> install mosh</div><div class=\"line\"><span class=\"meta\">#两端都要安装，详情见官网</span></div><div class=\"line\"><span class=\"meta\">#mosh USERNAME@IP</span></div><div class=\"line\"><span class=\"meta\">#mosh --ssh=\"ssh -p 22222\" ubuntu@52.198.212.57</span></div></pre></td></tr></table></figure></p>"},{"title":"expect实现自动登录","date":"2016-10-22T09:28:24.000Z","_content":"\n### 安装expect\n`sudo apt-get -y install expect`\n\n### expect基本语法\n`spawn`: 后面加上需要执行的shell 命令，比如说spawn sudo touch testfile\n`expect`: 只有spawn 执行的命令结果才会被expect 捕捉到，因为spawn 会启动一个进程，只有这个进程的相关信息才会被捕捉到，主要包括：标准输入的提示信息，eof 和timeout。\n<!-- more -->\n`send 和send_user`：send 会将expect 脚本中需要的信息发送给spawn 启动的那个进程，而`send_user` 只是回显用户发出的信息，类似于shell 中的echo 而已。\n`expect` 与“{ ”之间直接必须有空格或则TAB间隔；\n`interact` 执行完成后保持交互状态，把控制权交给控制台，如果没有这一句登录完成后会退出，而不是留在远程终端上；\n`$argc`表示参数的数目，`$argv`表示参数，比如取第一个参数就是[lindex $argv 0]；\n如果需要计算的话必须用`expr`，如计算2-1，则必须用[expr 2-1]；\n\n### 例1：linux自动登录\n```\n#!/usr/bin/env expect\nset timeout 5\n#spawn ssh -C -p 22222 ubuntu@52.198.212.57\n#spawn mosh ubuntu@52.198.212.57 --ssh=\"ssh -p 22\"\t#有错，-p会识别为mosh的参数\nspawn mosh ubuntu@52.198.212.57\nexpect {\n        \"*yes*no*\" {\n\t\tsend \"yes\\n\"\n\t\texpect {\n\t\t\t\"*assword*\" {\n\t\t\t\tsend \"$passwd\\n\"\n\t\t\t}\n\t\t}\n\t\t\"*assword*\" {\n\t\t\tsend \"$passwd\\n\"\n\t\t}\n\t}\n}\n\ninteract\t\t\t#登录成功后留在远程终端上\n\n#expect \"*$ \"\t\t\t#匹配提示符，注意空格，要和远程终端一致\n#send \"mkdir kk\\n\"\t\t#远程执行命令用send发送，不用spawn\n#exit\n#输入密码后并没有expect eof，这是因为ssh这个spawn并没有结束，所以你只能expect bash的提示符或机器名等\n\n#expect eof\n```\n\n### 例2： linux下建立账户\n```\n#!/usr/bin/expect\n#Useage: ./account.sh newaccout\n#用于linux 下账户的建立\n\nset passwd \"mypasswd\"\nset timeout 60\nif {$argc != 1} {\n\tsend \"usage ./account.sh \\$newaccount\\n\"\n\texit\n}\nset user [lindex $argv [expr $argc-1]]\n\nspawn sudo useradd -s /bin/bash -g mygroup -m $user\nexpect {\n\t\"assword\" {\n\t\tsend_user \"sudo now\\n\"\n\t\tsend \"$passwd\\n\"\n\t\texp_continue\n\t}\n\teof {\n\t\tsend_user \"eof\\n\"\n\t}\n}\n\nspawn sudo passwd $user\nexpect {\n\t\"assword\" {\n\t\tsend \"$passwd\\n\"\n\t\texp_continue\n\t}\n\teof {\n\t\tsend_user \"eof\"\n\t}\n}\n\nspawn sudo smbpasswd -a $user\nexpect {\n\t\"assword\" {\n\t\tsend \"$passwd\\n\"\n\t\texp_continue\n\t}\n\teof {\n\t\tsend_user \"eof\"\n\t}\n}\n```\n","source":"_posts/4_expect实现自动登录.md","raw":"---\ntitle: expect实现自动登录\ndate: 2016-10-22 17:28:24\ntags: [expect]\ncategories: [script,shell]\n\n---\n\n### 安装expect\n`sudo apt-get -y install expect`\n\n### expect基本语法\n`spawn`: 后面加上需要执行的shell 命令，比如说spawn sudo touch testfile\n`expect`: 只有spawn 执行的命令结果才会被expect 捕捉到，因为spawn 会启动一个进程，只有这个进程的相关信息才会被捕捉到，主要包括：标准输入的提示信息，eof 和timeout。\n<!-- more -->\n`send 和send_user`：send 会将expect 脚本中需要的信息发送给spawn 启动的那个进程，而`send_user` 只是回显用户发出的信息，类似于shell 中的echo 而已。\n`expect` 与“{ ”之间直接必须有空格或则TAB间隔；\n`interact` 执行完成后保持交互状态，把控制权交给控制台，如果没有这一句登录完成后会退出，而不是留在远程终端上；\n`$argc`表示参数的数目，`$argv`表示参数，比如取第一个参数就是[lindex $argv 0]；\n如果需要计算的话必须用`expr`，如计算2-1，则必须用[expr 2-1]；\n\n### 例1：linux自动登录\n```\n#!/usr/bin/env expect\nset timeout 5\n#spawn ssh -C -p 22222 ubuntu@52.198.212.57\n#spawn mosh ubuntu@52.198.212.57 --ssh=\"ssh -p 22\"\t#有错，-p会识别为mosh的参数\nspawn mosh ubuntu@52.198.212.57\nexpect {\n        \"*yes*no*\" {\n\t\tsend \"yes\\n\"\n\t\texpect {\n\t\t\t\"*assword*\" {\n\t\t\t\tsend \"$passwd\\n\"\n\t\t\t}\n\t\t}\n\t\t\"*assword*\" {\n\t\t\tsend \"$passwd\\n\"\n\t\t}\n\t}\n}\n\ninteract\t\t\t#登录成功后留在远程终端上\n\n#expect \"*$ \"\t\t\t#匹配提示符，注意空格，要和远程终端一致\n#send \"mkdir kk\\n\"\t\t#远程执行命令用send发送，不用spawn\n#exit\n#输入密码后并没有expect eof，这是因为ssh这个spawn并没有结束，所以你只能expect bash的提示符或机器名等\n\n#expect eof\n```\n\n### 例2： linux下建立账户\n```\n#!/usr/bin/expect\n#Useage: ./account.sh newaccout\n#用于linux 下账户的建立\n\nset passwd \"mypasswd\"\nset timeout 60\nif {$argc != 1} {\n\tsend \"usage ./account.sh \\$newaccount\\n\"\n\texit\n}\nset user [lindex $argv [expr $argc-1]]\n\nspawn sudo useradd -s /bin/bash -g mygroup -m $user\nexpect {\n\t\"assword\" {\n\t\tsend_user \"sudo now\\n\"\n\t\tsend \"$passwd\\n\"\n\t\texp_continue\n\t}\n\teof {\n\t\tsend_user \"eof\\n\"\n\t}\n}\n\nspawn sudo passwd $user\nexpect {\n\t\"assword\" {\n\t\tsend \"$passwd\\n\"\n\t\texp_continue\n\t}\n\teof {\n\t\tsend_user \"eof\"\n\t}\n}\n\nspawn sudo smbpasswd -a $user\nexpect {\n\t\"assword\" {\n\t\tsend \"$passwd\\n\"\n\t\texp_continue\n\t}\n\teof {\n\t\tsend_user \"eof\"\n\t}\n}\n```\n","slug":"4_expect实现自动登录","published":1,"updated":"2016-11-18T15:52:09.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxmw0009ulyqcbvmiy7j","content":"<h3 id=\"安装expect\"><a href=\"#安装expect\" class=\"headerlink\" title=\"安装expect\"></a>安装expect</h3><p><code>sudo apt-get -y install expect</code></p>\n<h3 id=\"expect基本语法\"><a href=\"#expect基本语法\" class=\"headerlink\" title=\"expect基本语法\"></a>expect基本语法</h3><p><code>spawn</code>: 后面加上需要执行的shell 命令，比如说spawn sudo touch testfile<br><code>expect</code>: 只有spawn 执行的命令结果才会被expect 捕捉到，因为spawn 会启动一个进程，只有这个进程的相关信息才会被捕捉到，主要包括：标准输入的提示信息，eof 和timeout。<br><a id=\"more\"></a><br><code>send 和send_user</code>：send 会将expect 脚本中需要的信息发送给spawn 启动的那个进程，而<code>send_user</code> 只是回显用户发出的信息，类似于shell 中的echo 而已。<br><code>expect</code> 与“{ ”之间直接必须有空格或则TAB间隔；<br><code>interact</code> 执行完成后保持交互状态，把控制权交给控制台，如果没有这一句登录完成后会退出，而不是留在远程终端上；<br><code>$argc</code>表示参数的数目，<code>$argv</code>表示参数，比如取第一个参数就是[lindex $argv 0]；<br>如果需要计算的话必须用<code>expr</code>，如计算2-1，则必须用[expr 2-1]；</p>\n<h3 id=\"例1：linux自动登录\"><a href=\"#例1：linux自动登录\" class=\"headerlink\" title=\"例1：linux自动登录\"></a>例1：linux自动登录</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/usr/bin/env expect</div><div class=\"line\"><span class=\"keyword\">set</span> timeout <span class=\"comment\">5</span></div><div class=\"line\">#spawn <span class=\"comment\">ssh -C -p 22222 ubuntu@52.198.212.57</span></div><div class=\"line\">#spawn <span class=\"comment\">mosh ubuntu@52.198.212.57 --ssh=</span><span class=\"comment\">\"ssh -p 22\"</span>\t<span class=\"comment\">#</span>有错，<span class=\"comment\">-p</span>会识别为<span class=\"comment\">mosh</span>的参数</div><div class=\"line\">spawn <span class=\"comment\">mosh ubuntu@52.198.212.57</span></div><div class=\"line\">expect <span class=\"comment\">&#123;</span></div><div class=\"line\">        <span class=\"string\">\"*yes*no*\"</span> &#123;</div><div class=\"line\">\t\tsend <span class=\"comment\">\"yes\\n\"</span></div><div class=\"line\">\t\texpect <span class=\"comment\">&#123;</span></div><div class=\"line\">\t\t\t<span class=\"string\">\"*assword*\"</span> &#123;</div><div class=\"line\">\t\t\t\tsend <span class=\"comment\">\"$passwd\\n\"</span></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"string\">\"*assword*\"</span> &#123;</div><div class=\"line\">\t\t\tsend <span class=\"comment\">\"$passwd\\n\"</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">interact\t\t\t<span class=\"comment\">#</span>登录成功后留在远程终端上</div><div class=\"line\"></div><div class=\"line\">#expect <span class=\"comment\">\"*$ \"</span>\t\t\t<span class=\"comment\">#</span>匹配提示符，注意空格，要和远程终端一致</div><div class=\"line\">#send <span class=\"comment\">\"mkdir kk\\n\"</span>\t\t<span class=\"comment\">#</span>远程执行命令用<span class=\"comment\">send</span>发送，不用<span class=\"comment\">spawn</span></div><div class=\"line\">#exit</div><div class=\"line\">#输入密码后并没有expect <span class=\"comment\">eof</span>，这是因为<span class=\"comment\">ssh</span>这个<span class=\"comment\">spawn</span>并没有结束，所以你只能<span class=\"comment\">expect bash</span>的提示符或机器名等</div><div class=\"line\"></div><div class=\"line\">#expect <span class=\"comment\">eof</span></div></pre></td></tr></table></figure>\n<h3 id=\"例2：-linux下建立账户\"><a href=\"#例2：-linux下建立账户\" class=\"headerlink\" title=\"例2： linux下建立账户\"></a>例2： linux下建立账户</h3><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/expect</span></div><div class=\"line\"><span class=\"comment\">#Useage: ./account.sh newaccout</span></div><div class=\"line\"><span class=\"comment\">#用于linux 下账户的建立</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> passwd <span class=\"string\">\"mypasswd\"</span></div><div class=\"line\"><span class=\"keyword\">set</span> timeout <span class=\"number\">60</span></div><div class=\"line\"><span class=\"keyword\">if</span> &#123;$argc != <span class=\"number\">1</span>&#125; &#123;</div><div class=\"line\">\tsend <span class=\"string\">\"usage ./account.sh \\$newaccount\\n\"</span></div><div class=\"line\">\t<span class=\"keyword\">exit</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">set</span> user [<span class=\"keyword\">lindex</span> $argv [<span class=\"keyword\">expr</span> $argc-<span class=\"number\">1</span>]]</div><div class=\"line\"></div><div class=\"line\">spawn sudo useradd -s /bin/bash -g mygroup -m $user</div><div class=\"line\">expect &#123;</div><div class=\"line\">\t<span class=\"string\">\"assword\"</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"sudo now\\n\"</span></div><div class=\"line\">\t\tsend <span class=\"string\">\"$passwd\\n\"</span></div><div class=\"line\">\t\texp_continue</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">eof</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"eof\\n\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">spawn sudo passwd $user</div><div class=\"line\">expect &#123;</div><div class=\"line\">\t<span class=\"string\">\"assword\"</span> &#123;</div><div class=\"line\">\t\tsend <span class=\"string\">\"$passwd\\n\"</span></div><div class=\"line\">\t\texp_continue</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">eof</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"eof\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">spawn sudo smbpasswd -a $user</div><div class=\"line\">expect &#123;</div><div class=\"line\">\t<span class=\"string\">\"assword\"</span> &#123;</div><div class=\"line\">\t\tsend <span class=\"string\">\"$passwd\\n\"</span></div><div class=\"line\">\t\texp_continue</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">eof</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"eof\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"安装expect\"><a href=\"#安装expect\" class=\"headerlink\" title=\"安装expect\"></a>安装expect</h3><p><code>sudo apt-get -y install expect</code></p>\n<h3 id=\"expect基本语法\"><a href=\"#expect基本语法\" class=\"headerlink\" title=\"expect基本语法\"></a>expect基本语法</h3><p><code>spawn</code>: 后面加上需要执行的shell 命令，比如说spawn sudo touch testfile<br><code>expect</code>: 只有spawn 执行的命令结果才会被expect 捕捉到，因为spawn 会启动一个进程，只有这个进程的相关信息才会被捕捉到，主要包括：标准输入的提示信息，eof 和timeout。<br>","more":"<br><code>send 和send_user</code>：send 会将expect 脚本中需要的信息发送给spawn 启动的那个进程，而<code>send_user</code> 只是回显用户发出的信息，类似于shell 中的echo 而已。<br><code>expect</code> 与“{ ”之间直接必须有空格或则TAB间隔；<br><code>interact</code> 执行完成后保持交互状态，把控制权交给控制台，如果没有这一句登录完成后会退出，而不是留在远程终端上；<br><code>$argc</code>表示参数的数目，<code>$argv</code>表示参数，比如取第一个参数就是[lindex $argv 0]；<br>如果需要计算的话必须用<code>expr</code>，如计算2-1，则必须用[expr 2-1]；</p>\n<h3 id=\"例1：linux自动登录\"><a href=\"#例1：linux自动登录\" class=\"headerlink\" title=\"例1：linux自动登录\"></a>例1：linux自动登录</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/usr/bin/env expect</div><div class=\"line\"><span class=\"keyword\">set</span> timeout <span class=\"comment\">5</span></div><div class=\"line\">#spawn <span class=\"comment\">ssh -C -p 22222 ubuntu@52.198.212.57</span></div><div class=\"line\">#spawn <span class=\"comment\">mosh ubuntu@52.198.212.57 --ssh=</span><span class=\"comment\">\"ssh -p 22\"</span>\t<span class=\"comment\">#</span>有错，<span class=\"comment\">-p</span>会识别为<span class=\"comment\">mosh</span>的参数</div><div class=\"line\">spawn <span class=\"comment\">mosh ubuntu@52.198.212.57</span></div><div class=\"line\">expect <span class=\"comment\">&#123;</span></div><div class=\"line\">        <span class=\"string\">\"*yes*no*\"</span> &#123;</div><div class=\"line\">\t\tsend <span class=\"comment\">\"yes\\n\"</span></div><div class=\"line\">\t\texpect <span class=\"comment\">&#123;</span></div><div class=\"line\">\t\t\t<span class=\"string\">\"*assword*\"</span> &#123;</div><div class=\"line\">\t\t\t\tsend <span class=\"comment\">\"$passwd\\n\"</span></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"string\">\"*assword*\"</span> &#123;</div><div class=\"line\">\t\t\tsend <span class=\"comment\">\"$passwd\\n\"</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">interact\t\t\t<span class=\"comment\">#</span>登录成功后留在远程终端上</div><div class=\"line\"></div><div class=\"line\">#expect <span class=\"comment\">\"*$ \"</span>\t\t\t<span class=\"comment\">#</span>匹配提示符，注意空格，要和远程终端一致</div><div class=\"line\">#send <span class=\"comment\">\"mkdir kk\\n\"</span>\t\t<span class=\"comment\">#</span>远程执行命令用<span class=\"comment\">send</span>发送，不用<span class=\"comment\">spawn</span></div><div class=\"line\">#exit</div><div class=\"line\">#输入密码后并没有expect <span class=\"comment\">eof</span>，这是因为<span class=\"comment\">ssh</span>这个<span class=\"comment\">spawn</span>并没有结束，所以你只能<span class=\"comment\">expect bash</span>的提示符或机器名等</div><div class=\"line\"></div><div class=\"line\">#expect <span class=\"comment\">eof</span></div></pre></td></tr></table></figure>\n<h3 id=\"例2：-linux下建立账户\"><a href=\"#例2：-linux下建立账户\" class=\"headerlink\" title=\"例2： linux下建立账户\"></a>例2： linux下建立账户</h3><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/expect</span></div><div class=\"line\"><span class=\"comment\">#Useage: ./account.sh newaccout</span></div><div class=\"line\"><span class=\"comment\">#用于linux 下账户的建立</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> passwd <span class=\"string\">\"mypasswd\"</span></div><div class=\"line\"><span class=\"keyword\">set</span> timeout <span class=\"number\">60</span></div><div class=\"line\"><span class=\"keyword\">if</span> &#123;$argc != <span class=\"number\">1</span>&#125; &#123;</div><div class=\"line\">\tsend <span class=\"string\">\"usage ./account.sh \\$newaccount\\n\"</span></div><div class=\"line\">\t<span class=\"keyword\">exit</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">set</span> user [<span class=\"keyword\">lindex</span> $argv [<span class=\"keyword\">expr</span> $argc-<span class=\"number\">1</span>]]</div><div class=\"line\"></div><div class=\"line\">spawn sudo useradd -s /bin/bash -g mygroup -m $user</div><div class=\"line\">expect &#123;</div><div class=\"line\">\t<span class=\"string\">\"assword\"</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"sudo now\\n\"</span></div><div class=\"line\">\t\tsend <span class=\"string\">\"$passwd\\n\"</span></div><div class=\"line\">\t\texp_continue</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">eof</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"eof\\n\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">spawn sudo passwd $user</div><div class=\"line\">expect &#123;</div><div class=\"line\">\t<span class=\"string\">\"assword\"</span> &#123;</div><div class=\"line\">\t\tsend <span class=\"string\">\"$passwd\\n\"</span></div><div class=\"line\">\t\texp_continue</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">eof</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"eof\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">spawn sudo smbpasswd -a $user</div><div class=\"line\">expect &#123;</div><div class=\"line\">\t<span class=\"string\">\"assword\"</span> &#123;</div><div class=\"line\">\t\tsend <span class=\"string\">\"$passwd\\n\"</span></div><div class=\"line\">\t\texp_continue</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">eof</span> &#123;</div><div class=\"line\">\t\tsend_user <span class=\"string\">\"eof\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Raspberrypi系统安装","date":"2016-11-01T01:42:07.000Z","_content":"\n### 安装系统\n系统下载地址 https://www.raspberrypi.org/downloads/\n解压提取出.img文件，再用[Win32DiskImager](https://sourceforge.net/projects/win32diskimager/)工具写到存储卡上。\n在cmd中运行 `arp/a` 查看树莓派的ip 或者用工具`ipscan22`扫描ip地址，得到ip地址后，用putty链接 户名和密码分别为 `pi， raspberry`\n<!-- more -->\n### 修改源为阿里云的\n`deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free rpi`\n`sudo apt-get update`\n\n### 修改为静态ip\n`sudo vi /etc/dhcpcd.conf` 在末尾添加\n```\ninterface eth0\nstatic ip_address=192.168.1.2\nstatic routers=192.168.1.1\nstatic domain_name_servers=202.96.154.8 223.5.5.5\n```\n`sudo reboot` 修改后重启\n\n### 桌面连接\n#### 用远程桌面连接\n`sudo apt-get install xrdp` 安装xrdp\nwindows端运行`mstsc`，或者在listary中搜索`rdp`打开远程连接程序；用Linux 系统连接需要安装rdesktop: `sudo apt-get install rdesktop`\n系统需要在系统属性\\远程设置\\远程 中设置相应的选项\n#### 用vnc链接\n`sudo apt-get install tightvncserver` 在树莓派上安装Tight VNC 包\n`vncpasswd`\nwindows端下载 [VNC Viewer](https://www.realvnc.com/download/vnc/),连接rasberrypi\n`raspi-config` 里面有配置开启VNC的选项\n","source":"_posts/5_Raspberrypi系统安装.md","raw":"---\ntitle: Raspberrypi系统安装\ndate: 2016-11-01 09:42:07\ntags: [raspberrypi]\ncategories: [linux,raspberrypi]\n\n---\n\n### 安装系统\n系统下载地址 https://www.raspberrypi.org/downloads/\n解压提取出.img文件，再用[Win32DiskImager](https://sourceforge.net/projects/win32diskimager/)工具写到存储卡上。\n在cmd中运行 `arp/a` 查看树莓派的ip 或者用工具`ipscan22`扫描ip地址，得到ip地址后，用putty链接 户名和密码分别为 `pi， raspberry`\n<!-- more -->\n### 修改源为阿里云的\n`deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free rpi`\n`sudo apt-get update`\n\n### 修改为静态ip\n`sudo vi /etc/dhcpcd.conf` 在末尾添加\n```\ninterface eth0\nstatic ip_address=192.168.1.2\nstatic routers=192.168.1.1\nstatic domain_name_servers=202.96.154.8 223.5.5.5\n```\n`sudo reboot` 修改后重启\n\n### 桌面连接\n#### 用远程桌面连接\n`sudo apt-get install xrdp` 安装xrdp\nwindows端运行`mstsc`，或者在listary中搜索`rdp`打开远程连接程序；用Linux 系统连接需要安装rdesktop: `sudo apt-get install rdesktop`\n系统需要在系统属性\\远程设置\\远程 中设置相应的选项\n#### 用vnc链接\n`sudo apt-get install tightvncserver` 在树莓派上安装Tight VNC 包\n`vncpasswd`\nwindows端下载 [VNC Viewer](https://www.realvnc.com/download/vnc/),连接rasberrypi\n`raspi-config` 里面有配置开启VNC的选项\n","slug":"5_Raspberrypi系统安装","published":1,"updated":"2016-11-18T15:43:27.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxn2000aulyqe5ftixqs","content":"<h3 id=\"安装系统\"><a href=\"#安装系统\" class=\"headerlink\" title=\"安装系统\"></a>安装系统</h3><p>系统下载地址 <a href=\"https://www.raspberrypi.org/downloads/\" target=\"_blank\" rel=\"external\">https://www.raspberrypi.org/downloads/</a><br>解压提取出.img文件，再用<a href=\"https://sourceforge.net/projects/win32diskimager/\" target=\"_blank\" rel=\"external\">Win32DiskImager</a>工具写到存储卡上。<br>在cmd中运行 <code>arp/a</code> 查看树莓派的ip 或者用工具<code>ipscan22</code>扫描ip地址，得到ip地址后，用putty链接 户名和密码分别为 <code>pi， raspberry</code><br><a id=\"more\"></a></p>\n<h3 id=\"修改源为阿里云的\"><a href=\"#修改源为阿里云的\" class=\"headerlink\" title=\"修改源为阿里云的\"></a>修改源为阿里云的</h3><p><code>deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free rpi</code><br><code>sudo apt-get update</code></p>\n<h3 id=\"修改为静态ip\"><a href=\"#修改为静态ip\" class=\"headerlink\" title=\"修改为静态ip\"></a>修改为静态ip</h3><p><code>sudo vi /etc/dhcpcd.conf</code> 在末尾添加<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">interface eth0</div><div class=\"line\">static ip_address=<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.2</span></div><div class=\"line\">static routers=<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.1</span></div><div class=\"line\">static domain_name_servers=<span class=\"number\">202.96</span><span class=\"number\">.154</span><span class=\"number\">.8</span> <span class=\"number\">223.5</span><span class=\"number\">.5</span><span class=\"number\">.5</span></div></pre></td></tr></table></figure></p>\n<p><code>sudo reboot</code> 修改后重启</p>\n<h3 id=\"桌面连接\"><a href=\"#桌面连接\" class=\"headerlink\" title=\"桌面连接\"></a>桌面连接</h3><h4 id=\"用远程桌面连接\"><a href=\"#用远程桌面连接\" class=\"headerlink\" title=\"用远程桌面连接\"></a>用远程桌面连接</h4><p><code>sudo apt-get install xrdp</code> 安装xrdp<br>windows端运行<code>mstsc</code>，或者在listary中搜索<code>rdp</code>打开远程连接程序；用Linux 系统连接需要安装rdesktop: <code>sudo apt-get install rdesktop</code><br>系统需要在系统属性\\远程设置\\远程 中设置相应的选项</p>\n<h4 id=\"用vnc链接\"><a href=\"#用vnc链接\" class=\"headerlink\" title=\"用vnc链接\"></a>用vnc链接</h4><p><code>sudo apt-get install tightvncserver</code> 在树莓派上安装Tight VNC 包<br><code>vncpasswd</code><br>windows端下载 <a href=\"https://www.realvnc.com/download/vnc/\" target=\"_blank\" rel=\"external\">VNC Viewer</a>,连接rasberrypi<br><code>raspi-config</code> 里面有配置开启VNC的选项</p>\n","excerpt":"<h3 id=\"安装系统\"><a href=\"#安装系统\" class=\"headerlink\" title=\"安装系统\"></a>安装系统</h3><p>系统下载地址 <a href=\"https://www.raspberrypi.org/downloads/\">https://www.raspberrypi.org/downloads/</a><br>解压提取出.img文件，再用<a href=\"https://sourceforge.net/projects/win32diskimager/\">Win32DiskImager</a>工具写到存储卡上。<br>在cmd中运行 <code>arp/a</code> 查看树莓派的ip 或者用工具<code>ipscan22</code>扫描ip地址，得到ip地址后，用putty链接 户名和密码分别为 <code>pi， raspberry</code><br>","more":"</p>\n<h3 id=\"修改源为阿里云的\"><a href=\"#修改源为阿里云的\" class=\"headerlink\" title=\"修改源为阿里云的\"></a>修改源为阿里云的</h3><p><code>deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free rpi</code><br><code>sudo apt-get update</code></p>\n<h3 id=\"修改为静态ip\"><a href=\"#修改为静态ip\" class=\"headerlink\" title=\"修改为静态ip\"></a>修改为静态ip</h3><p><code>sudo vi /etc/dhcpcd.conf</code> 在末尾添加<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">interface eth0</div><div class=\"line\">static ip_address=<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.2</span></div><div class=\"line\">static routers=<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.1</span></div><div class=\"line\">static domain_name_servers=<span class=\"number\">202.96</span><span class=\"number\">.154</span><span class=\"number\">.8</span> <span class=\"number\">223.5</span><span class=\"number\">.5</span><span class=\"number\">.5</span></div></pre></td></tr></table></figure></p>\n<p><code>sudo reboot</code> 修改后重启</p>\n<h3 id=\"桌面连接\"><a href=\"#桌面连接\" class=\"headerlink\" title=\"桌面连接\"></a>桌面连接</h3><h4 id=\"用远程桌面连接\"><a href=\"#用远程桌面连接\" class=\"headerlink\" title=\"用远程桌面连接\"></a>用远程桌面连接</h4><p><code>sudo apt-get install xrdp</code> 安装xrdp<br>windows端运行<code>mstsc</code>，或者在listary中搜索<code>rdp</code>打开远程连接程序；用Linux 系统连接需要安装rdesktop: <code>sudo apt-get install rdesktop</code><br>系统需要在系统属性\\远程设置\\远程 中设置相应的选项</p>\n<h4 id=\"用vnc链接\"><a href=\"#用vnc链接\" class=\"headerlink\" title=\"用vnc链接\"></a>用vnc链接</h4><p><code>sudo apt-get install tightvncserver</code> 在树莓派上安装Tight VNC 包<br><code>vncpasswd</code><br>windows端下载 <a href=\"https://www.realvnc.com/download/vnc/\">VNC Viewer</a>,连接rasberrypi<br><code>raspi-config</code> 里面有配置开启VNC的选项</p>"},{"title":"python网络爬虫","date":"2016-11-01T04:04:14.000Z","_content":"\n### 网络爬虫基本原理\n![python爬虫](http://ofat4idzj.bkt.clouddn.com/python%E7%88%AC%E8%99%AB.png)\nrobots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取，结构可以参考: http://www.robotstxt.org/orig.html\n<!-- more -->\n例如淘宝网页的robots协议：\n```\nhttps://www.taobao.com/robots.txt\nUser-agent: Baiduspider\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-Agent: Googlebot\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-agent: Bingbot\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-Agent: 360Spider\nAllow: /article\nAllow: /oshtml\nAllow: /wenzhang\nDisallow: /\nUser-Agent: Yisouspider\nAllow: /article\nAllow: /oshtml\nAllow: /wenzhang\nDisallow: /\nUser-Agent: Sogouspider\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /wenzhang\nDisallow: /\nUser-Agent: Yahoo! Slurp\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-Agent: *\nDisallow: /\n```\n\n### urullib库\n```\n>>> import urllib.request\n>>> file=urllib.request.urlopen(\"http://www.baidu.com\")    #方法1\n>>> data=file.read()\n>>> len(data)\n100314\n>>> fh=open(\"D:/Python35/gkk/a1.html\",\"wb\")\n>>> fh.write(data)\n100314\n>>> fh.close()\n>>> urllib.request.urlretrieve(\"http://news.sohu.com/\",filename=\"D:/python35/gkk/a2.html\")    #方法2\n('D:/python35/gkk/a2.html', <http.client.HTTPMessage object at 0x000000000376AC18>)\n>>> urllib.request.urlcleanup()\n```\n\n### 异常处理可以防止程序意外终止\n```\nimport urllib.request\nimport urllib.error\ntry:\n    urllib.request.urlopen(\"http://blog.csdn.net\")\nexcept urllib.error.URLError as e:\n    if hasattr(e,\"code\"):\n        print(e.code)\n    if hasattr(e,\"reason\"):\n        print(e.reason)\n    urllib.request.urlopen(\"http://www.baidu.com\")\n```\n\n### 获取user-agent\nchrome查询user-agent  在地址栏中输入：about:version\nfirefox查询user-agent 进F12可以查看\n通过网址测试查询user-agent： http://www.useragentstring.com/\n\n### 例1 爬取糗事百科段子：\n```\nimport urllib.request\nimport re\ndef getcontent(url,page):\n    #模拟成浏览器\n    headers=(\"User-Agent\",\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36 SE 2.X MetaSr 1.0\")\n    opener = urllib.request.build_opener()\n    opener.addheaders = [headers]\n    #将opener安装为全局\n    urllib.request.install_opener(opener)\n    data=urllib.request.urlopen(url).read().decode(\"utf-8\")\n    #构建段子内容提取的正则表达式\n    contentpat='<div class=\"content\">(.*?)</div>'\n    #寻找出所有的内容\n    contentlist=re.compile(contentpat,re.S).findall(data)\n    x=1\n    #通过for循环遍历段子内容\n    for content in contentlist:\n        content=content.replace(\"\\n\",\"\")\n        print(content)\n        print(\"---------------------\")\n#分别获取各页的段子，通过for循环可以获取多页\nfor i in range(1,30):\n    url=\"http://www.qiushibaike.com/8hr/page/\"+str(i)\n    getcontent(url,i)\n```\n\n### 例2 爬取京东商城图片：\n```\nimport re\nimport urllib.request\ndef craw(url,page):\n    html1=urllib.request.urlopen(url).read()\n    html1=str(html1)\n    pat1='<div id=\"plist\".+? <div class=\"page clearfix\">'\n    result1=re.compile(pat1).findall(html1)\n    result1=result1[0]\n    pat2='<img width=\"220\" height=\"220\" data-img=\"1\" data-lazy-img=\"//(.+?\\.jpg)\">'\n    imagelist=re.compile(pat2).findall(result1)\n    x=1\n    for imageurl in imagelist:\n        imagename=\"C:/jd/\"+str(page)+str(x)+\".jpg\"\n        imageurl=\"http://\"+imageurl\n        try:\n            urllib.request.urlretrieve(imageurl,filename=imagename)\n        except urllib.error.URLError as e:\n            if hasattr(e,\"code\"):\n                x+=1\n            if hasattr(e,\"reason\"):\n                x+=1\n        x+=1\nfor i in range(1,5):\n    url=\"http://list.jd.com/list.html?cat=9987,653,655&page=\"+str(i)\n    craw(url,i)\n```\n","source":"_posts/6_python网络爬虫.md","raw":"---\ntitle: python网络爬虫\ndate: 2016-11-01 12:04:14\ntags: [crawler]\ncategories: [python,crawler]\n\n---\n\n### 网络爬虫基本原理\n![python爬虫](http://ofat4idzj.bkt.clouddn.com/python%E7%88%AC%E8%99%AB.png)\nrobots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取，结构可以参考: http://www.robotstxt.org/orig.html\n<!-- more -->\n例如淘宝网页的robots协议：\n```\nhttps://www.taobao.com/robots.txt\nUser-agent: Baiduspider\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-Agent: Googlebot\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-agent: Bingbot\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-Agent: 360Spider\nAllow: /article\nAllow: /oshtml\nAllow: /wenzhang\nDisallow: /\nUser-Agent: Yisouspider\nAllow: /article\nAllow: /oshtml\nAllow: /wenzhang\nDisallow: /\nUser-Agent: Sogouspider\nAllow: /article\nAllow: /oshtml\nAllow: /product\nAllow: /wenzhang\nDisallow: /\nUser-Agent: Yahoo! Slurp\nAllow: /product\nAllow: /spu\nAllow: /dianpu\nAllow: /wenzhang\nAllow: /oversea\nDisallow: /\nUser-Agent: *\nDisallow: /\n```\n\n### urullib库\n```\n>>> import urllib.request\n>>> file=urllib.request.urlopen(\"http://www.baidu.com\")    #方法1\n>>> data=file.read()\n>>> len(data)\n100314\n>>> fh=open(\"D:/Python35/gkk/a1.html\",\"wb\")\n>>> fh.write(data)\n100314\n>>> fh.close()\n>>> urllib.request.urlretrieve(\"http://news.sohu.com/\",filename=\"D:/python35/gkk/a2.html\")    #方法2\n('D:/python35/gkk/a2.html', <http.client.HTTPMessage object at 0x000000000376AC18>)\n>>> urllib.request.urlcleanup()\n```\n\n### 异常处理可以防止程序意外终止\n```\nimport urllib.request\nimport urllib.error\ntry:\n    urllib.request.urlopen(\"http://blog.csdn.net\")\nexcept urllib.error.URLError as e:\n    if hasattr(e,\"code\"):\n        print(e.code)\n    if hasattr(e,\"reason\"):\n        print(e.reason)\n    urllib.request.urlopen(\"http://www.baidu.com\")\n```\n\n### 获取user-agent\nchrome查询user-agent  在地址栏中输入：about:version\nfirefox查询user-agent 进F12可以查看\n通过网址测试查询user-agent： http://www.useragentstring.com/\n\n### 例1 爬取糗事百科段子：\n```\nimport urllib.request\nimport re\ndef getcontent(url,page):\n    #模拟成浏览器\n    headers=(\"User-Agent\",\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36 SE 2.X MetaSr 1.0\")\n    opener = urllib.request.build_opener()\n    opener.addheaders = [headers]\n    #将opener安装为全局\n    urllib.request.install_opener(opener)\n    data=urllib.request.urlopen(url).read().decode(\"utf-8\")\n    #构建段子内容提取的正则表达式\n    contentpat='<div class=\"content\">(.*?)</div>'\n    #寻找出所有的内容\n    contentlist=re.compile(contentpat,re.S).findall(data)\n    x=1\n    #通过for循环遍历段子内容\n    for content in contentlist:\n        content=content.replace(\"\\n\",\"\")\n        print(content)\n        print(\"---------------------\")\n#分别获取各页的段子，通过for循环可以获取多页\nfor i in range(1,30):\n    url=\"http://www.qiushibaike.com/8hr/page/\"+str(i)\n    getcontent(url,i)\n```\n\n### 例2 爬取京东商城图片：\n```\nimport re\nimport urllib.request\ndef craw(url,page):\n    html1=urllib.request.urlopen(url).read()\n    html1=str(html1)\n    pat1='<div id=\"plist\".+? <div class=\"page clearfix\">'\n    result1=re.compile(pat1).findall(html1)\n    result1=result1[0]\n    pat2='<img width=\"220\" height=\"220\" data-img=\"1\" data-lazy-img=\"//(.+?\\.jpg)\">'\n    imagelist=re.compile(pat2).findall(result1)\n    x=1\n    for imageurl in imagelist:\n        imagename=\"C:/jd/\"+str(page)+str(x)+\".jpg\"\n        imageurl=\"http://\"+imageurl\n        try:\n            urllib.request.urlretrieve(imageurl,filename=imagename)\n        except urllib.error.URLError as e:\n            if hasattr(e,\"code\"):\n                x+=1\n            if hasattr(e,\"reason\"):\n                x+=1\n        x+=1\nfor i in range(1,5):\n    url=\"http://list.jd.com/list.html?cat=9987,653,655&page=\"+str(i)\n    craw(url,i)\n```\n","slug":"6_python网络爬虫","published":1,"updated":"2016-11-18T15:43:38.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxng000dulyqvh1s60za","content":"<h3 id=\"网络爬虫基本原理\"><a href=\"#网络爬虫基本原理\" class=\"headerlink\" title=\"网络爬虫基本原理\"></a>网络爬虫基本原理</h3><p><img src=\"http://ofat4idzj.bkt.clouddn.com/python%E7%88%AC%E8%99%AB.png\" alt=\"python爬虫\"><br>robots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取，结构可以参考: <a href=\"http://www.robotstxt.org/orig.html\" target=\"_blank\" rel=\"external\">http://www.robotstxt.org/orig.html</a><br><a id=\"more\"></a><br>例如淘宝网页的robots协议：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">https:</span><span class=\"comment\">//www.taobao.com/robots.txt</span></div><div class=\"line\">User-<span class=\"string\">agent:</span> Baiduspider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Googlebot</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">agent:</span> Bingbot</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> <span class=\"number\">360</span>Spider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Yisouspider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Sogouspider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Yahoo! Slurp</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> *</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div></pre></td></tr></table></figure></p>\n<h3 id=\"urullib库\"><a href=\"#urullib库\" class=\"headerlink\" title=\"urullib库\"></a>urullib库</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; import urllib.request</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; file=urllib.request.urlopen(<span class=\"string\">\"http://www.baidu.com\"</span>)    <span class=\"comment\">#方法1</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; data=file.read()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; len(data)</div><div class=\"line\"><span class=\"number\">100314</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; fh=open(<span class=\"string\">\"D:/Python35/gkk/a1.html\"</span>,<span class=\"string\">\"wb\"</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; fh.write(data)</div><div class=\"line\"><span class=\"number\">100314</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; fh.close()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; urllib.request.urlretrieve(<span class=\"string\">\"http://news.sohu.com/\"</span>,filename=<span class=\"string\">\"D:/python35/gkk/a2.html\"</span>)    <span class=\"comment\">#方法2</span></div><div class=\"line\">(<span class=\"string\">'D:/python35/gkk/a2.html'</span>, &lt;http.client.HTTPMessage object at <span class=\"number\">0x000000000376AC18</span>&gt;)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; urllib.request.urlcleanup()</div></pre></td></tr></table></figure>\n<h3 id=\"异常处理可以防止程序意外终止\"><a href=\"#异常处理可以防止程序意外终止\" class=\"headerlink\" title=\"异常处理可以防止程序意外终止\"></a>异常处理可以防止程序意外终止</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib<span class=\"selector-class\">.request</span></div><div class=\"line\">import urllib<span class=\"selector-class\">.error</span></div><div class=\"line\">try:</div><div class=\"line\">    urllib<span class=\"selector-class\">.request</span><span class=\"selector-class\">.urlopen</span>(<span class=\"string\">\"http://blog.csdn.net\"</span>)</div><div class=\"line\">except urllib<span class=\"selector-class\">.error</span><span class=\"selector-class\">.URLError</span> as e:</div><div class=\"line\">    <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"code\"</span>):</div><div class=\"line\">        print(e.code)</div><div class=\"line\">    <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"reason\"</span>):</div><div class=\"line\">        print(e.reason)</div><div class=\"line\">    urllib<span class=\"selector-class\">.request</span><span class=\"selector-class\">.urlopen</span>(<span class=\"string\">\"http://www.baidu.com\"</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"获取user-agent\"><a href=\"#获取user-agent\" class=\"headerlink\" title=\"获取user-agent\"></a>获取user-agent</h3><p>chrome查询user-agent  在地址栏中输入：about:version<br>firefox查询user-agent 进F12可以查看<br>通过网址测试查询user-agent： <a href=\"http://www.useragentstring.com/\" target=\"_blank\" rel=\"external\">http://www.useragentstring.com/</a></p>\n<h3 id=\"例1-爬取糗事百科段子：\"><a href=\"#例1-爬取糗事百科段子：\" class=\"headerlink\" title=\"例1 爬取糗事百科段子：\"></a>例1 爬取糗事百科段子：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib.request</div><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getcontent</span><span class=\"params\">(url,page)</span>:</span></div><div class=\"line\">    <span class=\"comment\">#模拟成浏览器</span></div><div class=\"line\">    headers=(<span class=\"string\">\"User-Agent\"</span>,<span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36 SE 2.X MetaSr 1.0\"</span>)</div><div class=\"line\">    opener = urllib.request.build_opener()</div><div class=\"line\">    opener.addheaders = [headers]</div><div class=\"line\">    <span class=\"comment\">#将opener安装为全局</span></div><div class=\"line\">    urllib.request.install_opener(opener)</div><div class=\"line\">    data=urllib.request.urlopen(url).read().decode(<span class=\"string\">\"utf-8\"</span>)</div><div class=\"line\">    <span class=\"comment\">#构建段子内容提取的正则表达式</span></div><div class=\"line\">    contentpat=<span class=\"string\">'&lt;div class=\"content\"&gt;(.*?)&lt;/div&gt;'</span></div><div class=\"line\">    <span class=\"comment\">#寻找出所有的内容</span></div><div class=\"line\">    contentlist=re.compile(contentpat,re.S).findall(data)</div><div class=\"line\">    x=<span class=\"number\">1</span></div><div class=\"line\">    <span class=\"comment\">#通过for循环遍历段子内容</span></div><div class=\"line\">    <span class=\"keyword\">for</span> content <span class=\"keyword\">in</span> contentlist:</div><div class=\"line\">        content=content.replace(<span class=\"string\">\"\\n\"</span>,<span class=\"string\">\"\"</span>)</div><div class=\"line\">        print(content)</div><div class=\"line\">        print(<span class=\"string\">\"---------------------\"</span>)</div><div class=\"line\"><span class=\"comment\">#分别获取各页的段子，通过for循环可以获取多页</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">30</span>):</div><div class=\"line\">    url=<span class=\"string\">\"http://www.qiushibaike.com/8hr/page/\"</span>+str(i)</div><div class=\"line\">    getcontent(url,i)</div></pre></td></tr></table></figure>\n<h3 id=\"例2-爬取京东商城图片：\"><a href=\"#例2-爬取京东商城图片：\" class=\"headerlink\" title=\"例2 爬取京东商城图片：\"></a>例2 爬取京东商城图片：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"><span class=\"keyword\">import</span> urllib.request</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">craw</span><span class=\"params\">(url,page)</span>:</span></div><div class=\"line\">    html1=urllib.request.urlopen(url).read()</div><div class=\"line\">    html1=str(html1)</div><div class=\"line\">    pat1=<span class=\"string\">'&lt;div id=\"plist\".+? &lt;div class=\"page clearfix\"&gt;'</span></div><div class=\"line\">    result1=re.compile(pat1).findall(html1)</div><div class=\"line\">    result1=result1[<span class=\"number\">0</span>]</div><div class=\"line\">    pat2=<span class=\"string\">'&lt;img width=\"220\" height=\"220\" data-img=\"1\" data-lazy-img=\"//(.+?\\.jpg)\"&gt;'</span></div><div class=\"line\">    imagelist=re.compile(pat2).findall(result1)</div><div class=\"line\">    x=<span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">for</span> imageurl <span class=\"keyword\">in</span> imagelist:</div><div class=\"line\">        imagename=<span class=\"string\">\"C:/jd/\"</span>+str(page)+str(x)+<span class=\"string\">\".jpg\"</span></div><div class=\"line\">        imageurl=<span class=\"string\">\"http://\"</span>+imageurl</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            urllib.request.urlretrieve(imageurl,filename=imagename)</div><div class=\"line\">        <span class=\"keyword\">except</span> urllib.error.URLError <span class=\"keyword\">as</span> e:</div><div class=\"line\">            <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"code\"</span>):</div><div class=\"line\">                x+=<span class=\"number\">1</span></div><div class=\"line\">            <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"reason\"</span>):</div><div class=\"line\">                x+=<span class=\"number\">1</span></div><div class=\"line\">        x+=<span class=\"number\">1</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">5</span>):</div><div class=\"line\">    url=<span class=\"string\">\"http://list.jd.com/list.html?cat=9987,653,655&amp;page=\"</span>+str(i)</div><div class=\"line\">    craw(url,i)</div></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"网络爬虫基本原理\"><a href=\"#网络爬虫基本原理\" class=\"headerlink\" title=\"网络爬虫基本原理\"></a>网络爬虫基本原理</h3><p><img src=\"http://ofat4idzj.bkt.clouddn.com/python%E7%88%AC%E8%99%AB.png\" alt=\"python爬虫\"><br>robots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取，结构可以参考: <a href=\"http://www.robotstxt.org/orig.html\">http://www.robotstxt.org/orig.html</a><br>","more":"<br>例如淘宝网页的robots协议：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">https:</span><span class=\"comment\">//www.taobao.com/robots.txt</span></div><div class=\"line\">User-<span class=\"string\">agent:</span> Baiduspider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Googlebot</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">agent:</span> Bingbot</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> <span class=\"number\">360</span>Spider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Yisouspider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Sogouspider</div><div class=\"line\"><span class=\"string\">Allow:</span> /article</div><div class=\"line\"><span class=\"string\">Allow:</span> /oshtml</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> Yahoo! Slurp</div><div class=\"line\"><span class=\"string\">Allow:</span> /product</div><div class=\"line\"><span class=\"string\">Allow:</span> /spu</div><div class=\"line\"><span class=\"string\">Allow:</span> /dianpu</div><div class=\"line\"><span class=\"string\">Allow:</span> /wenzhang</div><div class=\"line\"><span class=\"string\">Allow:</span> /oversea</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div><div class=\"line\">User-<span class=\"string\">Agent:</span> *</div><div class=\"line\"><span class=\"string\">Disallow:</span> /</div></pre></td></tr></table></figure></p>\n<h3 id=\"urullib库\"><a href=\"#urullib库\" class=\"headerlink\" title=\"urullib库\"></a>urullib库</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; import urllib.request</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; file=urllib.request.urlopen(<span class=\"string\">\"http://www.baidu.com\"</span>)    <span class=\"comment\">#方法1</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; data=file.read()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; len(data)</div><div class=\"line\"><span class=\"number\">100314</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; fh=open(<span class=\"string\">\"D:/Python35/gkk/a1.html\"</span>,<span class=\"string\">\"wb\"</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; fh.write(data)</div><div class=\"line\"><span class=\"number\">100314</span></div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; fh.close()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; urllib.request.urlretrieve(<span class=\"string\">\"http://news.sohu.com/\"</span>,filename=<span class=\"string\">\"D:/python35/gkk/a2.html\"</span>)    <span class=\"comment\">#方法2</span></div><div class=\"line\">(<span class=\"string\">'D:/python35/gkk/a2.html'</span>, &lt;http.client.HTTPMessage object at <span class=\"number\">0x000000000376AC18</span>&gt;)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt; urllib.request.urlcleanup()</div></pre></td></tr></table></figure>\n<h3 id=\"异常处理可以防止程序意外终止\"><a href=\"#异常处理可以防止程序意外终止\" class=\"headerlink\" title=\"异常处理可以防止程序意外终止\"></a>异常处理可以防止程序意外终止</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib<span class=\"selector-class\">.request</span></div><div class=\"line\">import urllib<span class=\"selector-class\">.error</span></div><div class=\"line\">try:</div><div class=\"line\">    urllib<span class=\"selector-class\">.request</span><span class=\"selector-class\">.urlopen</span>(<span class=\"string\">\"http://blog.csdn.net\"</span>)</div><div class=\"line\">except urllib<span class=\"selector-class\">.error</span><span class=\"selector-class\">.URLError</span> as e:</div><div class=\"line\">    <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"code\"</span>):</div><div class=\"line\">        print(e.code)</div><div class=\"line\">    <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"reason\"</span>):</div><div class=\"line\">        print(e.reason)</div><div class=\"line\">    urllib<span class=\"selector-class\">.request</span><span class=\"selector-class\">.urlopen</span>(<span class=\"string\">\"http://www.baidu.com\"</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"获取user-agent\"><a href=\"#获取user-agent\" class=\"headerlink\" title=\"获取user-agent\"></a>获取user-agent</h3><p>chrome查询user-agent  在地址栏中输入：about:version<br>firefox查询user-agent 进F12可以查看<br>通过网址测试查询user-agent： <a href=\"http://www.useragentstring.com/\">http://www.useragentstring.com/</a></p>\n<h3 id=\"例1-爬取糗事百科段子：\"><a href=\"#例1-爬取糗事百科段子：\" class=\"headerlink\" title=\"例1 爬取糗事百科段子：\"></a>例1 爬取糗事百科段子：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib.request</div><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getcontent</span><span class=\"params\">(url,page)</span>:</span></div><div class=\"line\">    <span class=\"comment\">#模拟成浏览器</span></div><div class=\"line\">    headers=(<span class=\"string\">\"User-Agent\"</span>,<span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36 SE 2.X MetaSr 1.0\"</span>)</div><div class=\"line\">    opener = urllib.request.build_opener()</div><div class=\"line\">    opener.addheaders = [headers]</div><div class=\"line\">    <span class=\"comment\">#将opener安装为全局</span></div><div class=\"line\">    urllib.request.install_opener(opener)</div><div class=\"line\">    data=urllib.request.urlopen(url).read().decode(<span class=\"string\">\"utf-8\"</span>)</div><div class=\"line\">    <span class=\"comment\">#构建段子内容提取的正则表达式</span></div><div class=\"line\">    contentpat=<span class=\"string\">'&lt;div class=\"content\"&gt;(.*?)&lt;/div&gt;'</span></div><div class=\"line\">    <span class=\"comment\">#寻找出所有的内容</span></div><div class=\"line\">    contentlist=re.compile(contentpat,re.S).findall(data)</div><div class=\"line\">    x=<span class=\"number\">1</span></div><div class=\"line\">    <span class=\"comment\">#通过for循环遍历段子内容</span></div><div class=\"line\">    <span class=\"keyword\">for</span> content <span class=\"keyword\">in</span> contentlist:</div><div class=\"line\">        content=content.replace(<span class=\"string\">\"\\n\"</span>,<span class=\"string\">\"\"</span>)</div><div class=\"line\">        print(content)</div><div class=\"line\">        print(<span class=\"string\">\"---------------------\"</span>)</div><div class=\"line\"><span class=\"comment\">#分别获取各页的段子，通过for循环可以获取多页</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">30</span>):</div><div class=\"line\">    url=<span class=\"string\">\"http://www.qiushibaike.com/8hr/page/\"</span>+str(i)</div><div class=\"line\">    getcontent(url,i)</div></pre></td></tr></table></figure>\n<h3 id=\"例2-爬取京东商城图片：\"><a href=\"#例2-爬取京东商城图片：\" class=\"headerlink\" title=\"例2 爬取京东商城图片：\"></a>例2 爬取京东商城图片：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"><span class=\"keyword\">import</span> urllib.request</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">craw</span><span class=\"params\">(url,page)</span>:</span></div><div class=\"line\">    html1=urllib.request.urlopen(url).read()</div><div class=\"line\">    html1=str(html1)</div><div class=\"line\">    pat1=<span class=\"string\">'&lt;div id=\"plist\".+? &lt;div class=\"page clearfix\"&gt;'</span></div><div class=\"line\">    result1=re.compile(pat1).findall(html1)</div><div class=\"line\">    result1=result1[<span class=\"number\">0</span>]</div><div class=\"line\">    pat2=<span class=\"string\">'&lt;img width=\"220\" height=\"220\" data-img=\"1\" data-lazy-img=\"//(.+?\\.jpg)\"&gt;'</span></div><div class=\"line\">    imagelist=re.compile(pat2).findall(result1)</div><div class=\"line\">    x=<span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">for</span> imageurl <span class=\"keyword\">in</span> imagelist:</div><div class=\"line\">        imagename=<span class=\"string\">\"C:/jd/\"</span>+str(page)+str(x)+<span class=\"string\">\".jpg\"</span></div><div class=\"line\">        imageurl=<span class=\"string\">\"http://\"</span>+imageurl</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            urllib.request.urlretrieve(imageurl,filename=imagename)</div><div class=\"line\">        <span class=\"keyword\">except</span> urllib.error.URLError <span class=\"keyword\">as</span> e:</div><div class=\"line\">            <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"code\"</span>):</div><div class=\"line\">                x+=<span class=\"number\">1</span></div><div class=\"line\">            <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">\"reason\"</span>):</div><div class=\"line\">                x+=<span class=\"number\">1</span></div><div class=\"line\">        x+=<span class=\"number\">1</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">5</span>):</div><div class=\"line\">    url=<span class=\"string\">\"http://list.jd.com/list.html?cat=9987,653,655&amp;page=\"</span>+str(i)</div><div class=\"line\">    craw(url,i)</div></pre></td></tr></table></figure>"},{"title":"爬虫框架scrapy","date":"2016-11-08T07:03:23.000Z","_content":"\n官方网站：http://scrapy.org/\n官网教程：https://doc.scrapy.org/en/latest/index.html\n中文版：http://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html\n\n## 安装scrapy\n<!-- more -->\n### windows平台\ntwisted lxml 下载地址: http://www.lfd.uci.edu/~gohlke/pythonlibs/\n```\npython -m pip install --upgrade pip     #升级pip版本\npip install C:\\Users\\Administrator\\Downloads\\Twisted-16.5.0-cp35-cp35m-win_amd64.whl        #安装twisted\npip install C:\\Users\\Administrator\\Downloads\\lxml-3.6.4-cp35-cp35m-win_amd64.whl            #安装lxml\npip install pypiwin32                   #安装关联模块pypiwin32\npip install scrapy                      #安装scrapy\nscrapy bench                            #验证Scrapy\n```\n\n### ubuntu平台\n```\nsudo apt-get install python3 python3-dev python3-pip\nsudo pip3 install --upgrade pip\nsudo apt-get install libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libssl-dev\nsudo pip3 install scrapy                #安装scrapy\nscrapy bench                            #验证Scrapy\n```\n\n## scrapy命令\n```\nscrapy startproject project                 #创建项目\nscrapy genspider -l                         #查看可用模板\nscrapy genspider -t basic name baidu.com    #依据模板创建文件\nscrapy genspider mydomain mydomain.com      #创建一个新的spider文件\nscrapy crawl name --nolog                   #启动spider并不显示log\nscrapy crawl name -o items.json             #保存爬取到的数据\n\nscrapy fetch http://www.baidu.com --nolog       #下载给定的URL，并将获取到的内容送到标准输出。\nscrapy runspider name.py                        #在未创建项目时，运行一个编写在Python文件中的spider\nscrapy shell http://www.baidu.com --nolog       #调试并不显示日志信息\nscrapy view http://www.baidu.com                #在浏览器中打开网页\n\nscrapy check  name                              #运行contract检查\nscrapy list                                     #列出当前文件夹下的爬虫文件\nscrapy edit name                                #编辑\nscrapy parse http://www.baidu.com               #获取给定的URL并使用相应的spider分析处理。如果提供 --callback，则使用spider处理\n\nscrapy -h\t\t\t\t\t#查看所有可用的命令\nscrapy <command> -h\t\t\t\t#查看命令的详细内容\n\n#Scrapy全局命令:\nbench         #Run quick benchmark test\nfetch         #Fetch a URL using the Scrapy downloader\ngenspider     #Generate new spider using pre-defined templates\nrunspider     #Run a self-contained spider (without creating a project)\nsettings      #Get settings values\nshell         #Interactive scraping console\nstartproject  #Create new project\nversion       #Print Scrapy version\nview          #Open URL in browser, as seen by Scrapy\n\n#Scrapy项目(Project-only)命令:\ncheck         #Check spider contracts\ncrawl         #Run a spider\nedit          #Edit spider\nlist          #List available spiders\nparse         #Parse URL (using its spider) and print the results\n\nscrapy parse <url> [options]\t#如果提供 --callback 选项，则使用spider的该方法处理，否则使用 parse\n\t--spider=SPIDER:    #跳过自动检测spider并强制使用特定的spider\n\t--a NAME=VALUE:     #设置spider的参数(可能被重复)\n\t--callback or -c:   #spider中用于解析返回(response)的回调函数\n\t--pipelines:        #在pipeline中处理item\n\t--rules or -r:      #使用 CrawlSpider 规则来发现用来解析返回(response)的回调函数\n\t--noitems:          #不显示爬取到的item\n\t--nolinks:          #不显示提取到的链接\n\t--nocolour:         #避免使用pygments对输出着色\n\t--depth or -d:      #指定跟进链接请求的层次数(默认: 1)\n\t--verbose or -v:    #显示每个请求的详细信息\n```\n\n## xpath基本用法\n```\n/                       #根节点\n//                      #匹配所有的\ntext()                  #提取文本\n@属性名                 #提取属性\n标签[@属性=属性值]      #匹配该属性的标签\n```\n\n## 默认的Scrapy项目结构\n```python\n.\n├── bing\n│   ├── __init__.py\n│   ├── items.py                        #定义要爬取的内容结构\n│   ├── pipelines.py                    #处理提取的内容\n│   ├── __pycache__\n│   ├── settings.py                     #项目的参数设置文件\n│   └── spiders\n│  \t├── getimg.py                   #项目的主文件\n│       ├── __init__.py\n│       └── __pycache__\n└── scrapy.cfg                          #项目的配置文件\n```\n---\n\n**scrapy data flow**\n![scrapy data flow](http://ofat4idzj.bkt.clouddn.com/scrapy_architecture.png)\n","source":"_posts/7_爬虫框架scrapy.md","raw":"---\ntitle: 爬虫框架scrapy\ndate: 2016-11-08 15:03:23\ntags: scrapy\ncategories: [python,crawler]\n\n---\n\n官方网站：http://scrapy.org/\n官网教程：https://doc.scrapy.org/en/latest/index.html\n中文版：http://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html\n\n## 安装scrapy\n<!-- more -->\n### windows平台\ntwisted lxml 下载地址: http://www.lfd.uci.edu/~gohlke/pythonlibs/\n```\npython -m pip install --upgrade pip     #升级pip版本\npip install C:\\Users\\Administrator\\Downloads\\Twisted-16.5.0-cp35-cp35m-win_amd64.whl        #安装twisted\npip install C:\\Users\\Administrator\\Downloads\\lxml-3.6.4-cp35-cp35m-win_amd64.whl            #安装lxml\npip install pypiwin32                   #安装关联模块pypiwin32\npip install scrapy                      #安装scrapy\nscrapy bench                            #验证Scrapy\n```\n\n### ubuntu平台\n```\nsudo apt-get install python3 python3-dev python3-pip\nsudo pip3 install --upgrade pip\nsudo apt-get install libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libssl-dev\nsudo pip3 install scrapy                #安装scrapy\nscrapy bench                            #验证Scrapy\n```\n\n## scrapy命令\n```\nscrapy startproject project                 #创建项目\nscrapy genspider -l                         #查看可用模板\nscrapy genspider -t basic name baidu.com    #依据模板创建文件\nscrapy genspider mydomain mydomain.com      #创建一个新的spider文件\nscrapy crawl name --nolog                   #启动spider并不显示log\nscrapy crawl name -o items.json             #保存爬取到的数据\n\nscrapy fetch http://www.baidu.com --nolog       #下载给定的URL，并将获取到的内容送到标准输出。\nscrapy runspider name.py                        #在未创建项目时，运行一个编写在Python文件中的spider\nscrapy shell http://www.baidu.com --nolog       #调试并不显示日志信息\nscrapy view http://www.baidu.com                #在浏览器中打开网页\n\nscrapy check  name                              #运行contract检查\nscrapy list                                     #列出当前文件夹下的爬虫文件\nscrapy edit name                                #编辑\nscrapy parse http://www.baidu.com               #获取给定的URL并使用相应的spider分析处理。如果提供 --callback，则使用spider处理\n\nscrapy -h\t\t\t\t\t#查看所有可用的命令\nscrapy <command> -h\t\t\t\t#查看命令的详细内容\n\n#Scrapy全局命令:\nbench         #Run quick benchmark test\nfetch         #Fetch a URL using the Scrapy downloader\ngenspider     #Generate new spider using pre-defined templates\nrunspider     #Run a self-contained spider (without creating a project)\nsettings      #Get settings values\nshell         #Interactive scraping console\nstartproject  #Create new project\nversion       #Print Scrapy version\nview          #Open URL in browser, as seen by Scrapy\n\n#Scrapy项目(Project-only)命令:\ncheck         #Check spider contracts\ncrawl         #Run a spider\nedit          #Edit spider\nlist          #List available spiders\nparse         #Parse URL (using its spider) and print the results\n\nscrapy parse <url> [options]\t#如果提供 --callback 选项，则使用spider的该方法处理，否则使用 parse\n\t--spider=SPIDER:    #跳过自动检测spider并强制使用特定的spider\n\t--a NAME=VALUE:     #设置spider的参数(可能被重复)\n\t--callback or -c:   #spider中用于解析返回(response)的回调函数\n\t--pipelines:        #在pipeline中处理item\n\t--rules or -r:      #使用 CrawlSpider 规则来发现用来解析返回(response)的回调函数\n\t--noitems:          #不显示爬取到的item\n\t--nolinks:          #不显示提取到的链接\n\t--nocolour:         #避免使用pygments对输出着色\n\t--depth or -d:      #指定跟进链接请求的层次数(默认: 1)\n\t--verbose or -v:    #显示每个请求的详细信息\n```\n\n## xpath基本用法\n```\n/                       #根节点\n//                      #匹配所有的\ntext()                  #提取文本\n@属性名                 #提取属性\n标签[@属性=属性值]      #匹配该属性的标签\n```\n\n## 默认的Scrapy项目结构\n```python\n.\n├── bing\n│   ├── __init__.py\n│   ├── items.py                        #定义要爬取的内容结构\n│   ├── pipelines.py                    #处理提取的内容\n│   ├── __pycache__\n│   ├── settings.py                     #项目的参数设置文件\n│   └── spiders\n│  \t├── getimg.py                   #项目的主文件\n│       ├── __init__.py\n│       └── __pycache__\n└── scrapy.cfg                          #项目的配置文件\n```\n---\n\n**scrapy data flow**\n![scrapy data flow](http://ofat4idzj.bkt.clouddn.com/scrapy_architecture.png)\n","slug":"7_爬虫框架scrapy","published":1,"updated":"2016-11-18T15:43:51.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxno000eulyqaourdpz6","content":"<p>官方网站：<a href=\"http://scrapy.org/\" target=\"_blank\" rel=\"external\">http://scrapy.org/</a><br>官网教程：<a href=\"https://doc.scrapy.org/en/latest/index.html\" target=\"_blank\" rel=\"external\">https://doc.scrapy.org/en/latest/index.html</a><br>中文版：<a href=\"http://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html\" target=\"_blank\" rel=\"external\">http://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html</a></p>\n<h2 id=\"安装scrapy\"><a href=\"#安装scrapy\" class=\"headerlink\" title=\"安装scrapy\"></a>安装scrapy</h2><a id=\"more\"></a>\n<h3 id=\"windows平台\"><a href=\"#windows平台\" class=\"headerlink\" title=\"windows平台\"></a>windows平台</h3><p>twisted lxml 下载地址: <a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"external\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">python -m pip <span class=\"keyword\">install </span>--upgrade pip     <span class=\"comment\">#升级pip版本</span></div><div class=\"line\">pip <span class=\"keyword\">install </span>C:\\Users\\Administrator\\Downloads\\Twisted-16.<span class=\"number\">5</span>.<span class=\"number\">0</span>-cp35-cp35m-win_amd64.whl        <span class=\"comment\">#安装twisted</span></div><div class=\"line\">pip <span class=\"keyword\">install </span>C:\\Users\\Administrator\\Downloads\\lxml-3.<span class=\"number\">6</span>.<span class=\"number\">4</span>-cp35-cp35m-win_amd64.whl            <span class=\"comment\">#安装lxml</span></div><div class=\"line\">pip <span class=\"keyword\">install </span>pypiwin32                   <span class=\"comment\">#安装关联模块pypiwin32</span></div><div class=\"line\">pip <span class=\"keyword\">install </span><span class=\"keyword\">scrapy </span>                     <span class=\"comment\">#安装scrapy</span></div><div class=\"line\"><span class=\"keyword\">scrapy </span><span class=\"keyword\">bench </span>                           <span class=\"comment\">#验证Scrapy</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"ubuntu平台\"><a href=\"#ubuntu平台\" class=\"headerlink\" title=\"ubuntu平台\"></a>ubuntu平台</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get <span class=\"keyword\">install </span>python3 python3-dev python3-pip</div><div class=\"line\">sudo pip3 <span class=\"keyword\">install </span>--upgrade pip</div><div class=\"line\">sudo apt-get <span class=\"keyword\">install </span>libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libssl-dev</div><div class=\"line\">sudo pip3 <span class=\"keyword\">install </span><span class=\"keyword\">scrapy </span>               <span class=\"comment\">#安装scrapy</span></div><div class=\"line\"><span class=\"keyword\">scrapy </span><span class=\"keyword\">bench </span>                           <span class=\"comment\">#验证Scrapy</span></div></pre></td></tr></table></figure>\n<h2 id=\"scrapy命令\"><a href=\"#scrapy命令\" class=\"headerlink\" title=\"scrapy命令\"></a>scrapy命令</h2><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">startproject </span><span class=\"string\">project </span>                <span class=\"comment\">#创建项目</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">genspider </span>-l                         <span class=\"comment\">#查看可用模板</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">genspider </span>-t <span class=\"string\">basic </span><span class=\"string\">name </span><span class=\"string\">baidu.</span><span class=\"string\">com </span>   <span class=\"comment\">#依据模板创建文件</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">genspider </span><span class=\"string\">mydomain </span><span class=\"string\">mydomain.</span><span class=\"string\">com </span>     <span class=\"comment\">#创建一个新的spider文件</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">crawl </span><span class=\"string\">name </span><span class=\"built_in\">--nolog</span>                   <span class=\"comment\">#启动spider并不显示log</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">crawl </span><span class=\"string\">name </span>-o <span class=\"string\">items.</span><span class=\"string\">json </span>            <span class=\"comment\">#保存爬取到的数据</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">fetch </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span><span class=\"built_in\">--nolog</span>       <span class=\"comment\">#下载给定的URL，并将获取到的内容送到标准输出。</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">runspider </span><span class=\"string\">name.</span><span class=\"string\">py </span>                       <span class=\"comment\">#在未创建项目时，运行一个编写在Python文件中的spider</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">shell </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span><span class=\"built_in\">--nolog</span>       <span class=\"comment\">#调试并不显示日志信息</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">view </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span>               <span class=\"comment\">#在浏览器中打开网页</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">check </span> <span class=\"string\">name </span>                             <span class=\"comment\">#运行contract检查</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">list </span>                                    <span class=\"comment\">#列出当前文件夹下的爬虫文件</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">edit </span><span class=\"string\">name </span>                               <span class=\"comment\">#编辑</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">parse </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span>              <span class=\"comment\">#获取给定的URL并使用相应的spider分析处理。如果提供 --callback，则使用spider处理</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span>-h\t\t\t\t\t<span class=\"comment\">#查看所有可用的命令</span></div><div class=\"line\"><span class=\"string\">scrapy </span>&lt;<span class=\"string\">command&gt;</span> -h\t\t\t\t<span class=\"comment\">#查看命令的详细内容</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#Scrapy全局命令:</span></div><div class=\"line\"><span class=\"string\">bench </span>        <span class=\"comment\">#Run quick benchmark test</span></div><div class=\"line\"><span class=\"string\">fetch </span>        <span class=\"comment\">#Fetch a URL using the Scrapy downloader</span></div><div class=\"line\"><span class=\"string\">genspider </span>    <span class=\"comment\">#Generate new spider using pre-defined templates</span></div><div class=\"line\"><span class=\"string\">runspider </span>    <span class=\"comment\">#Run a self-contained spider (without creating a project)</span></div><div class=\"line\"><span class=\"string\">settings </span>     <span class=\"comment\">#Get settings values</span></div><div class=\"line\"><span class=\"string\">shell </span>        <span class=\"comment\">#Interactive scraping console</span></div><div class=\"line\"><span class=\"string\">startproject </span> <span class=\"comment\">#Create new project</span></div><div class=\"line\"><span class=\"string\">version </span>      <span class=\"comment\">#Print Scrapy version</span></div><div class=\"line\"><span class=\"string\">view </span>         <span class=\"comment\">#Open URL in browser, as seen by Scrapy</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#Scrapy项目(Project-only)命令:</span></div><div class=\"line\"><span class=\"string\">check </span>        <span class=\"comment\">#Check spider contracts</span></div><div class=\"line\"><span class=\"string\">crawl </span>        <span class=\"comment\">#Run a spider</span></div><div class=\"line\"><span class=\"string\">edit </span>         <span class=\"comment\">#Edit spider</span></div><div class=\"line\"><span class=\"string\">list </span>         <span class=\"comment\">#List available spiders</span></div><div class=\"line\"><span class=\"string\">parse </span>        <span class=\"comment\">#Parse URL (using its spider) and print the results</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">parse </span>&lt;<span class=\"string\">url&gt;</span> [<span class=\"string\">options]</span>\t<span class=\"comment\">#如果提供 --callback 选项，则使用spider的该方法处理，否则使用 parse</span></div><div class=\"line\">\t<span class=\"built_in\">--spider=SPIDER:</span>    <span class=\"comment\">#跳过自动检测spider并强制使用特定的spider</span></div><div class=\"line\">\t<span class=\"built_in\">--a</span> <span class=\"string\">NAME=</span><span class=\"string\">VALUE:</span>     <span class=\"comment\">#设置spider的参数(可能被重复)</span></div><div class=\"line\">\t<span class=\"built_in\">--callback</span> <span class=\"string\">or </span>-c:   <span class=\"comment\">#spider中用于解析返回(response)的回调函数</span></div><div class=\"line\">\t<span class=\"built_in\">--pipelines:</span>        <span class=\"comment\">#在pipeline中处理item</span></div><div class=\"line\">\t<span class=\"built_in\">--rules</span> <span class=\"string\">or </span>-r:      <span class=\"comment\">#使用 CrawlSpider 规则来发现用来解析返回(response)的回调函数</span></div><div class=\"line\">\t<span class=\"built_in\">--noitems:</span>          <span class=\"comment\">#不显示爬取到的item</span></div><div class=\"line\">\t<span class=\"built_in\">--nolinks:</span>          <span class=\"comment\">#不显示提取到的链接</span></div><div class=\"line\">\t<span class=\"built_in\">--nocolour:</span>         <span class=\"comment\">#避免使用pygments对输出着色</span></div><div class=\"line\">\t<span class=\"built_in\">--depth</span> <span class=\"string\">or </span>-d:      <span class=\"comment\">#指定跟进链接请求的层次数(默认: 1)</span></div><div class=\"line\">\t<span class=\"built_in\">--verbose</span> <span class=\"string\">or </span>-v:    <span class=\"comment\">#显示每个请求的详细信息</span></div></pre></td></tr></table></figure>\n<h2 id=\"xpath基本用法\"><a href=\"#xpath基本用法\" class=\"headerlink\" title=\"xpath基本用法\"></a>xpath基本用法</h2><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">/                       <span class=\"comment\">#根节点</span></div><div class=\"line\">//                      <span class=\"comment\">#匹配所有的</span></div><div class=\"line\">text()                  <span class=\"comment\">#提取文本</span></div><div class=\"line\"><span class=\"meta\">@属性名</span>                 <span class=\"comment\">#提取属性</span></div><div class=\"line\">标签[<span class=\"meta\">@属性=属性值]</span>      <span class=\"comment\">#匹配该属性的标签</span></div></pre></td></tr></table></figure>\n<h2 id=\"默认的Scrapy项目结构\"><a href=\"#默认的Scrapy项目结构\" class=\"headerlink\" title=\"默认的Scrapy项目结构\"></a>默认的Scrapy项目结构</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── bing</div><div class=\"line\">│   ├── __init__.py</div><div class=\"line\">│   ├── items.py                        <span class=\"comment\">#定义要爬取的内容结构</span></div><div class=\"line\">│   ├── pipelines.py                    <span class=\"comment\">#处理提取的内容</span></div><div class=\"line\">│   ├── __pycache__</div><div class=\"line\">│   ├── settings.py                     <span class=\"comment\">#项目的参数设置文件</span></div><div class=\"line\">│   └── spiders</div><div class=\"line\">│  \t├── getimg.py                   <span class=\"comment\">#项目的主文件</span></div><div class=\"line\">│       ├── __init__.py</div><div class=\"line\">│       └── __pycache__</div><div class=\"line\">└── scrapy.cfg                          <span class=\"comment\">#项目的配置文件</span></div></pre></td></tr></table></figure>\n<hr>\n<p><strong>scrapy data flow</strong><br><img src=\"http://ofat4idzj.bkt.clouddn.com/scrapy_architecture.png\" alt=\"scrapy data flow\"></p>\n","excerpt":"<p>官方网站：<a href=\"http://scrapy.org/\">http://scrapy.org/</a><br>官网教程：<a href=\"https://doc.scrapy.org/en/latest/index.html\">https://doc.scrapy.org/en/latest/index.html</a><br>中文版：<a href=\"http://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html\">http://scrapy-chs.readthedocs.io/zh_CN/1.0/index.html</a></p>\n<h2 id=\"安装scrapy\"><a href=\"#安装scrapy\" class=\"headerlink\" title=\"安装scrapy\"></a>安装scrapy</h2>","more":"<h3 id=\"windows平台\"><a href=\"#windows平台\" class=\"headerlink\" title=\"windows平台\"></a>windows平台</h3><p>twisted lxml 下载地址: <a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">python -m pip <span class=\"keyword\">install </span>--upgrade pip     <span class=\"comment\">#升级pip版本</span></div><div class=\"line\">pip <span class=\"keyword\">install </span>C:\\Users\\Administrator\\Downloads\\Twisted-16.<span class=\"number\">5</span>.<span class=\"number\">0</span>-cp35-cp35m-win_amd64.whl        <span class=\"comment\">#安装twisted</span></div><div class=\"line\">pip <span class=\"keyword\">install </span>C:\\Users\\Administrator\\Downloads\\lxml-3.<span class=\"number\">6</span>.<span class=\"number\">4</span>-cp35-cp35m-win_amd64.whl            <span class=\"comment\">#安装lxml</span></div><div class=\"line\">pip <span class=\"keyword\">install </span>pypiwin32                   <span class=\"comment\">#安装关联模块pypiwin32</span></div><div class=\"line\">pip <span class=\"keyword\">install </span><span class=\"keyword\">scrapy </span>                     <span class=\"comment\">#安装scrapy</span></div><div class=\"line\"><span class=\"keyword\">scrapy </span><span class=\"keyword\">bench </span>                           <span class=\"comment\">#验证Scrapy</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"ubuntu平台\"><a href=\"#ubuntu平台\" class=\"headerlink\" title=\"ubuntu平台\"></a>ubuntu平台</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get <span class=\"keyword\">install </span>python3 python3-dev python3-pip</div><div class=\"line\">sudo pip3 <span class=\"keyword\">install </span>--upgrade pip</div><div class=\"line\">sudo apt-get <span class=\"keyword\">install </span>libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libssl-dev</div><div class=\"line\">sudo pip3 <span class=\"keyword\">install </span><span class=\"keyword\">scrapy </span>               <span class=\"comment\">#安装scrapy</span></div><div class=\"line\"><span class=\"keyword\">scrapy </span><span class=\"keyword\">bench </span>                           <span class=\"comment\">#验证Scrapy</span></div></pre></td></tr></table></figure>\n<h2 id=\"scrapy命令\"><a href=\"#scrapy命令\" class=\"headerlink\" title=\"scrapy命令\"></a>scrapy命令</h2><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">startproject </span><span class=\"string\">project </span>                <span class=\"comment\">#创建项目</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">genspider </span>-l                         <span class=\"comment\">#查看可用模板</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">genspider </span>-t <span class=\"string\">basic </span><span class=\"string\">name </span><span class=\"string\">baidu.</span><span class=\"string\">com </span>   <span class=\"comment\">#依据模板创建文件</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">genspider </span><span class=\"string\">mydomain </span><span class=\"string\">mydomain.</span><span class=\"string\">com </span>     <span class=\"comment\">#创建一个新的spider文件</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">crawl </span><span class=\"string\">name </span><span class=\"built_in\">--nolog</span>                   <span class=\"comment\">#启动spider并不显示log</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">crawl </span><span class=\"string\">name </span>-o <span class=\"string\">items.</span><span class=\"string\">json </span>            <span class=\"comment\">#保存爬取到的数据</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">fetch </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span><span class=\"built_in\">--nolog</span>       <span class=\"comment\">#下载给定的URL，并将获取到的内容送到标准输出。</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">runspider </span><span class=\"string\">name.</span><span class=\"string\">py </span>                       <span class=\"comment\">#在未创建项目时，运行一个编写在Python文件中的spider</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">shell </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span><span class=\"built_in\">--nolog</span>       <span class=\"comment\">#调试并不显示日志信息</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">view </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span>               <span class=\"comment\">#在浏览器中打开网页</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">check </span> <span class=\"string\">name </span>                             <span class=\"comment\">#运行contract检查</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">list </span>                                    <span class=\"comment\">#列出当前文件夹下的爬虫文件</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">edit </span><span class=\"string\">name </span>                               <span class=\"comment\">#编辑</span></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">parse </span><span class=\"string\">http:</span>//<span class=\"string\">www.</span><span class=\"string\">baidu.</span><span class=\"string\">com </span>              <span class=\"comment\">#获取给定的URL并使用相应的spider分析处理。如果提供 --callback，则使用spider处理</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span>-h\t\t\t\t\t<span class=\"comment\">#查看所有可用的命令</span></div><div class=\"line\"><span class=\"string\">scrapy </span>&lt;<span class=\"string\">command&gt;</span> -h\t\t\t\t<span class=\"comment\">#查看命令的详细内容</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#Scrapy全局命令:</span></div><div class=\"line\"><span class=\"string\">bench </span>        <span class=\"comment\">#Run quick benchmark test</span></div><div class=\"line\"><span class=\"string\">fetch </span>        <span class=\"comment\">#Fetch a URL using the Scrapy downloader</span></div><div class=\"line\"><span class=\"string\">genspider </span>    <span class=\"comment\">#Generate new spider using pre-defined templates</span></div><div class=\"line\"><span class=\"string\">runspider </span>    <span class=\"comment\">#Run a self-contained spider (without creating a project)</span></div><div class=\"line\"><span class=\"string\">settings </span>     <span class=\"comment\">#Get settings values</span></div><div class=\"line\"><span class=\"string\">shell </span>        <span class=\"comment\">#Interactive scraping console</span></div><div class=\"line\"><span class=\"string\">startproject </span> <span class=\"comment\">#Create new project</span></div><div class=\"line\"><span class=\"string\">version </span>      <span class=\"comment\">#Print Scrapy version</span></div><div class=\"line\"><span class=\"string\">view </span>         <span class=\"comment\">#Open URL in browser, as seen by Scrapy</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#Scrapy项目(Project-only)命令:</span></div><div class=\"line\"><span class=\"string\">check </span>        <span class=\"comment\">#Check spider contracts</span></div><div class=\"line\"><span class=\"string\">crawl </span>        <span class=\"comment\">#Run a spider</span></div><div class=\"line\"><span class=\"string\">edit </span>         <span class=\"comment\">#Edit spider</span></div><div class=\"line\"><span class=\"string\">list </span>         <span class=\"comment\">#List available spiders</span></div><div class=\"line\"><span class=\"string\">parse </span>        <span class=\"comment\">#Parse URL (using its spider) and print the results</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">scrapy </span><span class=\"string\">parse </span>&lt;<span class=\"string\">url&gt;</span> [<span class=\"string\">options]</span>\t<span class=\"comment\">#如果提供 --callback 选项，则使用spider的该方法处理，否则使用 parse</span></div><div class=\"line\">\t<span class=\"built_in\">--spider=SPIDER:</span>    <span class=\"comment\">#跳过自动检测spider并强制使用特定的spider</span></div><div class=\"line\">\t<span class=\"built_in\">--a</span> <span class=\"string\">NAME=</span><span class=\"string\">VALUE:</span>     <span class=\"comment\">#设置spider的参数(可能被重复)</span></div><div class=\"line\">\t<span class=\"built_in\">--callback</span> <span class=\"string\">or </span>-c:   <span class=\"comment\">#spider中用于解析返回(response)的回调函数</span></div><div class=\"line\">\t<span class=\"built_in\">--pipelines:</span>        <span class=\"comment\">#在pipeline中处理item</span></div><div class=\"line\">\t<span class=\"built_in\">--rules</span> <span class=\"string\">or </span>-r:      <span class=\"comment\">#使用 CrawlSpider 规则来发现用来解析返回(response)的回调函数</span></div><div class=\"line\">\t<span class=\"built_in\">--noitems:</span>          <span class=\"comment\">#不显示爬取到的item</span></div><div class=\"line\">\t<span class=\"built_in\">--nolinks:</span>          <span class=\"comment\">#不显示提取到的链接</span></div><div class=\"line\">\t<span class=\"built_in\">--nocolour:</span>         <span class=\"comment\">#避免使用pygments对输出着色</span></div><div class=\"line\">\t<span class=\"built_in\">--depth</span> <span class=\"string\">or </span>-d:      <span class=\"comment\">#指定跟进链接请求的层次数(默认: 1)</span></div><div class=\"line\">\t<span class=\"built_in\">--verbose</span> <span class=\"string\">or </span>-v:    <span class=\"comment\">#显示每个请求的详细信息</span></div></pre></td></tr></table></figure>\n<h2 id=\"xpath基本用法\"><a href=\"#xpath基本用法\" class=\"headerlink\" title=\"xpath基本用法\"></a>xpath基本用法</h2><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">/                       <span class=\"comment\">#根节点</span></div><div class=\"line\">//                      <span class=\"comment\">#匹配所有的</span></div><div class=\"line\">text()                  <span class=\"comment\">#提取文本</span></div><div class=\"line\"><span class=\"meta\">@属性名</span>                 <span class=\"comment\">#提取属性</span></div><div class=\"line\">标签[<span class=\"meta\">@属性=属性值]</span>      <span class=\"comment\">#匹配该属性的标签</span></div></pre></td></tr></table></figure>\n<h2 id=\"默认的Scrapy项目结构\"><a href=\"#默认的Scrapy项目结构\" class=\"headerlink\" title=\"默认的Scrapy项目结构\"></a>默认的Scrapy项目结构</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── bing</div><div class=\"line\">│   ├── __init__.py</div><div class=\"line\">│   ├── items.py                        <span class=\"comment\">#定义要爬取的内容结构</span></div><div class=\"line\">│   ├── pipelines.py                    <span class=\"comment\">#处理提取的内容</span></div><div class=\"line\">│   ├── __pycache__</div><div class=\"line\">│   ├── settings.py                     <span class=\"comment\">#项目的参数设置文件</span></div><div class=\"line\">│   └── spiders</div><div class=\"line\">│  \t├── getimg.py                   <span class=\"comment\">#项目的主文件</span></div><div class=\"line\">│       ├── __init__.py</div><div class=\"line\">│       └── __pycache__</div><div class=\"line\">└── scrapy.cfg                          <span class=\"comment\">#项目的配置文件</span></div></pre></td></tr></table></figure>\n<hr>\n<p><strong>scrapy data flow</strong><br><img src=\"http://ofat4idzj.bkt.clouddn.com/scrapy_architecture.png\" alt=\"scrapy data flow\"></p>"},{"title":"vim环境配置","date":"2016-11-18T05:42:43.000Z","_content":"\n## 安装vim\n### 通过包管理安装\n安装add-apt-repository\n`sudo apt-get install software-properties-common python-software-properties`\n\nubuntu16.04添加ppa源来安装新版vim\n`sudo add-apt-repository ppa:jonathonf/vim`\n`sudo apt-get update`\n`sudo apt-get install vim`\n<!-- more -->\n卸载\n`sudo apt remove vim`\n`sudo add-apt-repository --remove ppa:jonathonf/vim`\n\n### 源码编译安装\n获取源码\n`git clone https://github.com/vim/vim.git`\n\n安装相应的依赖\n```\nsudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \\\nlibgtk2.0-dev libatk1.0-dev libbonoboui2-dev \\\nlibcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \\\npython3-dev ruby-dev lua5.1 lua5.1-dev libperl-dev\n```\n\n删除原有vim\n```\ndpkg -l | grep vim\nsudo dpkg -P vim vim-common vim-run\n```\n\n编译源码并安装\n```\n./configure --with-features=huge --enable-multibyte \\\n--enable-pythoninterp --enable-python3interp --enable-perlinterp --enable-rubyinterp --enable-luainterp \\\n--enable-gui=gtk2 --enable-cscope \\\n--with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \\\n--with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \\\n--prefix=/usr \\\n--enable-fail-if-missing\n\nmake && sudo make install\n```\n\n设置软连接\n`sudo ln -s /usr/bin/vim /usr/bin/vi`\n`sudo mkdir /etc/vim && sudo touch /etc/vim/vimrc`\n`sudo ln -s /etc/vim/vimrc /usr/share/vim/vimrc`\n\n## vim命令\n```\ns   #删除光标所在字符，并进入输入模式\nS   #删除光标所在行，并进入输入模式\nR   #替换多个字符\n\nncb #剪切光标前n个单词\nnyw #复制光标后n个单词\nndw #删除光标后n个单词\n\nc$  #剪切从光标所在位置到行尾的字符串\ny^  #复制从光标所在位置到行首的字符串\nd$  #删除或者剪切从光标所在位置到行尾的字符串\n\ngg=G            #自动排版\n\nH               #移动到屏幕首行\nM               #移动到屏幕中间\nL               #移动到屏幕末行\ngg              #移动到文件首行\nG               #移动到文件末行\n\n0               #移动到所在行最前的字符\n^               #移动到所在行第一个非空字符\n$               #移动到所在行最后一个字符\n\nb               #移动到上一个单词的第一个字符\nw               #移动到下一个单词的第一个字符\ne               #移动到下一个单词的第一个字符\n\nCtrl + d        #光标向下移动半页\nCtrl + f        #光标向下移动一页\nCtrl + n        #补全单词\nCtrl + p        #补全单词\nCtrl + x + l    #补全一行\nCtrl + x + f    #插入当前目录下文件名\n\n/string         #向下查找\n?string         #向上查找\n\n:range y        #块复制\n:range d        #块删除\n:range s/old_string/new_string/gc      #替换\n    #% 表示所有行\n    #. 表示当前行\n    #$ 表示末行\n    #g 表示行中进行多个匹配\n    #c 替换前询问\n\n:vs file_name       #打开一个文件并左右分割窗口\n:sp file_name       #打开一个文件并上下分割窗口\nctrl+w+w            #文件之间切换\n\nset paste           #设置为粘贴模式\nset nopaste         #关闭粘贴模式\nset mouse=v         #设置鼠标模式为v\n\nqa                  #将后续的命令记入寄存器a,q结束录制\n@a                  #执行寄存器a中录制的内容\n```\n\n## vim配置\n```\ntabstop             # ts 定义tab所等同的空格长度，一般来说最好设置成8\nshiftwidth          # sw 用于程序中自动缩进所使用的空白长度指示\nsofttabstop         # sts 逢8空格进1制表符”,前提是你tabstop=8\nexpandtab           # et 以空格替换\n\ncindent             # 用C语言的缩进格式来处理程序的缩进结构\nsmartindent         # si 和前一行有相同的缩进量，同时能识别出花括号，函数等\nautoindent          # ai 新增加的行和前一行使用相同的缩进形式\n\nautocmd             # au 自动执行命令\n\n空格和TAB的替换：\n#TAB替换为空格：\n:set ts=4\n:set et\n:%retab!\n\n#空格替换为TAB：\n:set ts=4\n:set noet\n:%retab!\n#加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB\n\n#删除每行后面多余的空格，可以执行如下命令：\n:%s/\\s\\+$//\n#删除每行前面的空格，执行如下命令：\n:%s/^\\+\\s//\n```\n`/etc/vim/vimrc`配置\n```\nsyntax on\n\nset nu\nset mouse=a                     \"设置鼠标可用\nset pastetoggle=<F12>           \"按f12打开或关闭粘贴模式\n\n\" \\ should be followed by /, ? or &\nset nocompatible\n\nset foldenable              \" 开始折叠\nset fdm=syntax              \" 设置语法折叠\nset foldcolumn=0            \" 设置折叠区域的宽度\nsetlocal foldlevel=1        \" 设置折叠层数为\nset foldlevelstart=99       \" 打开文件是默认不折叠代码\nset foldclose=all           \" 设置为自动关闭折叠\nnnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>\n\"用空格键来开关折叠\n\"zM 折叠所有代码\n\"zR 取消所有代码折叠\n\"zC 递归折叠代码\n\"zO 递归取消折叠\n\"[z ]z zj zk 移动\n\nau BufNewFile,BufRead *.c,*.cpp,*.h\n    \\ set cindent\n\nau BufNewFile,BufRead *.py\n    \\ set tabstop=4 |\n    \\ set softtabstop=4 |\n    \\ set shiftwidth=4 |\n    \\ set textwidth=79 |\n    \\ set expandtab |\n    \\ set autoindent |\n    \\ set fileformat=unix |\n    \\ set encoding=utf-8 |\n    \\ let python_highlight_all=1\n\nau BufNewFile,BufRead *.js,*.html,*.css\n    \\ set tabstop=2 |\n    \\ set softtabstop=2 |\n    \\ set shiftwidth=2\n\n\"标识不必要的空白字符\nhighlight ExtraWhitespace ctermbg=red guibg=red\nautocmd BufWinEnter * match ExtraWhitespace /\\s\\+$\\| \\+\\ze\\t\\+\\|\\t\\+\\zs \\+/\n```\n\n## vim插件\n### ctags\nctags网址：http://ctags.sourceforge.net/\n1、安装:\n`sudo apt-get install ctags`\n2、生成索引文件:\n去需要查找的目录执行:`ctags -R .`\n3、配置vim`sudo vim /etc/vim/vimrc`\n`set tags+=建立索引文件的目录/tags`\n也可以临时添加索引：\n`settags=建立索引文件的目录/tags`\n4、使用\n```\nctrl + ]        #跟进\nCtrl＋W + ］    #新窗口显示当前光标下单词的标签，光标跳到标签处\nctrl + o        #返回\nctrl + t        #返回\n\nvi -t tag_name  #打开定义tag_name的文件，并把光标定位到这一行\nts + tag_name   #搜索tag_name\ntp              #上一个\ntn              #下一个\n```\n\n### cscope\ncscope网址：http://cscope.sourceforge.net/\nCscope tutorial：http://cscope.sourceforge.net/cscope_vim_tutorial.html\n\n1、安装cscope\n`./configure --with-flex`\n`make && sudo make install`\n2、配置vim `sudo vi /etc/vim/vimrc` 添加以下内容\n```\nif has(\"cscope\")\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\" Standard cscope/vim boilerplate\n\n    \" use both cscope and ctag for 'ctrl-]', ':ta', and 'vim -t'\n    set cscopetag\n\n    \" check cscope for definition of a symbol before checking ctags: set to 1\n    \" if you want the reverse search order.\n    set csto=0\n\n    \" add any cscope database in current directory\n    if filereadable(\"cscope.out\")\n        cs add cscope.out\n    \" else add the database pointed to by environment variable\n    elseif $CSCOPE_DB != \"\"\n        cs add $CSCOPE_DB\n    endif\n\n    \" show msg when any other cscope db added\n    set cscopeverbose\n\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\" My cscope/vim key mappings\n    \"\n    \" The following maps all invoke one of the following cscope search types:\n    \"\n    \"   's'   symbol: find all references to the token under cursor\n    \"   'g'   global: find global definition(s) of the token under cursor\n    \"   'c'   calls:  find all calls to the function name under cursor\n    \"   't'   text:   find all instances of the text under cursor\n    \"   'e'   egrep:  egrep search for the word under cursor\n    \"   'f'   file:   open the filename under cursor\n    \"   'i'   includes: find files that include the filename under cursor\n    \"   'd'   called: find functions that function under cursor calls\n    \"\n    \" Below are three sets of the maps: one set that just jumps to your\n    \" search result, one that splits the existing vim window horizontally and\n    \" diplays your search result in the new window, and one that does the same\n    \" thing, but does a vertical split instead (vim 6 only).\n    \"\n    \" I've used CTRL-\\ and CTRL-@ as the starting keys for these maps, as it's\n    \" unlikely that you need their default mappings (CTRL-\\'s default use is\n    \" as part of CTRL-\\ CTRL-N typemap, which basically just does the same\n    \" thing as hitting 'escape': CTRL-@ doesn't seem to have any default use).\n    \" If you don't like using 'CTRL-@' or CTRL-\\, , you can change some or all\n    \" of these maps to use other keys.  One likely candidate is 'CTRL-_'\n    \" (which also maps to CTRL-/, which is easier to type).  By default it is\n    \" used to switch between Hebrew and English keyboard mode.\n    \"\n    \" All of the maps involving the <cfile> macro use '^<cfile>$': this is so\n    \" that searches over '#include <time.h>\" return only references to\n    \" 'time.h', and not 'sys/time.h', etc. (by default cscope will return all\n    \" files that contain 'time.h' as part of their name).\n\n\n    \" To do the first type of search, hit 'CTRL-\\', followed by one of the\n    \" cscope search types above (s,g,c,t,e,f,i,d).  The result of your cscope\n    \" search will be displayed in the current window.  You can use CTRL-T to\n    \" go back to where you were before the search.\n    \"\n\n    nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-\\>i :cs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\n\n\n    \" Using 'CTRL-spacebar' (intepreted as CTRL-@ by vim) then a search type\n    \" makes the vim window split horizontally, with search result displayed in\n    \" the new window.\n    \"\n    \" (Note: earlier versions of vim may not have the :scs command, but it\n    \" can be simulated roughly via:\n    \"    nmap <C-@>s <C-W><C-S> :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n\n    nmap <C-@>s :scs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>g :scs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>c :scs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>t :scs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>e :scs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>f :scs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-@>i :scs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-@>d :scs find d <C-R>=expand(\"<cword>\")<CR><CR>\n\n\n    \" Hitting CTRL-space *twice* before the search type does a vertical\n    \" split instead of a horizontal one (vim 6 and up only)\n    \"\n    \" (Note: you may wish to put a 'set splitright' in your .vimrc\n    \" if you prefer the new window on the right instead of the left\n\n    nmap <C-@><C-@>s :vert scs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>g :vert scs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>c :vert scs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>t :vert scs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>e :vert scs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>f :vert scs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-@><C-@>i :vert scs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-@><C-@>d :vert scs find d <C-R>=expand(\"<cword>\")<CR><CR>\n\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\" key map timeouts\n    \"\n    \" By default Vim will only wait 1 second for each keystroke in a mapping.\n    \" You may find that too short with the above typemaps.  If so, you should\n    \" either turn off mapping timeouts via 'notimeout'.\n    \"\n    \"set notimeout\n    \"\n    \" Or, you can keep timeouts, by uncommenting the timeoutlen line below,\n    \" with your own personal favorite value (in milliseconds):\n    \"\n    \"set timeoutlen=4000\n    \"\n    \" Either way, since mapping timeout settings by default also set the\n    \" timeouts for multicharacter 'keys codes' (like <F1>), you should also\n    \" set ttimeout and ttimeoutlen: otherwise, you will experience strange\n    \" delays as vim waits for a keystroke after you hit ESC (it will be\n    \" waiting to see if the ESC is actually part of a key code like <F1>).\n    \"\n    \"set ttimeout\n    \"\n    \" personally, I find a tenth of a second to work well for key code\n    \" timeouts. If you experience problems and have a slow terminal or network\n    \" connection, set it higher.  If you don't set ttimeoutlen, the value for\n    \" timeoutlent (default: 1000 = 1 second, which is sluggish) is used.\n    \"\n    \"set ttimeoutlen=100\n\nendif\n```\n3、使用\n建立一个cscope数据库:\n`find . -name \"*.h\" -o -name \"*.c\" -o -name \"*.cpp\" > cscope.files`\n`cscope -Rbkq -i cscope.files`\n`ctags -R`\n添加一个cscope链接库:\n`:cs add cscope.out`\n查找:\n`:cs find s name` 查找\n`:cw` 查看查找结果的列表\n```\ncscope -Rbkq\nR 表示把所有子目录里的文件也建立索引\nb 表示cscope不启动自带的用户界面，而仅仅建立符号数据库\nq 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度\nk 在生成索引文件时，不搜索/usr/include目录\n\n：cs find s ---- 查找C语言符号，即查找函数名、宏、枚举值等出现的地方\n：cs find g ---- 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能\n：cs find d ---- 查找本函数调用的函数\n：cs find c ---- 查找调用本函数的函数\n：cs find t ---- 查找指定的字符串\n：cs find e ---- 查找egrep模式，相当于egrep功能，但查找速度快多了\n：cs find f ---- 查找并打开文件，类似vim的find功能\n：cs find i ---- 查找包含本文件的文\nCtrl+\\ 可以代替 ：cs find\n\n:cs show            #显示cscope的链接\n:cs reset           #重新初始化所有的cscope链接\n:cs kill            #杀掉一个cscope链接\n:cs help            #显示一个简短的摘要\n```\n\n### vundle\nVundle地址：https://github.com/VundleVim/Vundle.vim\n安装Vundle\n`git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim`\n配置Vundle插件`vi ~/.vimrc`\n```\nset nocompatible              \" be iMproved, required\nfiletype off                  \" required\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\" The following are examples of different formats supported.\n\" Keep Plugin commands between vundle#begin/end.\n\n\n\n\" plugin on GitHub repo\nPlugin 'tpope/vim-fugitive'\n\n\" plugin from http://vim-scripts.org/vim/scripts.html\nPlugin 'L9'\n\n\" Git plugin not hosted on GitHub\nPlugin 'git://git.wincent.com/command-t.git'\n\n\" The sparkup vim script is in a subdirectory of this repo called vim.\n\" Pass the path to set the runtimepath properly.\nPlugin 'rstacruz/sparkup', {'rtp': 'vim/'}\n\n\" All of your Plugins must be added before the following line\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\" To ignore plugin indent changes, instead use:\n\"filetype plugin on\n\"\n\" Brief help\n\" :PluginList       - lists configured plugins\n\" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate\n\" :PluginSearch foo - searches for foo; append `!` to refresh local cache\n\" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal\n\"\n\" see :h vundle for more details or wiki for FAQ\n\" Put your non-Plugin stuff after this line\n```\n在vi中执行命令\n```\n:PluginList       - lists configured plugins\n:PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate\n:PluginSearch foo - searches for foo; append `!` to refresh local cache\n:PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal\n:h vundle         - more details\n```\n\npython相关插件\n```\n\"python相关插件\n\"自动缩进\nPlugin 'vim-scripts/indentpython.vim'\n\"自动补全\nPlugin 'Valloric/YouCompleteMe'\n\"每次保存文件时Vim都会检查代码的语法\nPlugin 'scrooloose/syntastic'\n\"PEP8代码风格检查\nPlugin 'nvie/vim-flake8'\n```\n","source":"_posts/8_vim环境配置.md","raw":"---\ntitle: vim环境配置\ndate: 2016-11-18 13:42:43\ntags: vim\ncategories: [linux,vim]\n\n---\n\n## 安装vim\n### 通过包管理安装\n安装add-apt-repository\n`sudo apt-get install software-properties-common python-software-properties`\n\nubuntu16.04添加ppa源来安装新版vim\n`sudo add-apt-repository ppa:jonathonf/vim`\n`sudo apt-get update`\n`sudo apt-get install vim`\n<!-- more -->\n卸载\n`sudo apt remove vim`\n`sudo add-apt-repository --remove ppa:jonathonf/vim`\n\n### 源码编译安装\n获取源码\n`git clone https://github.com/vim/vim.git`\n\n安装相应的依赖\n```\nsudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \\\nlibgtk2.0-dev libatk1.0-dev libbonoboui2-dev \\\nlibcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \\\npython3-dev ruby-dev lua5.1 lua5.1-dev libperl-dev\n```\n\n删除原有vim\n```\ndpkg -l | grep vim\nsudo dpkg -P vim vim-common vim-run\n```\n\n编译源码并安装\n```\n./configure --with-features=huge --enable-multibyte \\\n--enable-pythoninterp --enable-python3interp --enable-perlinterp --enable-rubyinterp --enable-luainterp \\\n--enable-gui=gtk2 --enable-cscope \\\n--with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \\\n--with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \\\n--prefix=/usr \\\n--enable-fail-if-missing\n\nmake && sudo make install\n```\n\n设置软连接\n`sudo ln -s /usr/bin/vim /usr/bin/vi`\n`sudo mkdir /etc/vim && sudo touch /etc/vim/vimrc`\n`sudo ln -s /etc/vim/vimrc /usr/share/vim/vimrc`\n\n## vim命令\n```\ns   #删除光标所在字符，并进入输入模式\nS   #删除光标所在行，并进入输入模式\nR   #替换多个字符\n\nncb #剪切光标前n个单词\nnyw #复制光标后n个单词\nndw #删除光标后n个单词\n\nc$  #剪切从光标所在位置到行尾的字符串\ny^  #复制从光标所在位置到行首的字符串\nd$  #删除或者剪切从光标所在位置到行尾的字符串\n\ngg=G            #自动排版\n\nH               #移动到屏幕首行\nM               #移动到屏幕中间\nL               #移动到屏幕末行\ngg              #移动到文件首行\nG               #移动到文件末行\n\n0               #移动到所在行最前的字符\n^               #移动到所在行第一个非空字符\n$               #移动到所在行最后一个字符\n\nb               #移动到上一个单词的第一个字符\nw               #移动到下一个单词的第一个字符\ne               #移动到下一个单词的第一个字符\n\nCtrl + d        #光标向下移动半页\nCtrl + f        #光标向下移动一页\nCtrl + n        #补全单词\nCtrl + p        #补全单词\nCtrl + x + l    #补全一行\nCtrl + x + f    #插入当前目录下文件名\n\n/string         #向下查找\n?string         #向上查找\n\n:range y        #块复制\n:range d        #块删除\n:range s/old_string/new_string/gc      #替换\n    #% 表示所有行\n    #. 表示当前行\n    #$ 表示末行\n    #g 表示行中进行多个匹配\n    #c 替换前询问\n\n:vs file_name       #打开一个文件并左右分割窗口\n:sp file_name       #打开一个文件并上下分割窗口\nctrl+w+w            #文件之间切换\n\nset paste           #设置为粘贴模式\nset nopaste         #关闭粘贴模式\nset mouse=v         #设置鼠标模式为v\n\nqa                  #将后续的命令记入寄存器a,q结束录制\n@a                  #执行寄存器a中录制的内容\n```\n\n## vim配置\n```\ntabstop             # ts 定义tab所等同的空格长度，一般来说最好设置成8\nshiftwidth          # sw 用于程序中自动缩进所使用的空白长度指示\nsofttabstop         # sts 逢8空格进1制表符”,前提是你tabstop=8\nexpandtab           # et 以空格替换\n\ncindent             # 用C语言的缩进格式来处理程序的缩进结构\nsmartindent         # si 和前一行有相同的缩进量，同时能识别出花括号，函数等\nautoindent          # ai 新增加的行和前一行使用相同的缩进形式\n\nautocmd             # au 自动执行命令\n\n空格和TAB的替换：\n#TAB替换为空格：\n:set ts=4\n:set et\n:%retab!\n\n#空格替换为TAB：\n:set ts=4\n:set noet\n:%retab!\n#加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB\n\n#删除每行后面多余的空格，可以执行如下命令：\n:%s/\\s\\+$//\n#删除每行前面的空格，执行如下命令：\n:%s/^\\+\\s//\n```\n`/etc/vim/vimrc`配置\n```\nsyntax on\n\nset nu\nset mouse=a                     \"设置鼠标可用\nset pastetoggle=<F12>           \"按f12打开或关闭粘贴模式\n\n\" \\ should be followed by /, ? or &\nset nocompatible\n\nset foldenable              \" 开始折叠\nset fdm=syntax              \" 设置语法折叠\nset foldcolumn=0            \" 设置折叠区域的宽度\nsetlocal foldlevel=1        \" 设置折叠层数为\nset foldlevelstart=99       \" 打开文件是默认不折叠代码\nset foldclose=all           \" 设置为自动关闭折叠\nnnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>\n\"用空格键来开关折叠\n\"zM 折叠所有代码\n\"zR 取消所有代码折叠\n\"zC 递归折叠代码\n\"zO 递归取消折叠\n\"[z ]z zj zk 移动\n\nau BufNewFile,BufRead *.c,*.cpp,*.h\n    \\ set cindent\n\nau BufNewFile,BufRead *.py\n    \\ set tabstop=4 |\n    \\ set softtabstop=4 |\n    \\ set shiftwidth=4 |\n    \\ set textwidth=79 |\n    \\ set expandtab |\n    \\ set autoindent |\n    \\ set fileformat=unix |\n    \\ set encoding=utf-8 |\n    \\ let python_highlight_all=1\n\nau BufNewFile,BufRead *.js,*.html,*.css\n    \\ set tabstop=2 |\n    \\ set softtabstop=2 |\n    \\ set shiftwidth=2\n\n\"标识不必要的空白字符\nhighlight ExtraWhitespace ctermbg=red guibg=red\nautocmd BufWinEnter * match ExtraWhitespace /\\s\\+$\\| \\+\\ze\\t\\+\\|\\t\\+\\zs \\+/\n```\n\n## vim插件\n### ctags\nctags网址：http://ctags.sourceforge.net/\n1、安装:\n`sudo apt-get install ctags`\n2、生成索引文件:\n去需要查找的目录执行:`ctags -R .`\n3、配置vim`sudo vim /etc/vim/vimrc`\n`set tags+=建立索引文件的目录/tags`\n也可以临时添加索引：\n`settags=建立索引文件的目录/tags`\n4、使用\n```\nctrl + ]        #跟进\nCtrl＋W + ］    #新窗口显示当前光标下单词的标签，光标跳到标签处\nctrl + o        #返回\nctrl + t        #返回\n\nvi -t tag_name  #打开定义tag_name的文件，并把光标定位到这一行\nts + tag_name   #搜索tag_name\ntp              #上一个\ntn              #下一个\n```\n\n### cscope\ncscope网址：http://cscope.sourceforge.net/\nCscope tutorial：http://cscope.sourceforge.net/cscope_vim_tutorial.html\n\n1、安装cscope\n`./configure --with-flex`\n`make && sudo make install`\n2、配置vim `sudo vi /etc/vim/vimrc` 添加以下内容\n```\nif has(\"cscope\")\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\" Standard cscope/vim boilerplate\n\n    \" use both cscope and ctag for 'ctrl-]', ':ta', and 'vim -t'\n    set cscopetag\n\n    \" check cscope for definition of a symbol before checking ctags: set to 1\n    \" if you want the reverse search order.\n    set csto=0\n\n    \" add any cscope database in current directory\n    if filereadable(\"cscope.out\")\n        cs add cscope.out\n    \" else add the database pointed to by environment variable\n    elseif $CSCOPE_DB != \"\"\n        cs add $CSCOPE_DB\n    endif\n\n    \" show msg when any other cscope db added\n    set cscopeverbose\n\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\" My cscope/vim key mappings\n    \"\n    \" The following maps all invoke one of the following cscope search types:\n    \"\n    \"   's'   symbol: find all references to the token under cursor\n    \"   'g'   global: find global definition(s) of the token under cursor\n    \"   'c'   calls:  find all calls to the function name under cursor\n    \"   't'   text:   find all instances of the text under cursor\n    \"   'e'   egrep:  egrep search for the word under cursor\n    \"   'f'   file:   open the filename under cursor\n    \"   'i'   includes: find files that include the filename under cursor\n    \"   'd'   called: find functions that function under cursor calls\n    \"\n    \" Below are three sets of the maps: one set that just jumps to your\n    \" search result, one that splits the existing vim window horizontally and\n    \" diplays your search result in the new window, and one that does the same\n    \" thing, but does a vertical split instead (vim 6 only).\n    \"\n    \" I've used CTRL-\\ and CTRL-@ as the starting keys for these maps, as it's\n    \" unlikely that you need their default mappings (CTRL-\\'s default use is\n    \" as part of CTRL-\\ CTRL-N typemap, which basically just does the same\n    \" thing as hitting 'escape': CTRL-@ doesn't seem to have any default use).\n    \" If you don't like using 'CTRL-@' or CTRL-\\, , you can change some or all\n    \" of these maps to use other keys.  One likely candidate is 'CTRL-_'\n    \" (which also maps to CTRL-/, which is easier to type).  By default it is\n    \" used to switch between Hebrew and English keyboard mode.\n    \"\n    \" All of the maps involving the <cfile> macro use '^<cfile>$': this is so\n    \" that searches over '#include <time.h>\" return only references to\n    \" 'time.h', and not 'sys/time.h', etc. (by default cscope will return all\n    \" files that contain 'time.h' as part of their name).\n\n\n    \" To do the first type of search, hit 'CTRL-\\', followed by one of the\n    \" cscope search types above (s,g,c,t,e,f,i,d).  The result of your cscope\n    \" search will be displayed in the current window.  You can use CTRL-T to\n    \" go back to where you were before the search.\n    \"\n\n    nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-\\>i :cs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\n\n\n    \" Using 'CTRL-spacebar' (intepreted as CTRL-@ by vim) then a search type\n    \" makes the vim window split horizontally, with search result displayed in\n    \" the new window.\n    \"\n    \" (Note: earlier versions of vim may not have the :scs command, but it\n    \" can be simulated roughly via:\n    \"    nmap <C-@>s <C-W><C-S> :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n\n    nmap <C-@>s :scs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>g :scs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>c :scs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>t :scs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>e :scs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@>f :scs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-@>i :scs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-@>d :scs find d <C-R>=expand(\"<cword>\")<CR><CR>\n\n\n    \" Hitting CTRL-space *twice* before the search type does a vertical\n    \" split instead of a horizontal one (vim 6 and up only)\n    \"\n    \" (Note: you may wish to put a 'set splitright' in your .vimrc\n    \" if you prefer the new window on the right instead of the left\n\n    nmap <C-@><C-@>s :vert scs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>g :vert scs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>c :vert scs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>t :vert scs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>e :vert scs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-@><C-@>f :vert scs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-@><C-@>i :vert scs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-@><C-@>d :vert scs find d <C-R>=expand(\"<cword>\")<CR><CR>\n\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\" key map timeouts\n    \"\n    \" By default Vim will only wait 1 second for each keystroke in a mapping.\n    \" You may find that too short with the above typemaps.  If so, you should\n    \" either turn off mapping timeouts via 'notimeout'.\n    \"\n    \"set notimeout\n    \"\n    \" Or, you can keep timeouts, by uncommenting the timeoutlen line below,\n    \" with your own personal favorite value (in milliseconds):\n    \"\n    \"set timeoutlen=4000\n    \"\n    \" Either way, since mapping timeout settings by default also set the\n    \" timeouts for multicharacter 'keys codes' (like <F1>), you should also\n    \" set ttimeout and ttimeoutlen: otherwise, you will experience strange\n    \" delays as vim waits for a keystroke after you hit ESC (it will be\n    \" waiting to see if the ESC is actually part of a key code like <F1>).\n    \"\n    \"set ttimeout\n    \"\n    \" personally, I find a tenth of a second to work well for key code\n    \" timeouts. If you experience problems and have a slow terminal or network\n    \" connection, set it higher.  If you don't set ttimeoutlen, the value for\n    \" timeoutlent (default: 1000 = 1 second, which is sluggish) is used.\n    \"\n    \"set ttimeoutlen=100\n\nendif\n```\n3、使用\n建立一个cscope数据库:\n`find . -name \"*.h\" -o -name \"*.c\" -o -name \"*.cpp\" > cscope.files`\n`cscope -Rbkq -i cscope.files`\n`ctags -R`\n添加一个cscope链接库:\n`:cs add cscope.out`\n查找:\n`:cs find s name` 查找\n`:cw` 查看查找结果的列表\n```\ncscope -Rbkq\nR 表示把所有子目录里的文件也建立索引\nb 表示cscope不启动自带的用户界面，而仅仅建立符号数据库\nq 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度\nk 在生成索引文件时，不搜索/usr/include目录\n\n：cs find s ---- 查找C语言符号，即查找函数名、宏、枚举值等出现的地方\n：cs find g ---- 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能\n：cs find d ---- 查找本函数调用的函数\n：cs find c ---- 查找调用本函数的函数\n：cs find t ---- 查找指定的字符串\n：cs find e ---- 查找egrep模式，相当于egrep功能，但查找速度快多了\n：cs find f ---- 查找并打开文件，类似vim的find功能\n：cs find i ---- 查找包含本文件的文\nCtrl+\\ 可以代替 ：cs find\n\n:cs show            #显示cscope的链接\n:cs reset           #重新初始化所有的cscope链接\n:cs kill            #杀掉一个cscope链接\n:cs help            #显示一个简短的摘要\n```\n\n### vundle\nVundle地址：https://github.com/VundleVim/Vundle.vim\n安装Vundle\n`git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim`\n配置Vundle插件`vi ~/.vimrc`\n```\nset nocompatible              \" be iMproved, required\nfiletype off                  \" required\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\" The following are examples of different formats supported.\n\" Keep Plugin commands between vundle#begin/end.\n\n\n\n\" plugin on GitHub repo\nPlugin 'tpope/vim-fugitive'\n\n\" plugin from http://vim-scripts.org/vim/scripts.html\nPlugin 'L9'\n\n\" Git plugin not hosted on GitHub\nPlugin 'git://git.wincent.com/command-t.git'\n\n\" The sparkup vim script is in a subdirectory of this repo called vim.\n\" Pass the path to set the runtimepath properly.\nPlugin 'rstacruz/sparkup', {'rtp': 'vim/'}\n\n\" All of your Plugins must be added before the following line\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\" To ignore plugin indent changes, instead use:\n\"filetype plugin on\n\"\n\" Brief help\n\" :PluginList       - lists configured plugins\n\" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate\n\" :PluginSearch foo - searches for foo; append `!` to refresh local cache\n\" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal\n\"\n\" see :h vundle for more details or wiki for FAQ\n\" Put your non-Plugin stuff after this line\n```\n在vi中执行命令\n```\n:PluginList       - lists configured plugins\n:PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate\n:PluginSearch foo - searches for foo; append `!` to refresh local cache\n:PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal\n:h vundle         - more details\n```\n\npython相关插件\n```\n\"python相关插件\n\"自动缩进\nPlugin 'vim-scripts/indentpython.vim'\n\"自动补全\nPlugin 'Valloric/YouCompleteMe'\n\"每次保存文件时Vim都会检查代码的语法\nPlugin 'scrooloose/syntastic'\n\"PEP8代码风格检查\nPlugin 'nvie/vim-flake8'\n```\n","slug":"8_vim环境配置","published":1,"updated":"2016-11-18T15:30:47.256Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civo0mxo3000hulyq58pjp0qe","content":"<h2 id=\"安装vim\"><a href=\"#安装vim\" class=\"headerlink\" title=\"安装vim\"></a>安装vim</h2><h3 id=\"通过包管理安装\"><a href=\"#通过包管理安装\" class=\"headerlink\" title=\"通过包管理安装\"></a>通过包管理安装</h3><p>安装add-apt-repository<br><code>sudo apt-get install software-properties-common python-software-properties</code></p>\n<p>ubuntu16.04添加ppa源来安装新版vim<br><code>sudo add-apt-repository ppa:jonathonf/vim</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install vim</code><br><a id=\"more\"></a><br>卸载<br><code>sudo apt remove vim</code><br><code>sudo add-apt-repository --remove ppa:jonathonf/vim</code></p>\n<h3 id=\"源码编译安装\"><a href=\"#源码编译安装\" class=\"headerlink\" title=\"源码编译安装\"></a>源码编译安装</h3><p>获取源码<br><code>git clone https://github.com/vim/vim.git</code></p>\n<p>安装相应的依赖<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install libncurses5-<span class=\"built_in\">dev</span> libgnome2-<span class=\"built_in\">dev</span> libgnomeui-<span class=\"built_in\">dev</span> \\</div><div class=\"line\">libgtk2<span class=\"number\">.0</span>-<span class=\"built_in\">dev</span> libatk1<span class=\"number\">.0</span>-<span class=\"built_in\">dev</span> libbonoboui2-<span class=\"built_in\">dev</span> \\</div><div class=\"line\">libcairo2-<span class=\"built_in\">dev</span> libx11-<span class=\"built_in\">dev</span> libxpm-<span class=\"built_in\">dev</span> libxt-<span class=\"built_in\">dev</span> python-<span class=\"built_in\">dev</span> \\</div><div class=\"line\">python3-<span class=\"built_in\">dev</span> ruby-<span class=\"built_in\">dev</span> lua5<span class=\"number\">.1</span> lua5<span class=\"number\">.1</span>-<span class=\"built_in\">dev</span> libperl-<span class=\"built_in\">dev</span></div></pre></td></tr></table></figure></p>\n<p>删除原有vim<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg -<span class=\"keyword\">l</span> | <span class=\"keyword\">grep</span> <span class=\"keyword\">vim</span></div><div class=\"line\">sudo dpkg -<span class=\"keyword\">P</span> <span class=\"keyword\">vim</span> <span class=\"keyword\">vim</span>-common <span class=\"keyword\">vim</span>-run</div></pre></td></tr></table></figure></p>\n<p>编译源码并安装<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-features=huge --enable-multibyte \\</div><div class=\"line\">-<span class=\"ruby\">-enable-pythoninterp --enable-python3interp --enable-perlinterp --enable-rubyinterp --enable-luainterp \\</span></div><div class=\"line\">-<span class=\"ruby\">-enable-gui=gtk2 --enable-cscope \\</span></div><div class=\"line\">-<span class=\"ruby\">-with-python-config-dir=<span class=\"regexp\">/usr/lib</span><span class=\"regexp\">/python2.7/config</span>-x86_64-linux-gnu \\</span></div><div class=\"line\">-<span class=\"ruby\">-with-python3-config-dir=<span class=\"regexp\">/usr/lib</span><span class=\"regexp\">/python3.5/config</span>-<span class=\"number\">3.5</span>m-x86_64-linux-gnu \\</span></div><div class=\"line\">-<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr \\</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">-enable-fail-if-missing</span></span></div><div class=\"line\"></div><div class=\"line\">make &amp;&amp; sudo make install</div></pre></td></tr></table></figure></p>\n<p>设置软连接<br><code>sudo ln -s /usr/bin/vim /usr/bin/vi</code><br><code>sudo mkdir /etc/vim &amp;&amp; sudo touch /etc/vim/vimrc</code><br><code>sudo ln -s /etc/vim/vimrc /usr/share/vim/vimrc</code></p>\n<h2 id=\"vim命令\"><a href=\"#vim命令\" class=\"headerlink\" title=\"vim命令\"></a>vim命令</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\">s   <span class=\"comment\">#删除光标所在字符，并进入输入模式</span></div><div class=\"line\">S   <span class=\"comment\">#删除光标所在行，并进入输入模式</span></div><div class=\"line\">R   <span class=\"comment\">#替换多个字符</span></div><div class=\"line\"></div><div class=\"line\">ncb <span class=\"comment\">#剪切光标前n个单词</span></div><div class=\"line\">nyw <span class=\"comment\">#复制光标后n个单词</span></div><div class=\"line\">ndw <span class=\"comment\">#删除光标后n个单词</span></div><div class=\"line\"></div><div class=\"line\">c<span class=\"variable\">$ </span> <span class=\"comment\">#剪切从光标所在位置到行尾的字符串</span></div><div class=\"line\">y^  <span class=\"comment\">#复制从光标所在位置到行首的字符串</span></div><div class=\"line\">d<span class=\"variable\">$ </span> <span class=\"comment\">#删除或者剪切从光标所在位置到行尾的字符串</span></div><div class=\"line\"></div><div class=\"line\">gg=G            <span class=\"comment\">#自动排版</span></div><div class=\"line\"></div><div class=\"line\">H               <span class=\"comment\">#移动到屏幕首行</span></div><div class=\"line\">M               <span class=\"comment\">#移动到屏幕中间</span></div><div class=\"line\">L               <span class=\"comment\">#移动到屏幕末行</span></div><div class=\"line\">gg              <span class=\"comment\">#移动到文件首行</span></div><div class=\"line\">G               <span class=\"comment\">#移动到文件末行</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">0</span>               <span class=\"comment\">#移动到所在行最前的字符</span></div><div class=\"line\">^               <span class=\"comment\">#移动到所在行第一个非空字符</span></div><div class=\"line\"><span class=\"variable\">$ </span>              <span class=\"comment\">#移动到所在行最后一个字符</span></div><div class=\"line\"></div><div class=\"line\">b               <span class=\"comment\">#移动到上一个单词的第一个字符</span></div><div class=\"line\">w               <span class=\"comment\">#移动到下一个单词的第一个字符</span></div><div class=\"line\">e               <span class=\"comment\">#移动到下一个单词的第一个字符</span></div><div class=\"line\"></div><div class=\"line\">Ctrl + d        <span class=\"comment\">#光标向下移动半页</span></div><div class=\"line\">Ctrl + f        <span class=\"comment\">#光标向下移动一页</span></div><div class=\"line\">Ctrl + n        <span class=\"comment\">#补全单词</span></div><div class=\"line\">Ctrl + p        <span class=\"comment\">#补全单词</span></div><div class=\"line\">Ctrl + x + l    <span class=\"comment\">#补全一行</span></div><div class=\"line\">Ctrl + x + f    <span class=\"comment\">#插入当前目录下文件名</span></div><div class=\"line\"></div><div class=\"line\">/string         <span class=\"comment\">#向下查找</span></div><div class=\"line\">?string         <span class=\"comment\">#向上查找</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">:range</span> y        <span class=\"comment\">#块复制</span></div><div class=\"line\"><span class=\"symbol\">:range</span> d        <span class=\"comment\">#块删除</span></div><div class=\"line\"><span class=\"symbol\">:range</span> s/old_string/new_string/gc      <span class=\"comment\">#替换</span></div><div class=\"line\">    <span class=\"comment\">#% 表示所有行</span></div><div class=\"line\">    <span class=\"comment\">#. 表示当前行</span></div><div class=\"line\">    <span class=\"comment\">#$ 表示末行</span></div><div class=\"line\">    <span class=\"comment\">#g 表示行中进行多个匹配</span></div><div class=\"line\">    <span class=\"comment\">#c 替换前询问</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">:vs</span> file_name       <span class=\"comment\">#打开一个文件并左右分割窗口</span></div><div class=\"line\"><span class=\"symbol\">:sp</span> file_name       <span class=\"comment\">#打开一个文件并上下分割窗口</span></div><div class=\"line\">ctrl+w+w            <span class=\"comment\">#文件之间切换</span></div><div class=\"line\"></div><div class=\"line\">set paste           <span class=\"comment\">#设置为粘贴模式</span></div><div class=\"line\">set nopaste         <span class=\"comment\">#关闭粘贴模式</span></div><div class=\"line\">set mouse=v         <span class=\"comment\">#设置鼠标模式为v</span></div><div class=\"line\"></div><div class=\"line\">qa                  <span class=\"comment\">#将后续的命令记入寄存器a,q结束录制</span></div><div class=\"line\"><span class=\"variable\">@a</span>                  <span class=\"comment\">#执行寄存器a中录制的内容</span></div></pre></td></tr></table></figure>\n<h2 id=\"vim配置\"><a href=\"#vim配置\" class=\"headerlink\" title=\"vim配置\"></a>vim配置</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">tabstop             <span class=\"comment\"># ts 定义tab所等同的空格长度，一般来说最好设置成8</span></div><div class=\"line\">shiftwidth          <span class=\"comment\"># sw 用于程序中自动缩进所使用的空白长度指示</span></div><div class=\"line\">softtabstop         <span class=\"comment\"># sts 逢8空格进1制表符”,前提是你tabstop=8</span></div><div class=\"line\">expandtab           <span class=\"comment\"># et 以空格替换</span></div><div class=\"line\"></div><div class=\"line\">cindent             <span class=\"comment\"># 用C语言的缩进格式来处理程序的缩进结构</span></div><div class=\"line\">smartindent         <span class=\"comment\"># si 和前一行有相同的缩进量，同时能识别出花括号，函数等</span></div><div class=\"line\">autoindent          <span class=\"comment\"># ai 新增加的行和前一行使用相同的缩进形式</span></div><div class=\"line\"></div><div class=\"line\">autocmd             <span class=\"comment\"># au 自动执行命令</span></div><div class=\"line\"></div><div class=\"line\">空格和TAB的替换：</div><div class=\"line\"><span class=\"comment\">#TAB替换为空格：</span></div><div class=\"line\"><span class=\"symbol\">:set</span> ts=<span class=\"number\">4</span></div><div class=\"line\"><span class=\"symbol\">:set</span> et</div><div class=\"line\"><span class=\"symbol\">:%retab!</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#空格替换为TAB：</span></div><div class=\"line\"><span class=\"symbol\">:set</span> ts=<span class=\"number\">4</span></div><div class=\"line\"><span class=\"symbol\">:set</span> noet</div><div class=\"line\"><span class=\"symbol\">:%retab!</span></div><div class=\"line\"><span class=\"comment\">#加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#删除每行后面多余的空格，可以执行如下命令：</span></div><div class=\"line\"><span class=\"symbol\">:%s/</span>\\s\\+<span class=\"variable\">$/</span>/</div><div class=\"line\"><span class=\"comment\">#删除每行前面的空格，执行如下命令：</span></div><div class=\"line\"><span class=\"symbol\">:%s/^</span>\\+\\s/<span class=\"regexp\">/</span></div></pre></td></tr></table></figure>\n<p><code>/etc/vim/vimrc</code>配置<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">syntax</span> <span class=\"keyword\">on</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">nu</span></div><div class=\"line\"><span class=\"keyword\">set</span> mouse=<span class=\"keyword\">a</span>                     <span class=\"comment\">\"设置鼠标可用</span></div><div class=\"line\"><span class=\"keyword\">set</span> pastetoggle=<span class=\"symbol\">&lt;F12&gt;</span>           <span class=\"comment\">\"按f12打开或关闭粘贴模式</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" \\ should be followed by /, ? or &amp;</span></div><div class=\"line\"><span class=\"keyword\">set</span> nocompatible</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> foldenable              <span class=\"comment\">\" 开始折叠</span></div><div class=\"line\"><span class=\"keyword\">set</span> fdm=<span class=\"keyword\">syntax</span>              <span class=\"comment\">\" 设置语法折叠</span></div><div class=\"line\"><span class=\"keyword\">set</span> foldcolumn=<span class=\"number\">0</span>            <span class=\"comment\">\" 设置折叠区域的宽度</span></div><div class=\"line\"><span class=\"keyword\">setlocal</span> <span class=\"built_in\">foldlevel</span>=<span class=\"number\">1</span>        <span class=\"comment\">\" 设置折叠层数为</span></div><div class=\"line\"><span class=\"keyword\">set</span> foldlevelstart=<span class=\"number\">99</span>       <span class=\"comment\">\" 打开文件是默认不折叠代码</span></div><div class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">foldclose</span>=<span class=\"keyword\">all</span>           <span class=\"comment\">\" 设置为自动关闭折叠</span></div><div class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;space&gt;</span> @=((<span class=\"built_in\">foldclosed</span>(<span class=\"built_in\">line</span>(<span class=\"string\">'.'</span>)) &lt; <span class=\"number\">0</span>) ? <span class=\"string\">'zc'</span> : <span class=\"string\">'zo'</span>)<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"><span class=\"comment\">\"用空格键来开关折叠</span></div><div class=\"line\"><span class=\"comment\">\"zM 折叠所有代码</span></div><div class=\"line\"><span class=\"comment\">\"zR 取消所有代码折叠</span></div><div class=\"line\"><span class=\"comment\">\"zC 递归折叠代码</span></div><div class=\"line\"><span class=\"comment\">\"zO 递归取消折叠</span></div><div class=\"line\"><span class=\"comment\">\"[z ]z zj zk 移动</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">au</span> BufNewFile,BufRead *.<span class=\"keyword\">c</span>,*.cpp,*.h</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> <span class=\"built_in\">cindent</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">au</span> BufNewFile,BufRead *.<span class=\"keyword\">py</span></div><div class=\"line\">    \\ <span class=\"keyword\">set</span> tabstop=<span class=\"number\">4</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> softtabstop=<span class=\"number\">4</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> <span class=\"built_in\">shiftwidth</span>=<span class=\"number\">4</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> textwidth=<span class=\"number\">79</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> expandtab |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> autoindent |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> fileformat=unix |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> encoding=utf-<span class=\"number\">8</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">let</span> python_highlight_all=<span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">au</span> BufNewFile,BufRead *.js,*.html,*.css</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> tabstop=<span class=\"number\">2</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> softtabstop=<span class=\"number\">2</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> <span class=\"built_in\">shiftwidth</span>=<span class=\"number\">2</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\"标识不必要的空白字符</span></div><div class=\"line\"><span class=\"keyword\">highlight</span> ExtraWhitespace ctermbg=<span class=\"keyword\">red</span> guibg=<span class=\"keyword\">red</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> BufWinEnter * <span class=\"keyword\">match</span> ExtraWhitespace /\\s\\+$\\| \\+\\ze\\t\\+\\|\\t\\+\\zs \\+/</div></pre></td></tr></table></figure></p>\n<h2 id=\"vim插件\"><a href=\"#vim插件\" class=\"headerlink\" title=\"vim插件\"></a>vim插件</h2><h3 id=\"ctags\"><a href=\"#ctags\" class=\"headerlink\" title=\"ctags\"></a>ctags</h3><p>ctags网址：<a href=\"http://ctags.sourceforge.net/\" target=\"_blank\" rel=\"external\">http://ctags.sourceforge.net/</a><br>1、安装:<br><code>sudo apt-get install ctags</code><br>2、生成索引文件:<br>去需要查找的目录执行:<code>ctags -R .</code><br>3、配置vim<code>sudo vim /etc/vim/vimrc</code><br><code>set tags+=建立索引文件的目录/tags</code><br>也可以临时添加索引：<br><code>settags=建立索引文件的目录/tags</code><br>4、使用<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">ctrl</span> + ]        <span class=\"comment\">#跟进</span></div><div class=\"line\">Ctrl＋W + ］    <span class=\"comment\">#新窗口显示当前光标下单词的标签，光标跳到标签处</span></div><div class=\"line\">ctrl + o        <span class=\"comment\">#返回</span></div><div class=\"line\">ctrl + t        <span class=\"comment\">#返回</span></div><div class=\"line\"></div><div class=\"line\">vi -t tag_name  <span class=\"comment\">#打开定义tag_name的文件，并把光标定位到这一行</span></div><div class=\"line\">ts + tag_name   <span class=\"comment\">#搜索tag_name</span></div><div class=\"line\">tp              <span class=\"comment\">#上一个</span></div><div class=\"line\">tn              <span class=\"comment\">#下一个</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"cscope\"><a href=\"#cscope\" class=\"headerlink\" title=\"cscope\"></a>cscope</h3><p>cscope网址：<a href=\"http://cscope.sourceforge.net/\" target=\"_blank\" rel=\"external\">http://cscope.sourceforge.net/</a><br>Cscope tutorial：<a href=\"http://cscope.sourceforge.net/cscope_vim_tutorial.html\" target=\"_blank\" rel=\"external\">http://cscope.sourceforge.net/cscope_vim_tutorial.html</a></p>\n<p>1、安装cscope<br><code>./configure --with-flex</code><br><code>make &amp;&amp; sudo make install</code><br>2、配置vim <code>sudo vi /etc/vim/vimrc</code> 添加以下内容<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">has</span>(<span class=\"string\">\"cscope\"</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"comment\">\" Standard cscope/vim boilerplate</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" use both cscope and ctag for 'ctrl-]', ':ta', and 'vim -t'</span></div><div class=\"line\">    <span class=\"keyword\">set</span> cscopetag</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" check cscope for definition of a symbol before checking ctags: set to 1</span></div><div class=\"line\">    <span class=\"comment\">\" if you want the reverse search order.</span></div><div class=\"line\">    <span class=\"keyword\">set</span> csto=<span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" add any cscope database in current directory</span></div><div class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">filereadable</span>(<span class=\"string\">\"cscope.out\"</span>)</div><div class=\"line\">        <span class=\"keyword\">cs</span> <span class=\"built_in\">add</span> <span class=\"keyword\">cscope</span>.out</div><div class=\"line\">    <span class=\"comment\">\" else add the database pointed to by environment variable</span></div><div class=\"line\">    <span class=\"keyword\">elseif</span> $CSCOPE_DB != <span class=\"string\">\"\"</span></div><div class=\"line\">        <span class=\"keyword\">cs</span> <span class=\"built_in\">add</span> $CSCOPE_DB</div><div class=\"line\">    <span class=\"keyword\">endif</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" show msg when any other cscope db added</span></div><div class=\"line\">    <span class=\"keyword\">set</span> cscopeverbose</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"comment\">\" My cscope/vim key mappings</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" The following maps all invoke one of the following cscope search types:</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"   's'   symbol: find all references to the token under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'g'   global: find global definition(s) of the token under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'c'   calls:  find all calls to the function name under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   't'   text:   find all instances of the text under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'e'   egrep:  egrep search for the word under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'f'   file:   open the filename under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'i'   includes: find files that include the filename under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'd'   called: find functions that function under cursor calls</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" Below are three sets of the maps: one set that just jumps to your</span></div><div class=\"line\">    <span class=\"comment\">\" search result, one that splits the existing vim window horizontally and</span></div><div class=\"line\">    <span class=\"comment\">\" diplays your search result in the new window, and one that does the same</span></div><div class=\"line\">    <span class=\"comment\">\" thing, but does a vertical split instead (vim 6 only).</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" I've used CTRL-\\ and CTRL-@ as the starting keys for these maps, as it's</span></div><div class=\"line\">    <span class=\"comment\">\" unlikely that you need their default mappings (CTRL-\\'s default use is</span></div><div class=\"line\">    <span class=\"comment\">\" as part of CTRL-\\ CTRL-N typemap, which basically just does the same</span></div><div class=\"line\">    <span class=\"comment\">\" thing as hitting 'escape': CTRL-@ doesn't seem to have any default use).</span></div><div class=\"line\">    <span class=\"comment\">\" If you don't like using 'CTRL-@' or CTRL-\\, , you can change some or all</span></div><div class=\"line\">    <span class=\"comment\">\" of these maps to use other keys.  One likely candidate is 'CTRL-_'</span></div><div class=\"line\">    <span class=\"comment\">\" (which also maps to CTRL-/, which is easier to type).  By default it is</span></div><div class=\"line\">    <span class=\"comment\">\" used to switch between Hebrew and English keyboard mode.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" All of the maps involving the &lt;cfile&gt; macro use '^&lt;cfile&gt;$': this is so</span></div><div class=\"line\">    <span class=\"string\">\" that searches over '#include &lt;time.h&gt;\"</span> <span class=\"keyword\">return</span> <span class=\"keyword\">only</span> references <span class=\"keyword\">to</span></div><div class=\"line\">    <span class=\"comment\">\" 'time.h', and not 'sys/time.h', etc. (by default cscope will return all</span></div><div class=\"line\">    <span class=\"comment\">\" files that contain 'time.h' as part of their name).</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" To do the first type of search, hit 'CTRL-\\', followed by one of the</span></div><div class=\"line\">    <span class=\"comment\">\" cscope search types above (s,g,c,t,e,f,i,d).  The result of your cscope</span></div><div class=\"line\">    <span class=\"comment\">\" search will be displayed in the current window.  You can use CTRL-T to</span></div><div class=\"line\">    <span class=\"comment\">\" go back to where you were before the search.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;s :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> s <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;g :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> g <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;<span class=\"keyword\">c</span> :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;t :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> t <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;<span class=\"keyword\">e</span> :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;<span class=\"keyword\">f</span> :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;i :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> i ^<span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span>$<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;d :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> d <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" Using 'CTRL-spacebar' (intepreted as CTRL-@ by vim) then a search type</span></div><div class=\"line\">    <span class=\"comment\">\" makes the vim window split horizontally, with search result displayed in</span></div><div class=\"line\">    <span class=\"comment\">\" the new window.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" (Note: earlier versions of vim may not have the :scs command, but it</span></div><div class=\"line\">    <span class=\"comment\">\" can be simulated roughly via:</span></div><div class=\"line\">    <span class=\"string\">\"    nmap &lt;C-@&gt;s &lt;C-W&gt;&lt;C-S&gt; :cs find s &lt;C-R&gt;=expand(\"</span><span class=\"symbol\">&lt;cword&gt;</span><span class=\"comment\">\")&lt;CR&gt;&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;s :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> s <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;g :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> g <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;<span class=\"keyword\">c</span> :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;t :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> t <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;<span class=\"keyword\">e</span> :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;<span class=\"keyword\">f</span> :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;i :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> i ^<span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span>$<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;d :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> d <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" Hitting CTRL-space *twice* before the search type does a vertical</span></div><div class=\"line\">    <span class=\"comment\">\" split instead of a horizontal one (vim 6 and up only)</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" (Note: you may wish to put a 'set splitright' in your .vimrc</span></div><div class=\"line\">    <span class=\"comment\">\" if you prefer the new window on the right instead of the left</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;s :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> s <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;g :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> g <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;<span class=\"keyword\">c</span> :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;t :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> t <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;<span class=\"keyword\">e</span> :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;<span class=\"keyword\">f</span> :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;i :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> i ^<span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span>$<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;d :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> d <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"comment\">\" key map timeouts</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" By default Vim will only wait 1 second for each keystroke in a mapping.</span></div><div class=\"line\">    <span class=\"comment\">\" You may find that too short with the above typemaps.  If so, you should</span></div><div class=\"line\">    <span class=\"comment\">\" either turn off mapping timeouts via 'notimeout'.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set notimeout</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" Or, you can keep timeouts, by uncommenting the timeoutlen line below,</span></div><div class=\"line\">    <span class=\"comment\">\" with your own personal favorite value (in milliseconds):</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set timeoutlen=4000</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" Either way, since mapping timeout settings by default also set the</span></div><div class=\"line\">    <span class=\"comment\">\" timeouts for multicharacter 'keys codes' (like &lt;F1&gt;), you should also</span></div><div class=\"line\">    <span class=\"comment\">\" set ttimeout and ttimeoutlen: otherwise, you will experience strange</span></div><div class=\"line\">    <span class=\"comment\">\" delays as vim waits for a keystroke after you hit ESC (it will be</span></div><div class=\"line\">    <span class=\"comment\">\" waiting to see if the ESC is actually part of a key code like &lt;F1&gt;).</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set ttimeout</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" personally, I find a tenth of a second to work well for key code</span></div><div class=\"line\">    <span class=\"comment\">\" timeouts. If you experience problems and have a slow terminal or network</span></div><div class=\"line\">    <span class=\"comment\">\" connection, set it higher.  If you don't set ttimeoutlen, the value for</span></div><div class=\"line\">    <span class=\"comment\">\" timeoutlent (default: 1000 = 1 second, which is sluggish) is used.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set ttimeoutlen=100</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">endif</span></div></pre></td></tr></table></figure></p>\n<p>3、使用<br>建立一个cscope数据库:<br><code>find . -name &quot;*.h&quot; -o -name &quot;*.c&quot; -o -name &quot;*.cpp&quot; &gt; cscope.files</code><br><code>cscope -Rbkq -i cscope.files</code><br><code>ctags -R</code><br>添加一个cscope链接库:<br><code>:cs add cscope.out</code><br>查找:<br><code>:cs find s name</code> 查找<br><code>:cw</code> 查看查找结果的列表<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">cscope</span> -Rbkq</div><div class=\"line\">R 表示把所有子目录里的文件也建立索引</div><div class=\"line\"><span class=\"keyword\">b</span> 表示<span class=\"keyword\">cscope</span>不启动自带的用户界面，而仅仅建立符号数据库</div><div class=\"line\">q 生成<span class=\"keyword\">cscope</span>.in.out和<span class=\"keyword\">cscope</span>.<span class=\"keyword\">po</span>.out文件，加快<span class=\"keyword\">cscope</span>的索引速度</div><div class=\"line\"><span class=\"keyword\">k</span> 在生成索引文件时，不搜索/usr/include目录</div><div class=\"line\"></div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> s ---- 查找C语言符号，即查找函数名、宏、枚举值等出现的地方</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> g ---- 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> d ---- 查找本函数调用的函数</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> ---- 查找调用本函数的函数</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> t ---- 查找指定的字符串</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> ---- 查找egrep模式，相当于egrep功能，但查找速度快多了</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> ---- 查找并打开文件，类似<span class=\"keyword\">vim</span>的<span class=\"keyword\">find</span>功能</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> i ---- 查找包含本文件的文</div><div class=\"line\">Ctrl+\\ 可以代替 ：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span></div><div class=\"line\"></div><div class=\"line\">:<span class=\"keyword\">cs</span> show            #显示<span class=\"keyword\">cscope</span>的链接</div><div class=\"line\">:<span class=\"keyword\">cs</span> reset           #重新初始化所有的<span class=\"keyword\">cscope</span>链接</div><div class=\"line\">:<span class=\"keyword\">cs</span> kill            #杀掉一个<span class=\"keyword\">cscope</span>链接</div><div class=\"line\">:<span class=\"keyword\">cs</span> <span class=\"keyword\">help</span>            #显示一个简短的摘要</div></pre></td></tr></table></figure></p>\n<h3 id=\"vundle\"><a href=\"#vundle\" class=\"headerlink\" title=\"vundle\"></a>vundle</h3><p>Vundle地址：<a href=\"https://github.com/VundleVim/Vundle.vim\" target=\"_blank\" rel=\"external\">https://github.com/VundleVim/Vundle.vim</a><br>安装Vundle<br><code>git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code><br>配置Vundle插件<code>vi ~/.vimrc</code><br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">set</span> nocompatible              <span class=\"comment\">\" be iMproved, required</span></div><div class=\"line\"><span class=\"keyword\">filetype</span> off                  <span class=\"comment\">\" required</span></div><div class=\"line\"><span class=\"comment\">\" set the runtime path to include Vundle and initialize</span></div><div class=\"line\"><span class=\"keyword\">set</span> rtp+=~/.<span class=\"keyword\">vim</span>/bundle/Vundle.<span class=\"keyword\">vim</span></div><div class=\"line\"><span class=\"keyword\">call</span> vundle#begin()</div><div class=\"line\"><span class=\"comment\">\" alternatively, pass a path where Vundle should install plugins</span></div><div class=\"line\"><span class=\"comment\">\"call vundle#begin('~/some/path/here')</span></div><div class=\"line\"><span class=\"comment\">\" let Vundle manage Vundle, required</span></div><div class=\"line\">Plugin <span class=\"string\">'VundleVim/Vundle.vim'</span></div><div class=\"line\"><span class=\"comment\">\" The following are examples of different formats supported.</span></div><div class=\"line\"><span class=\"comment\">\" Keep Plugin commands between vundle#begin/end.</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" plugin on GitHub repo</span></div><div class=\"line\">Plugin <span class=\"string\">'tpope/vim-fugitive'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" plugin from http://vim-scripts.org/vim/scripts.html</span></div><div class=\"line\">Plugin <span class=\"string\">'L9'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" Git plugin not hosted on GitHub</span></div><div class=\"line\">Plugin <span class=\"string\">'git://git.wincent.com/command-t.git'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" The sparkup vim script is in a subdirectory of this repo called vim.</span></div><div class=\"line\"><span class=\"comment\">\" Pass the path to set the runtimepath properly.</span></div><div class=\"line\">Plugin <span class=\"string\">'rstacruz/sparkup'</span>, &#123;<span class=\"string\">'rtp'</span>: <span class=\"string\">'vim/'</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" All of your Plugins must be added before the following line</span></div><div class=\"line\"><span class=\"keyword\">call</span> vundle#end()            <span class=\"comment\">\" required</span></div><div class=\"line\"><span class=\"keyword\">filetype</span> plugin <span class=\"built_in\">indent</span> <span class=\"keyword\">on</span>    <span class=\"comment\">\" required</span></div><div class=\"line\"><span class=\"comment\">\" To ignore plugin indent changes, instead use:</span></div><div class=\"line\"><span class=\"comment\">\"filetype plugin on</span></div><div class=\"line\"><span class=\"comment\">\"</span></div><div class=\"line\"><span class=\"comment\">\" Brief help</span></div><div class=\"line\"><span class=\"comment\">\" :PluginList       - lists configured plugins</span></div><div class=\"line\"><span class=\"comment\">\" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></div><div class=\"line\"><span class=\"comment\">\" :PluginSearch foo - searches for foo; append `!` to refresh local cache</span></div><div class=\"line\"><span class=\"comment\">\" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></div><div class=\"line\"><span class=\"comment\">\"</span></div><div class=\"line\"><span class=\"comment\">\" see :h vundle for more details or wiki for FAQ</span></div><div class=\"line\"><span class=\"comment\">\" Put your non-Plugin stuff after this line</span></div></pre></td></tr></table></figure></p>\n<p>在vi中执行命令<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">:PluginList</span>       - lists configured plugins</div><div class=\"line\"><span class=\"symbol\">:PluginInstall</span>    - installs plugins; append <span class=\"string\">`!`</span> to update <span class=\"keyword\">or</span> just <span class=\"symbol\">:PluginUpdate</span></div><div class=\"line\"><span class=\"symbol\">:PluginSearch</span> foo - searches <span class=\"keyword\">for</span> foo; append <span class=\"string\">`!`</span> to refresh local cache</div><div class=\"line\"><span class=\"symbol\">:PluginClean</span>      - confirms removal of unused plugins; append <span class=\"string\">`!`</span> to auto-approve removal</div><div class=\"line\"><span class=\"symbol\">:h</span> vundle         - more details</div></pre></td></tr></table></figure></p>\n<p>python相关插件<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">\"python相关插件</span></div><div class=\"line\"><span class=\"comment\">\"自动缩进</span></div><div class=\"line\">Plugin <span class=\"string\">'vim-scripts/indentpython.vim'</span></div><div class=\"line\"><span class=\"comment\">\"自动补全</span></div><div class=\"line\">Plugin <span class=\"string\">'Valloric/YouCompleteMe'</span></div><div class=\"line\"><span class=\"comment\">\"每次保存文件时Vim都会检查代码的语法</span></div><div class=\"line\">Plugin <span class=\"string\">'scrooloose/syntastic'</span></div><div class=\"line\"><span class=\"comment\">\"PEP8代码风格检查</span></div><div class=\"line\">Plugin <span class=\"string\">'nvie/vim-flake8'</span></div></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"安装vim\"><a href=\"#安装vim\" class=\"headerlink\" title=\"安装vim\"></a>安装vim</h2><h3 id=\"通过包管理安装\"><a href=\"#通过包管理安装\" class=\"headerlink\" title=\"通过包管理安装\"></a>通过包管理安装</h3><p>安装add-apt-repository<br><code>sudo apt-get install software-properties-common python-software-properties</code></p>\n<p>ubuntu16.04添加ppa源来安装新版vim<br><code>sudo add-apt-repository ppa:jonathonf/vim</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install vim</code><br>","more":"<br>卸载<br><code>sudo apt remove vim</code><br><code>sudo add-apt-repository --remove ppa:jonathonf/vim</code></p>\n<h3 id=\"源码编译安装\"><a href=\"#源码编译安装\" class=\"headerlink\" title=\"源码编译安装\"></a>源码编译安装</h3><p>获取源码<br><code>git clone https://github.com/vim/vim.git</code></p>\n<p>安装相应的依赖<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install libncurses5-<span class=\"built_in\">dev</span> libgnome2-<span class=\"built_in\">dev</span> libgnomeui-<span class=\"built_in\">dev</span> \\</div><div class=\"line\">libgtk2<span class=\"number\">.0</span>-<span class=\"built_in\">dev</span> libatk1<span class=\"number\">.0</span>-<span class=\"built_in\">dev</span> libbonoboui2-<span class=\"built_in\">dev</span> \\</div><div class=\"line\">libcairo2-<span class=\"built_in\">dev</span> libx11-<span class=\"built_in\">dev</span> libxpm-<span class=\"built_in\">dev</span> libxt-<span class=\"built_in\">dev</span> python-<span class=\"built_in\">dev</span> \\</div><div class=\"line\">python3-<span class=\"built_in\">dev</span> ruby-<span class=\"built_in\">dev</span> lua5<span class=\"number\">.1</span> lua5<span class=\"number\">.1</span>-<span class=\"built_in\">dev</span> libperl-<span class=\"built_in\">dev</span></div></pre></td></tr></table></figure></p>\n<p>删除原有vim<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg -<span class=\"keyword\">l</span> | <span class=\"keyword\">grep</span> <span class=\"keyword\">vim</span></div><div class=\"line\">sudo dpkg -<span class=\"keyword\">P</span> <span class=\"keyword\">vim</span> <span class=\"keyword\">vim</span>-common <span class=\"keyword\">vim</span>-run</div></pre></td></tr></table></figure></p>\n<p>编译源码并安装<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-features=huge --enable-multibyte \\</div><div class=\"line\">-<span class=\"ruby\">-enable-pythoninterp --enable-python3interp --enable-perlinterp --enable-rubyinterp --enable-luainterp \\</div><div class=\"line\"></span>-<span class=\"ruby\">-enable-gui=gtk2 --enable-cscope \\</div><div class=\"line\"></span>-<span class=\"ruby\">-with-python-config-dir=<span class=\"regexp\">/usr/lib</span><span class=\"regexp\">/python2.7/config</span>-x86_64-linux-gnu \\</div><div class=\"line\"></span>-<span class=\"ruby\">-with-python3-config-dir=<span class=\"regexp\">/usr/lib</span><span class=\"regexp\">/python3.5/config</span>-<span class=\"number\">3.5</span>m-x86_64-linux-gnu \\</div><div class=\"line\"></span>-<span class=\"ruby\">-prefix=<span class=\"regexp\">/usr \\</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">-enable-fail-if-missing</div><div class=\"line\"></span></span></div><div class=\"line\">make &amp;&amp; sudo make install</div></pre></td></tr></table></figure></p>\n<p>设置软连接<br><code>sudo ln -s /usr/bin/vim /usr/bin/vi</code><br><code>sudo mkdir /etc/vim &amp;&amp; sudo touch /etc/vim/vimrc</code><br><code>sudo ln -s /etc/vim/vimrc /usr/share/vim/vimrc</code></p>\n<h2 id=\"vim命令\"><a href=\"#vim命令\" class=\"headerlink\" title=\"vim命令\"></a>vim命令</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\">s   <span class=\"comment\">#删除光标所在字符，并进入输入模式</span></div><div class=\"line\">S   <span class=\"comment\">#删除光标所在行，并进入输入模式</span></div><div class=\"line\">R   <span class=\"comment\">#替换多个字符</span></div><div class=\"line\"></div><div class=\"line\">ncb <span class=\"comment\">#剪切光标前n个单词</span></div><div class=\"line\">nyw <span class=\"comment\">#复制光标后n个单词</span></div><div class=\"line\">ndw <span class=\"comment\">#删除光标后n个单词</span></div><div class=\"line\"></div><div class=\"line\">c<span class=\"variable\">$ </span> <span class=\"comment\">#剪切从光标所在位置到行尾的字符串</span></div><div class=\"line\">y^  <span class=\"comment\">#复制从光标所在位置到行首的字符串</span></div><div class=\"line\">d<span class=\"variable\">$ </span> <span class=\"comment\">#删除或者剪切从光标所在位置到行尾的字符串</span></div><div class=\"line\"></div><div class=\"line\">gg=G            <span class=\"comment\">#自动排版</span></div><div class=\"line\"></div><div class=\"line\">H               <span class=\"comment\">#移动到屏幕首行</span></div><div class=\"line\">M               <span class=\"comment\">#移动到屏幕中间</span></div><div class=\"line\">L               <span class=\"comment\">#移动到屏幕末行</span></div><div class=\"line\">gg              <span class=\"comment\">#移动到文件首行</span></div><div class=\"line\">G               <span class=\"comment\">#移动到文件末行</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">0</span>               <span class=\"comment\">#移动到所在行最前的字符</span></div><div class=\"line\">^               <span class=\"comment\">#移动到所在行第一个非空字符</span></div><div class=\"line\"><span class=\"variable\">$ </span>              <span class=\"comment\">#移动到所在行最后一个字符</span></div><div class=\"line\"></div><div class=\"line\">b               <span class=\"comment\">#移动到上一个单词的第一个字符</span></div><div class=\"line\">w               <span class=\"comment\">#移动到下一个单词的第一个字符</span></div><div class=\"line\">e               <span class=\"comment\">#移动到下一个单词的第一个字符</span></div><div class=\"line\"></div><div class=\"line\">Ctrl + d        <span class=\"comment\">#光标向下移动半页</span></div><div class=\"line\">Ctrl + f        <span class=\"comment\">#光标向下移动一页</span></div><div class=\"line\">Ctrl + n        <span class=\"comment\">#补全单词</span></div><div class=\"line\">Ctrl + p        <span class=\"comment\">#补全单词</span></div><div class=\"line\">Ctrl + x + l    <span class=\"comment\">#补全一行</span></div><div class=\"line\">Ctrl + x + f    <span class=\"comment\">#插入当前目录下文件名</span></div><div class=\"line\"></div><div class=\"line\">/string         <span class=\"comment\">#向下查找</span></div><div class=\"line\">?string         <span class=\"comment\">#向上查找</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">:range</span> y        <span class=\"comment\">#块复制</span></div><div class=\"line\"><span class=\"symbol\">:range</span> d        <span class=\"comment\">#块删除</span></div><div class=\"line\"><span class=\"symbol\">:range</span> s/old_string/new_string/gc      <span class=\"comment\">#替换</span></div><div class=\"line\">    <span class=\"comment\">#% 表示所有行</span></div><div class=\"line\">    <span class=\"comment\">#. 表示当前行</span></div><div class=\"line\">    <span class=\"comment\">#$ 表示末行</span></div><div class=\"line\">    <span class=\"comment\">#g 表示行中进行多个匹配</span></div><div class=\"line\">    <span class=\"comment\">#c 替换前询问</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">:vs</span> file_name       <span class=\"comment\">#打开一个文件并左右分割窗口</span></div><div class=\"line\"><span class=\"symbol\">:sp</span> file_name       <span class=\"comment\">#打开一个文件并上下分割窗口</span></div><div class=\"line\">ctrl+w+w            <span class=\"comment\">#文件之间切换</span></div><div class=\"line\"></div><div class=\"line\">set paste           <span class=\"comment\">#设置为粘贴模式</span></div><div class=\"line\">set nopaste         <span class=\"comment\">#关闭粘贴模式</span></div><div class=\"line\">set mouse=v         <span class=\"comment\">#设置鼠标模式为v</span></div><div class=\"line\"></div><div class=\"line\">qa                  <span class=\"comment\">#将后续的命令记入寄存器a,q结束录制</span></div><div class=\"line\"><span class=\"variable\">@a</span>                  <span class=\"comment\">#执行寄存器a中录制的内容</span></div></pre></td></tr></table></figure>\n<h2 id=\"vim配置\"><a href=\"#vim配置\" class=\"headerlink\" title=\"vim配置\"></a>vim配置</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">tabstop             <span class=\"comment\"># ts 定义tab所等同的空格长度，一般来说最好设置成8</span></div><div class=\"line\">shiftwidth          <span class=\"comment\"># sw 用于程序中自动缩进所使用的空白长度指示</span></div><div class=\"line\">softtabstop         <span class=\"comment\"># sts 逢8空格进1制表符”,前提是你tabstop=8</span></div><div class=\"line\">expandtab           <span class=\"comment\"># et 以空格替换</span></div><div class=\"line\"></div><div class=\"line\">cindent             <span class=\"comment\"># 用C语言的缩进格式来处理程序的缩进结构</span></div><div class=\"line\">smartindent         <span class=\"comment\"># si 和前一行有相同的缩进量，同时能识别出花括号，函数等</span></div><div class=\"line\">autoindent          <span class=\"comment\"># ai 新增加的行和前一行使用相同的缩进形式</span></div><div class=\"line\"></div><div class=\"line\">autocmd             <span class=\"comment\"># au 自动执行命令</span></div><div class=\"line\"></div><div class=\"line\">空格和TAB的替换：</div><div class=\"line\"><span class=\"comment\">#TAB替换为空格：</span></div><div class=\"line\"><span class=\"symbol\">:set</span> ts=<span class=\"number\">4</span></div><div class=\"line\"><span class=\"symbol\">:set</span> et</div><div class=\"line\"><span class=\"symbol\">:%retab!</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#空格替换为TAB：</span></div><div class=\"line\"><span class=\"symbol\">:set</span> ts=<span class=\"number\">4</span></div><div class=\"line\"><span class=\"symbol\">:set</span> noet</div><div class=\"line\"><span class=\"symbol\">:%retab!</span></div><div class=\"line\"><span class=\"comment\">#加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#删除每行后面多余的空格，可以执行如下命令：</span></div><div class=\"line\"><span class=\"symbol\">:%s/</span>\\s\\+<span class=\"variable\">$/</span>/</div><div class=\"line\"><span class=\"comment\">#删除每行前面的空格，执行如下命令：</span></div><div class=\"line\"><span class=\"symbol\">:%s/^</span>\\+\\s/<span class=\"regexp\">/</span></div></pre></td></tr></table></figure>\n<p><code>/etc/vim/vimrc</code>配置<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">syntax</span> <span class=\"keyword\">on</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">nu</span></div><div class=\"line\"><span class=\"keyword\">set</span> mouse=<span class=\"keyword\">a</span>                     <span class=\"comment\">\"设置鼠标可用</span></div><div class=\"line\"><span class=\"keyword\">set</span> pastetoggle=<span class=\"symbol\">&lt;F12&gt;</span>           <span class=\"comment\">\"按f12打开或关闭粘贴模式</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" \\ should be followed by /, ? or &amp;</span></div><div class=\"line\"><span class=\"keyword\">set</span> nocompatible</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> foldenable              <span class=\"comment\">\" 开始折叠</span></div><div class=\"line\"><span class=\"keyword\">set</span> fdm=<span class=\"keyword\">syntax</span>              <span class=\"comment\">\" 设置语法折叠</span></div><div class=\"line\"><span class=\"keyword\">set</span> foldcolumn=<span class=\"number\">0</span>            <span class=\"comment\">\" 设置折叠区域的宽度</span></div><div class=\"line\"><span class=\"keyword\">setlocal</span> <span class=\"built_in\">foldlevel</span>=<span class=\"number\">1</span>        <span class=\"comment\">\" 设置折叠层数为</span></div><div class=\"line\"><span class=\"keyword\">set</span> foldlevelstart=<span class=\"number\">99</span>       <span class=\"comment\">\" 打开文件是默认不折叠代码</span></div><div class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">foldclose</span>=<span class=\"keyword\">all</span>           <span class=\"comment\">\" 设置为自动关闭折叠</span></div><div class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;space&gt;</span> @=((<span class=\"built_in\">foldclosed</span>(<span class=\"built_in\">line</span>(<span class=\"string\">'.'</span>)) &lt; <span class=\"number\">0</span>) ? <span class=\"string\">'zc'</span> : <span class=\"string\">'zo'</span>)<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"><span class=\"comment\">\"用空格键来开关折叠</span></div><div class=\"line\"><span class=\"comment\">\"zM 折叠所有代码</span></div><div class=\"line\"><span class=\"comment\">\"zR 取消所有代码折叠</span></div><div class=\"line\"><span class=\"comment\">\"zC 递归折叠代码</span></div><div class=\"line\"><span class=\"comment\">\"zO 递归取消折叠</span></div><div class=\"line\"><span class=\"comment\">\"[z ]z zj zk 移动</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">au</span> BufNewFile,BufRead *.<span class=\"keyword\">c</span>,*.cpp,*.h</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> <span class=\"built_in\">cindent</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">au</span> BufNewFile,BufRead *.<span class=\"keyword\">py</span></div><div class=\"line\">    \\ <span class=\"keyword\">set</span> tabstop=<span class=\"number\">4</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> softtabstop=<span class=\"number\">4</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> <span class=\"built_in\">shiftwidth</span>=<span class=\"number\">4</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> textwidth=<span class=\"number\">79</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> expandtab |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> autoindent |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> fileformat=unix |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> encoding=utf-<span class=\"number\">8</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">let</span> python_highlight_all=<span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">au</span> BufNewFile,BufRead *.js,*.html,*.css</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> tabstop=<span class=\"number\">2</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> softtabstop=<span class=\"number\">2</span> |</div><div class=\"line\">    \\ <span class=\"keyword\">set</span> <span class=\"built_in\">shiftwidth</span>=<span class=\"number\">2</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\"标识不必要的空白字符</span></div><div class=\"line\"><span class=\"keyword\">highlight</span> ExtraWhitespace ctermbg=<span class=\"keyword\">red</span> guibg=<span class=\"keyword\">red</span></div><div class=\"line\"><span class=\"keyword\">autocmd</span> BufWinEnter * <span class=\"keyword\">match</span> ExtraWhitespace /\\s\\+$\\| \\+\\ze\\t\\+\\|\\t\\+\\zs \\+/</div></pre></td></tr></table></figure></p>\n<h2 id=\"vim插件\"><a href=\"#vim插件\" class=\"headerlink\" title=\"vim插件\"></a>vim插件</h2><h3 id=\"ctags\"><a href=\"#ctags\" class=\"headerlink\" title=\"ctags\"></a>ctags</h3><p>ctags网址：<a href=\"http://ctags.sourceforge.net/\">http://ctags.sourceforge.net/</a><br>1、安装:<br><code>sudo apt-get install ctags</code><br>2、生成索引文件:<br>去需要查找的目录执行:<code>ctags -R .</code><br>3、配置vim<code>sudo vim /etc/vim/vimrc</code><br><code>set tags+=建立索引文件的目录/tags</code><br>也可以临时添加索引：<br><code>settags=建立索引文件的目录/tags</code><br>4、使用<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">ctrl</span> + ]        <span class=\"comment\">#跟进</span></div><div class=\"line\">Ctrl＋W + ］    <span class=\"comment\">#新窗口显示当前光标下单词的标签，光标跳到标签处</span></div><div class=\"line\">ctrl + o        <span class=\"comment\">#返回</span></div><div class=\"line\">ctrl + t        <span class=\"comment\">#返回</span></div><div class=\"line\"></div><div class=\"line\">vi -t tag_name  <span class=\"comment\">#打开定义tag_name的文件，并把光标定位到这一行</span></div><div class=\"line\">ts + tag_name   <span class=\"comment\">#搜索tag_name</span></div><div class=\"line\">tp              <span class=\"comment\">#上一个</span></div><div class=\"line\">tn              <span class=\"comment\">#下一个</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"cscope\"><a href=\"#cscope\" class=\"headerlink\" title=\"cscope\"></a>cscope</h3><p>cscope网址：<a href=\"http://cscope.sourceforge.net/\">http://cscope.sourceforge.net/</a><br>Cscope tutorial：<a href=\"http://cscope.sourceforge.net/cscope_vim_tutorial.html\">http://cscope.sourceforge.net/cscope_vim_tutorial.html</a></p>\n<p>1、安装cscope<br><code>./configure --with-flex</code><br><code>make &amp;&amp; sudo make install</code><br>2、配置vim <code>sudo vi /etc/vim/vimrc</code> 添加以下内容<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">has</span>(<span class=\"string\">\"cscope\"</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"comment\">\" Standard cscope/vim boilerplate</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" use both cscope and ctag for 'ctrl-]', ':ta', and 'vim -t'</span></div><div class=\"line\">    <span class=\"keyword\">set</span> cscopetag</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" check cscope for definition of a symbol before checking ctags: set to 1</span></div><div class=\"line\">    <span class=\"comment\">\" if you want the reverse search order.</span></div><div class=\"line\">    <span class=\"keyword\">set</span> csto=<span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" add any cscope database in current directory</span></div><div class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">filereadable</span>(<span class=\"string\">\"cscope.out\"</span>)</div><div class=\"line\">        <span class=\"keyword\">cs</span> <span class=\"built_in\">add</span> <span class=\"keyword\">cscope</span>.out</div><div class=\"line\">    <span class=\"comment\">\" else add the database pointed to by environment variable</span></div><div class=\"line\">    <span class=\"keyword\">elseif</span> $CSCOPE_DB != <span class=\"string\">\"\"</span></div><div class=\"line\">        <span class=\"keyword\">cs</span> <span class=\"built_in\">add</span> $CSCOPE_DB</div><div class=\"line\">    <span class=\"keyword\">endif</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" show msg when any other cscope db added</span></div><div class=\"line\">    <span class=\"keyword\">set</span> cscopeverbose</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"comment\">\" My cscope/vim key mappings</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" The following maps all invoke one of the following cscope search types:</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"   's'   symbol: find all references to the token under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'g'   global: find global definition(s) of the token under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'c'   calls:  find all calls to the function name under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   't'   text:   find all instances of the text under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'e'   egrep:  egrep search for the word under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'f'   file:   open the filename under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'i'   includes: find files that include the filename under cursor</span></div><div class=\"line\">    <span class=\"comment\">\"   'd'   called: find functions that function under cursor calls</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" Below are three sets of the maps: one set that just jumps to your</span></div><div class=\"line\">    <span class=\"comment\">\" search result, one that splits the existing vim window horizontally and</span></div><div class=\"line\">    <span class=\"comment\">\" diplays your search result in the new window, and one that does the same</span></div><div class=\"line\">    <span class=\"comment\">\" thing, but does a vertical split instead (vim 6 only).</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" I've used CTRL-\\ and CTRL-@ as the starting keys for these maps, as it's</span></div><div class=\"line\">    <span class=\"comment\">\" unlikely that you need their default mappings (CTRL-\\'s default use is</span></div><div class=\"line\">    <span class=\"comment\">\" as part of CTRL-\\ CTRL-N typemap, which basically just does the same</span></div><div class=\"line\">    <span class=\"comment\">\" thing as hitting 'escape': CTRL-@ doesn't seem to have any default use).</span></div><div class=\"line\">    <span class=\"comment\">\" If you don't like using 'CTRL-@' or CTRL-\\, , you can change some or all</span></div><div class=\"line\">    <span class=\"comment\">\" of these maps to use other keys.  One likely candidate is 'CTRL-_'</span></div><div class=\"line\">    <span class=\"comment\">\" (which also maps to CTRL-/, which is easier to type).  By default it is</span></div><div class=\"line\">    <span class=\"comment\">\" used to switch between Hebrew and English keyboard mode.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" All of the maps involving the &lt;cfile&gt; macro use '^&lt;cfile&gt;$': this is so</span></div><div class=\"line\">    <span class=\"string\">\" that searches over '#include &lt;time.h&gt;\"</span> <span class=\"keyword\">return</span> <span class=\"keyword\">only</span> references <span class=\"keyword\">to</span></div><div class=\"line\">    <span class=\"comment\">\" 'time.h', and not 'sys/time.h', etc. (by default cscope will return all</span></div><div class=\"line\">    <span class=\"comment\">\" files that contain 'time.h' as part of their name).</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" To do the first type of search, hit 'CTRL-\\', followed by one of the</span></div><div class=\"line\">    <span class=\"comment\">\" cscope search types above (s,g,c,t,e,f,i,d).  The result of your cscope</span></div><div class=\"line\">    <span class=\"comment\">\" search will be displayed in the current window.  You can use CTRL-T to</span></div><div class=\"line\">    <span class=\"comment\">\" go back to where you were before the search.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;s :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> s <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;g :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> g <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;<span class=\"keyword\">c</span> :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;t :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> t <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;<span class=\"keyword\">e</span> :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;<span class=\"keyword\">f</span> :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;i :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> i ^<span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span>$<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-\\&gt;d :<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> d <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" Using 'CTRL-spacebar' (intepreted as CTRL-@ by vim) then a search type</span></div><div class=\"line\">    <span class=\"comment\">\" makes the vim window split horizontally, with search result displayed in</span></div><div class=\"line\">    <span class=\"comment\">\" the new window.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" (Note: earlier versions of vim may not have the :scs command, but it</span></div><div class=\"line\">    <span class=\"comment\">\" can be simulated roughly via:</span></div><div class=\"line\">    <span class=\"string\">\"    nmap &lt;C-@&gt;s &lt;C-W&gt;&lt;C-S&gt; :cs find s &lt;C-R&gt;=expand(\"</span><span class=\"symbol\">&lt;cword&gt;</span><span class=\"comment\">\")&lt;CR&gt;&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;s :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> s <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;g :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> g <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;<span class=\"keyword\">c</span> :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;t :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> t <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;<span class=\"keyword\">e</span> :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;<span class=\"keyword\">f</span> :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;i :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> i ^<span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span>$<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;d :<span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> d <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">\" Hitting CTRL-space *twice* before the search type does a vertical</span></div><div class=\"line\">    <span class=\"comment\">\" split instead of a horizontal one (vim 6 and up only)</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" (Note: you may wish to put a 'set splitright' in your .vimrc</span></div><div class=\"line\">    <span class=\"comment\">\" if you prefer the new window on the right instead of the left</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;s :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> s <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;g :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> g <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;<span class=\"keyword\">c</span> :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;t :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> t <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;<span class=\"keyword\">e</span> :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;<span class=\"keyword\">f</span> :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;i :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> i ^<span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cfile&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span>$<span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\">    <span class=\"keyword\">nmap</span> &lt;C-@&gt;&lt;C-@&gt;d :<span class=\"keyword\">vert</span> <span class=\"keyword\">scs</span> <span class=\"keyword\">find</span> d <span class=\"symbol\">&lt;C-R&gt;</span>=<span class=\"built_in\">expand</span>(<span class=\"string\">\"&lt;cword&gt;\"</span>)<span class=\"symbol\">&lt;CR&gt;</span><span class=\"symbol\">&lt;CR&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"string\">\"\"</span><span class=\"comment\">\" key map timeouts</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" By default Vim will only wait 1 second for each keystroke in a mapping.</span></div><div class=\"line\">    <span class=\"comment\">\" You may find that too short with the above typemaps.  If so, you should</span></div><div class=\"line\">    <span class=\"comment\">\" either turn off mapping timeouts via 'notimeout'.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set notimeout</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" Or, you can keep timeouts, by uncommenting the timeoutlen line below,</span></div><div class=\"line\">    <span class=\"comment\">\" with your own personal favorite value (in milliseconds):</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set timeoutlen=4000</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" Either way, since mapping timeout settings by default also set the</span></div><div class=\"line\">    <span class=\"comment\">\" timeouts for multicharacter 'keys codes' (like &lt;F1&gt;), you should also</span></div><div class=\"line\">    <span class=\"comment\">\" set ttimeout and ttimeoutlen: otherwise, you will experience strange</span></div><div class=\"line\">    <span class=\"comment\">\" delays as vim waits for a keystroke after you hit ESC (it will be</span></div><div class=\"line\">    <span class=\"comment\">\" waiting to see if the ESC is actually part of a key code like &lt;F1&gt;).</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set ttimeout</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\" personally, I find a tenth of a second to work well for key code</span></div><div class=\"line\">    <span class=\"comment\">\" timeouts. If you experience problems and have a slow terminal or network</span></div><div class=\"line\">    <span class=\"comment\">\" connection, set it higher.  If you don't set ttimeoutlen, the value for</span></div><div class=\"line\">    <span class=\"comment\">\" timeoutlent (default: 1000 = 1 second, which is sluggish) is used.</span></div><div class=\"line\">    <span class=\"comment\">\"</span></div><div class=\"line\">    <span class=\"comment\">\"set ttimeoutlen=100</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">endif</span></div></pre></td></tr></table></figure></p>\n<p>3、使用<br>建立一个cscope数据库:<br><code>find . -name &quot;*.h&quot; -o -name &quot;*.c&quot; -o -name &quot;*.cpp&quot; &gt; cscope.files</code><br><code>cscope -Rbkq -i cscope.files</code><br><code>ctags -R</code><br>添加一个cscope链接库:<br><code>:cs add cscope.out</code><br>查找:<br><code>:cs find s name</code> 查找<br><code>:cw</code> 查看查找结果的列表<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">cscope</span> -Rbkq</div><div class=\"line\">R 表示把所有子目录里的文件也建立索引</div><div class=\"line\"><span class=\"keyword\">b</span> 表示<span class=\"keyword\">cscope</span>不启动自带的用户界面，而仅仅建立符号数据库</div><div class=\"line\">q 生成<span class=\"keyword\">cscope</span>.in.out和<span class=\"keyword\">cscope</span>.<span class=\"keyword\">po</span>.out文件，加快<span class=\"keyword\">cscope</span>的索引速度</div><div class=\"line\"><span class=\"keyword\">k</span> 在生成索引文件时，不搜索/usr/include目录</div><div class=\"line\"></div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> s ---- 查找C语言符号，即查找函数名、宏、枚举值等出现的地方</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> g ---- 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> d ---- 查找本函数调用的函数</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">c</span> ---- 查找调用本函数的函数</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> t ---- 查找指定的字符串</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">e</span> ---- 查找egrep模式，相当于egrep功能，但查找速度快多了</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> <span class=\"keyword\">f</span> ---- 查找并打开文件，类似<span class=\"keyword\">vim</span>的<span class=\"keyword\">find</span>功能</div><div class=\"line\">：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span> i ---- 查找包含本文件的文</div><div class=\"line\">Ctrl+\\ 可以代替 ：<span class=\"keyword\">cs</span> <span class=\"keyword\">find</span></div><div class=\"line\"></div><div class=\"line\">:<span class=\"keyword\">cs</span> show            #显示<span class=\"keyword\">cscope</span>的链接</div><div class=\"line\">:<span class=\"keyword\">cs</span> reset           #重新初始化所有的<span class=\"keyword\">cscope</span>链接</div><div class=\"line\">:<span class=\"keyword\">cs</span> kill            #杀掉一个<span class=\"keyword\">cscope</span>链接</div><div class=\"line\">:<span class=\"keyword\">cs</span> <span class=\"keyword\">help</span>            #显示一个简短的摘要</div></pre></td></tr></table></figure></p>\n<h3 id=\"vundle\"><a href=\"#vundle\" class=\"headerlink\" title=\"vundle\"></a>vundle</h3><p>Vundle地址：<a href=\"https://github.com/VundleVim/Vundle.vim\">https://github.com/VundleVim/Vundle.vim</a><br>安装Vundle<br><code>git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code><br>配置Vundle插件<code>vi ~/.vimrc</code><br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">set</span> nocompatible              <span class=\"comment\">\" be iMproved, required</span></div><div class=\"line\"><span class=\"keyword\">filetype</span> off                  <span class=\"comment\">\" required</span></div><div class=\"line\"><span class=\"comment\">\" set the runtime path to include Vundle and initialize</span></div><div class=\"line\"><span class=\"keyword\">set</span> rtp+=~/.<span class=\"keyword\">vim</span>/bundle/Vundle.<span class=\"keyword\">vim</span></div><div class=\"line\"><span class=\"keyword\">call</span> vundle#begin()</div><div class=\"line\"><span class=\"comment\">\" alternatively, pass a path where Vundle should install plugins</span></div><div class=\"line\"><span class=\"comment\">\"call vundle#begin('~/some/path/here')</span></div><div class=\"line\"><span class=\"comment\">\" let Vundle manage Vundle, required</span></div><div class=\"line\">Plugin <span class=\"string\">'VundleVim/Vundle.vim'</span></div><div class=\"line\"><span class=\"comment\">\" The following are examples of different formats supported.</span></div><div class=\"line\"><span class=\"comment\">\" Keep Plugin commands between vundle#begin/end.</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" plugin on GitHub repo</span></div><div class=\"line\">Plugin <span class=\"string\">'tpope/vim-fugitive'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" plugin from http://vim-scripts.org/vim/scripts.html</span></div><div class=\"line\">Plugin <span class=\"string\">'L9'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" Git plugin not hosted on GitHub</span></div><div class=\"line\">Plugin <span class=\"string\">'git://git.wincent.com/command-t.git'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" The sparkup vim script is in a subdirectory of this repo called vim.</span></div><div class=\"line\"><span class=\"comment\">\" Pass the path to set the runtimepath properly.</span></div><div class=\"line\">Plugin <span class=\"string\">'rstacruz/sparkup'</span>, &#123;<span class=\"string\">'rtp'</span>: <span class=\"string\">'vim/'</span>&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">\" All of your Plugins must be added before the following line</span></div><div class=\"line\"><span class=\"keyword\">call</span> vundle#end()            <span class=\"comment\">\" required</span></div><div class=\"line\"><span class=\"keyword\">filetype</span> plugin <span class=\"built_in\">indent</span> <span class=\"keyword\">on</span>    <span class=\"comment\">\" required</span></div><div class=\"line\"><span class=\"comment\">\" To ignore plugin indent changes, instead use:</span></div><div class=\"line\"><span class=\"comment\">\"filetype plugin on</span></div><div class=\"line\"><span class=\"comment\">\"</span></div><div class=\"line\"><span class=\"comment\">\" Brief help</span></div><div class=\"line\"><span class=\"comment\">\" :PluginList       - lists configured plugins</span></div><div class=\"line\"><span class=\"comment\">\" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></div><div class=\"line\"><span class=\"comment\">\" :PluginSearch foo - searches for foo; append `!` to refresh local cache</span></div><div class=\"line\"><span class=\"comment\">\" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></div><div class=\"line\"><span class=\"comment\">\"</span></div><div class=\"line\"><span class=\"comment\">\" see :h vundle for more details or wiki for FAQ</span></div><div class=\"line\"><span class=\"comment\">\" Put your non-Plugin stuff after this line</span></div></pre></td></tr></table></figure></p>\n<p>在vi中执行命令<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">:PluginList</span>       - lists configured plugins</div><div class=\"line\"><span class=\"symbol\">:PluginInstall</span>    - installs plugins; append <span class=\"string\">`!`</span> to update <span class=\"keyword\">or</span> just <span class=\"symbol\">:PluginUpdate</span></div><div class=\"line\"><span class=\"symbol\">:PluginSearch</span> foo - searches <span class=\"keyword\">for</span> foo; append <span class=\"string\">`!`</span> to refresh local cache</div><div class=\"line\"><span class=\"symbol\">:PluginClean</span>      - confirms removal of unused plugins; append <span class=\"string\">`!`</span> to auto-approve removal</div><div class=\"line\"><span class=\"symbol\">:h</span> vundle         - more details</div></pre></td></tr></table></figure></p>\n<p>python相关插件<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">\"python相关插件</span></div><div class=\"line\"><span class=\"comment\">\"自动缩进</span></div><div class=\"line\">Plugin <span class=\"string\">'vim-scripts/indentpython.vim'</span></div><div class=\"line\"><span class=\"comment\">\"自动补全</span></div><div class=\"line\">Plugin <span class=\"string\">'Valloric/YouCompleteMe'</span></div><div class=\"line\"><span class=\"comment\">\"每次保存文件时Vim都会检查代码的语法</span></div><div class=\"line\">Plugin <span class=\"string\">'scrooloose/syntastic'</span></div><div class=\"line\"><span class=\"comment\">\"PEP8代码风格检查</span></div><div class=\"line\">Plugin <span class=\"string\">'nvie/vim-flake8'</span></div></pre></td></tr></table></figure></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"civo0mxk60001ulyq26lloitn","category_id":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxpo000sulyqe8ko9k2g"},{"post_id":"civo0mxk60001ulyq26lloitn","category_id":"civo0mxov000mulyqw5fd1jlx","_id":"civo0mxpq000uulyqs7tofqtk"},{"post_id":"civo0mxn2000aulyqe5ftixqs","category_id":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxq1000xulyqtc0ewo34"},{"post_id":"civo0mxn2000aulyqe5ftixqs","category_id":"civo0mxp7000pulyqyuth78eb","_id":"civo0mxq80010ulyqjy48omwl"},{"post_id":"civo0mxkz0003ulyqhudz99sa","category_id":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxqq0016ulyqhpnmz74l"},{"post_id":"civo0mxkz0003ulyqhudz99sa","category_id":"civo0mxq4000yulyqoi3c3wwi","_id":"civo0mxr00018ulyqaetr99nf"},{"post_id":"civo0mxo3000hulyq58pjp0qe","category_id":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxrd001eulyq485ngydk"},{"post_id":"civo0mxo3000hulyq58pjp0qe","category_id":"civo0mxqr0017ulyqk5rurso2","_id":"civo0mxrj001gulyqyb3rer2w"},{"post_id":"civo0mxm80007ulyqpl6gb1eg","category_id":"civo0mxll0005ulyqswfsbxy4","_id":"civo0mxrn001iulyq4jah432k"},{"post_id":"civo0mxm80007ulyqpl6gb1eg","category_id":"civo0mxr6001bulyqb8z57pp3","_id":"civo0mxrr001kulyqgzd6c4a4"},{"post_id":"civo0mxmw0009ulyqcbvmiy7j","category_id":"civo0mxoi000julyqw8gtpqyg","_id":"civo0mxru001lulyq8yvbo8st"},{"post_id":"civo0mxmw0009ulyqcbvmiy7j","category_id":"civo0mxrf001fulyq05uqspsm","_id":"civo0mxrz001nulyq12mv03tv"},{"post_id":"civo0mxng000dulyqvh1s60za","category_id":"civo0mxpp000tulyqgzfznokk","_id":"civo0mxs1001oulyq6qim7xm5"},{"post_id":"civo0mxng000dulyqvh1s60za","category_id":"civo0mxrp001julyqp8ohiktq","_id":"civo0mxs2001pulyq178hzyuz"},{"post_id":"civo0mxno000eulyqaourdpz6","category_id":"civo0mxpp000tulyqgzfznokk","_id":"civo0mxs4001qulyqlcflopqe"},{"post_id":"civo0mxno000eulyqaourdpz6","category_id":"civo0mxrp001julyqp8ohiktq","_id":"civo0mxsa001rulyqwzoou2gp"}],"PostTag":[{"post_id":"civo0mxk60001ulyq26lloitn","tag_id":"civo0mxm40006ulyqw6sfh5gi","_id":"civo0mxo8000iulyqcyrpg196"},{"post_id":"civo0mxk60001ulyq26lloitn","tag_id":"civo0mxn7000culyqajf680dg","_id":"civo0mxol000kulyqzcbt9vob"},{"post_id":"civo0mxkz0003ulyqhudz99sa","tag_id":"civo0mxny000gulyq5vzjrg0f","_id":"civo0mxp5000oulyqp3y3bhr1"},{"post_id":"civo0mxkz0003ulyqhudz99sa","tag_id":"civo0mxoo000lulyqx3d0auym","_id":"civo0mxp9000qulyqzpenc05n"},{"post_id":"civo0mxm80007ulyqpl6gb1eg","tag_id":"civo0mxp1000nulyqx6srsjfr","_id":"civo0mxq0000wulyq5hmgpcm2"},{"post_id":"civo0mxm80007ulyqpl6gb1eg","tag_id":"civo0mxpd000rulyqyqg02g2t","_id":"civo0mxq6000zulyq7uk37aad"},{"post_id":"civo0mxmw0009ulyqcbvmiy7j","tag_id":"civo0mxpr000vulyq32jdfh2i","_id":"civo0mxqb0012ulyq9uq1zdw0"},{"post_id":"civo0mxn2000aulyqe5ftixqs","tag_id":"civo0mxq80011ulyq9z23dw1o","_id":"civo0mxqp0015ulyq1z78opj1"},{"post_id":"civo0mxng000dulyqvh1s60za","tag_id":"civo0mxqn0014ulyq0n7mvl4s","_id":"civo0mxr5001aulyqw1aycsxu"},{"post_id":"civo0mxno000eulyqaourdpz6","tag_id":"civo0mxr20019ulyqmcmrxz5g","_id":"civo0mxrc001dulyqd3b2tkwd"},{"post_id":"civo0mxo3000hulyq58pjp0qe","tag_id":"civo0mxr9001culyquglnew9u","_id":"civo0mxrl001hulyqqjt2e4lx"}],"Tag":[{"name":"hexo","_id":"civo0mxm40006ulyqw6sfh5gi"},{"name":"npm","_id":"civo0mxn7000culyqajf680dg"},{"name":"shadowsocks","_id":"civo0mxny000gulyq5vzjrg0f"},{"name":"proxychains","_id":"civo0mxoo000lulyqx3d0auym"},{"name":"aws","_id":"civo0mxp1000nulyqx6srsjfr"},{"name":"mosh","_id":"civo0mxpd000rulyqyqg02g2t"},{"name":"expect","_id":"civo0mxpr000vulyq32jdfh2i"},{"name":"raspberrypi","_id":"civo0mxq80011ulyq9z23dw1o"},{"name":"crawler","_id":"civo0mxqn0014ulyq0n7mvl4s"},{"name":"scrapy","_id":"civo0mxr20019ulyqmcmrxz5g"},{"name":"vim","_id":"civo0mxr9001culyquglnew9u"}]}}